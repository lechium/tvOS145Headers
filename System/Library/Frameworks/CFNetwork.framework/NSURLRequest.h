/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:01:29 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/Frameworks/CFNetwork.framework/CFNetwork
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <CFNetwork/CFNetwork-Structs.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSMutableCopying.h>

@class NSURLRequestInternal, NSString, NSDictionary, NSData, NSInputStream, NSURL;

@interface NSURLRequest : NSObject <NSSecureCoding, NSCopying, NSMutableCopying> {

	NSURLRequestInternal* _internal;

}

@property (copy,readonly) NSString * HTTPMethod; 
@property (copy,readonly) NSDictionary * allHTTPHeaderFields; 
@property (copy,readonly) NSData * HTTPBody; 
@property (retain,readonly) NSInputStream * HTTPBodyStream; 
@property (readonly) BOOL HTTPShouldHandleCookies; 
@property (readonly) BOOL HTTPShouldUsePipelining; 
@property (readonly) URLRequest* _inner; 
@property (copy,readonly) NSURL * URL; 
@property (readonly) unsigned long long cachePolicy; 
@property (readonly) double timeoutInterval; 
@property (copy,readonly) NSURL * mainDocumentURL; 
@property (readonly) unsigned long long networkServiceType; 
@property (readonly) BOOL allowsCellularAccess; 
@property (readonly) BOOL allowsExpensiveNetworkAccess; 
@property (readonly) BOOL allowsConstrainedNetworkAccess; 
@property (readonly) BOOL assumesHTTP3Capable; 
+(BOOL)supportsSecureCoding;
+(id)requestWithURL:(id)arg1 ;
+(BOOL)allowsAnyHTTPSCertificateForHost:(id)arg1 ;
+(id)allowsSpecificHTTPSCertificateForHost:(id)arg1 ;
+(id)requestWithURL:(id)arg1 cachePolicy:(unsigned long long)arg2 timeoutInterval:(double)arg3 ;
+(void)setDefaultTimeoutInterval:(double)arg1 ;
+(double)defaultTimeoutInterval;
+(void)setAllowsAnyHTTPSCertificate:(BOOL)arg1 forHost:(id)arg2 ;
+(void)setAllowsSpecificHTTPSCertificate:(id)arg1 forHost:(id)arg2 ;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(id)description;
-(id)init;
-(void)dealloc;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id)initWithURL:(id)arg1 ;
-(NSURL *)URL;
-(id)_initWithCFURLRequest:(CFURLRequestRef)arg1 ;
-(id)valueForHTTPHeaderField:(id)arg1 ;
-(NSData *)HTTPBody;
-(NSInputStream *)HTTPBodyStream;
-(NSDictionary *)allHTTPHeaderFields;
-(URLRequest*)_inner;
-(id)_initWithInternal:(id)arg1 ;
-(id)_allHTTPHeaderFieldsAsArrays;
-(double)_payloadTransmissionTimeout;
-(id)_startTimeoutDate;
-(NSURL *)mainDocumentURL;
-(NSString *)HTTPMethod;
-(id)initWithURL:(id)arg1 cachePolicy:(unsigned long long)arg2 timeoutInterval:(double)arg3 ;
-(BOOL)_isIdempotent;
-(BOOL)_URLHasScheme:(id)arg1 ;
-(BOOL)_isSafeRequestForBackgroundDownload;
-(void)_removePropertyForKey:(id)arg1 ;
-(void)_setProperty:(id)arg1 forKey:(id)arg2 ;
-(id)_propertyForKey:(id)arg1 ;
-(BOOL)HTTPShouldHandleCookies;
-(unsigned long long)networkServiceType;
-(BOOL)allowsCellularAccess;
-(const CFURLRef)cfURL;
-(unsigned long long)cachePolicy;
-(double)timeoutInterval;
-(BOOL)allowsExpensiveNetworkAccess;
-(BOOL)allowsConstrainedNetworkAccess;
-(BOOL)assumesHTTP3Capable;
-(CFURLRequestRef)_CFURLRequest;
-(id)_copyReplacingURLWithURL:(id)arg1 ;
-(id)boundInterfaceIdentifier;
-(BOOL)_schemeWasUpgradedDueToDynamicHSTS;
-(BOOL)_ignoreHSTS;
-(BOOL)_preventHSTSStorage;
-(BOOL)_requiresShortConnectionTimeout;
-(id)HTTPContentType;
-(id)HTTPExtraCookies;
-(id)HTTPReferrer;
-(id)HTTPUserAgent;
-(BOOL)HTTPShouldUsePipelining;
-(id)contentDispositionEncodingFallbackArray;
-(unsigned long long)expectedWorkload;
-(double)_timeWindowDelay;
-(double)_timeWindowDuration;
@end

