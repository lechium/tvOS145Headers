/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:01:26 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <CoreFoundation/CoreFoundation-Structs.h>
#import <libobjc.A.dylib/CUByteCodable.h>
#import <libobjc.A.dylib/NSFetchRequestResult.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSMutableCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/NSFastEnumeration.h>

@class NSString;

@interface NSDictionary : NSObject <CUByteCodable, NSFetchRequestResult, NSCopying, NSMutableCopying, NSSecureCoding, NSFastEnumeration>

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) unsigned long long count; 
+(id)MCShortenedDictionary:(id)arg1 ;
+(id)MCShortenedArray:(id)arg1 ;
+(id)MCShortenedData:(id)arg1 ;
+(id)MCShortenedObject:(id)arg1 ;
+(id)MCDictionaryFromFile:(id)arg1 ;
+(id)createWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 error:(id*)arg3 ;
+(id)MI_dictionaryWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
+(id)dmlmr_buildVersionKey;
+(id)dmlmr_successKey;
+(id)dmlmr_lastMigrationResultsWithSuccess:(BOOL)arg1 buildVersion:(id)arg2 ;
+(id)newWithContentsOf:(id)arg1 immutable:(BOOL)arg2 ;
+(BOOL)supportsSecureCoding;
+(id)newWithContentsOf:(id)arg1 immutable:(BOOL)arg2 error:(id*)arg3 ;
+(id)dictionaryWithContentsOfFile:(id)arg1 ;
+(id)dictionaryWithContentsOfURL:(id)arg1 ;
+(id)dictionaryWithContentsOfURL:(id)arg1 error:(id*)arg2 ;
+(id)allocWithZone:(NSZone*)arg1 ;
+(BOOL)supportsSecureCoding;
+(id)dictionaryWithObjects:(id)arg1 forKeys:(id)arg2 ;
+(id)dictionary;
+(id)dictionaryWithObject:(id)arg1 forKey:(id)arg2 ;
+(id)dictionaryWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
+(id)dictionaryWithObjectsAndKeys:(id)arg1 ;
+(id)newDictionaryWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
+(id)dictionaryWithDictionary:(id)arg1 copyItems:(BOOL)arg2 ;
+(id)dictionaryWithDictionary:(id)arg1 ;
+(id)sharedKeySetForKeys:(id)arg1 ;
-(BOOL)_boolForKey:(id)arg1 ;
-(id)_ui_attributesForDictionaryContainingUIStringDrawingKeys;
-(BOOL)_ui_dictionaryContainsUIStringDrawingKeys;
-(id)_web_messageText;
-(int)_web_messageLineNumber;
-(id)_web_messageSourceURL;
-(int)_web_messageType;
-(id)_IS_stringForKey:(id)arg1 ;
-(id)_IS_arrayForKey:(id)arg1 ;
-(id)_IS_dictionaryForKey:(id)arg1 ;
-(id)_IS_objectOfClass:(Class)arg1 forKey:(id)arg2 ;
-(id)_IS_numberForKey:(id)arg1 ;
-(id)_webkit_objectForMIMEType:(id)arg1 ;
-(id)_webkit_stringForKey:(id)arg1 ;
-(BOOL)_webkit_boolForKey:(id)arg1 ;
-(id)_webkit_arrayForKey:(id)arg1 ;
-(id)_webkit_numberForKey:(id)arg1 ;
-(id)un_nonEmptyCopy;
-(id)un_safeCastObjectForKey:(id)arg1 class:(Class)arg2 ;
-(id)MCMutableDeepCopyWithZone:(NSZone*)arg1 ;
-(id)MCDeepCopyWithZone:(NSZone*)arg1 ;
-(id)MCDictionaryAdditiveDeltaToCreateDictionary:(id)arg1 ;
-(id)MCDictionarySubtractiveDeltaToCreateDictionary:(id)arg1 ;
-(id)MCRemovedKeysFromDictionary:(id)arg1 ;
-(id)MCDictionaryWithLeafValuesSetToValue:(id)arg1 ;
-(id)MCInsertedKeysFromDictionary:(id)arg1 withNewLeafValue:(id)arg2 ;
-(BOOL)MCWriteToBinaryFile:(id)arg1 ;
-(BOOL)MCWriteToBinaryFile:(id)arg1 atomically:(BOOL)arg2 ;
-(id)MCMutableDeepCopy;
-(id)MCDeepCopy;
-(id)MCRetainRequiredObjectKey:(id)arg1 type:(Class)arg2 errorDomain:(id)arg3 missingDataCode:(long long)arg4 missingDataErrorString:(id)arg5 invalidDataCode:(long long)arg6 invalidDataErrorString:(id)arg7 outError:(id*)arg8 ;
-(id)MCRetainOptionalObjectKey:(id)arg1 type:(Class)arg2 errorDomain:(id)arg3 invalidDataCode:(long long)arg4 invalidDataErrorString:(id)arg5 outError:(id*)arg6 ;
-(id)MCRetainRequiredNonZeroLengthStringKey:(id)arg1 errorDomain:(id)arg2 missingDataCode:(long long)arg3 missingDataErrorString:(id)arg4 invalidDataCode:(long long)arg5 invalidDataErrorString:(id)arg6 outError:(id*)arg7 ;
-(id)MCRetainOptionalNonZeroLengthStringKey:(id)arg1 errorDomain:(id)arg2 invalidDataCode:(long long)arg3 invalidDataErrorString:(id)arg4 outError:(id*)arg5 ;
-(id)MCShortenedPlistDescription;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(id)CAMLType;
-(KeyValueArray*)CA_copyRenderKeyValueArray;
-(id)dictionaryChanging:(id)arg1 to:(id)arg2 ;
-(id)ac_mapValues:(/*^block*/id)arg1 ;
-(id)ac_mapValuesNullable:(/*^block*/id)arg1 ;
-(id)entriesToStringWithIndent:(int)arg1 debug:(BOOL)arg2 ;
-(id)encodedDataAndReturnError:(id*)arg1 ;
-(const char*)encodedBytesAndReturnLength:(unsigned long long*)arg1 error:(id*)arg2 ;
-(void)bs_each:(/*^block*/id)arg1 ;
-(id)bs_safeObjectForKey:(id)arg1 ofType:(Class)arg2 ;
-(id)bs_filter:(/*^block*/id)arg1 ;
-(BOOL)bs_boolForKey:(id)arg1 ;
-(id)bs_safeNumberForKey:(id)arg1 ;
-(id)bs_safeStringForKey:(id)arg1 ;
-(id)bs_safeURLForKey:(id)arg1 ;
-(id)bs_safeArrayForKey:(id)arg1 ;
-(id)bs_safeDictionaryForKey:(id)arg1 ;
-(id)bs_dictionaryByAddingEntriesFromDictionary:(id)arg1 ;
-(unsigned long long)_LS_integerForKey:(id)arg1 ;
-(id)ls_parseQueryForIdentifiers:(id)arg1 ;
-(unsigned long long)ls_hashQuery;
-(id)ls_fixupExtensionPointIdentifierKey;
-(id)ls_insertExtensionPointVersion:(id)arg1 ;
-(id)ls_resolvePlugInKitInfoPlistWithDictionary:(id)arg1 ;
-(BOOL)_LS_BoolForKey:(id)arg1 ;
-(id)ax_deepMutableCopy;
-(BOOL)MI_writeToURL:(id)arg1 format:(unsigned long long)arg2 options:(unsigned long long)arg3 error:(id*)arg4 ;
-(id)_EX_objectForKey:(id)arg1 ofClass:(Class)arg2 ;
-(id)_EX_dictionaryForKey:(id)arg1 ;
-(id)_EX_stringForKey:(id)arg1 ;
-(BOOL)_EX_boolForKey:(id)arg1 ;
-(BOOL)_EX_boolForKey:(id)arg1 defaultValue:(BOOL)arg2 ;
-(id)_EX_dictionaryByRemovingObjectForKey:(id)arg1 ;
-(id)_EX_dictionaryBySettingObject:(id)arg1 forKey:(id)arg2 ;
-(id)dmlmr_success;
-(id)dmlmr_buildVersion;
-(id)initWithContentsOfFile:(id)arg1 ;
-(id)initWithContentsOfURL:(id)arg1 ;
-(Class)classForCoder;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id)replacementObjectForPortCoder:(id)arg1 ;
-(unsigned long long)fileSize;
-(BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2 ;
-(id)initWithContentsOfURL:(id)arg1 error:(id*)arg2 ;
-(id)_stringToWrite;
-(BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2 ;
-(BOOL)writeToURL:(id)arg1 error:(id*)arg2 ;
-(id)valueForKey:(id)arg1 ;
-(id)descriptionInStringsFileFormat;
-(id)_web_numberForKey:(id)arg1 ;
-(int)_web_intForKey:(id)arg1 ;
-(id)_web_stringForKey:(id)arg1 ;
-(id)_web_objectForMIMEType:(id)arg1 ;
-(id)valueForKeyPath:(id)arg1 ;
-(id)fileModificationDate;
-(id)fileType;
-(unsigned long long)filePosixPermissions;
-(id)fileOwnerAccountName;
-(unsigned long long)fileOwnerAccountNumber;
-(id)fileGroupOwnerAccountName;
-(unsigned long long)fileGroupOwnerAccountNumber;
-(long long)fileSystemNumber;
-(unsigned long long)fileSystemFileNumber;
-(BOOL)fileExtensionHidden;
-(unsigned)fileHFSCreatorCode;
-(unsigned)fileHFSTypeCode;
-(BOOL)fileIsImmutable;
-(BOOL)fileIsAppendOnly;
-(id)fileCreationDate;
-(id)fileOwnerAccountID;
-(id)fileGroupOwnerAccountID;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(NSString *)description;
-(unsigned long long)count;
-(id)objectEnumerator;
-(unsigned long long)countByEnumeratingWithState:(SCD_Struct_NS1*)arg1 objects:(id*)arg2 count:(unsigned long long)arg3 ;
-(id)allObjects;
-(unsigned long long)countForObject:(id)arg1 ;
-(void)getObjects:(id*)arg1 andKeys:(id*)arg2 count:(unsigned long long)arg3 ;
-(id)objectForKey:(id)arg1 ;
-(id)keyEnumerator;
-(void)__apply:(/*function pointer*/void*)arg1 context:(void*)arg2 ;
-(void)enumerateKeysAndObjectsWithOptions:(unsigned long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(id)keyOfEntryWithOptions:(unsigned long long)arg1 passingTest:(/*^block*/id)arg2 ;
-(id)keysOfEntriesWithOptions:(unsigned long long)arg1 passingTest:(/*^block*/id)arg2 ;
-(id)objectForKeyedSubscript:(id)arg1 ;
-(id)_cfMutableCopy;
-(BOOL)containsObject:(id)arg1 ;
-(unsigned long long)countForKey:(id)arg1 ;
-(BOOL)containsKey:(id)arg1 ;
-(BOOL)__getValue:(id*)arg1 forKey:(id)arg2 ;
-(void)getObjects:(id*)arg1 andKeys:(id*)arg2 ;
-(BOOL)isEqualToDictionary:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id)descriptionWithLocale:(id)arg1 ;
-(unsigned long long)_cfTypeID;
-(id)allKeys;
-(id)allValues;
-(id)initWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
-(void)getObjects:(id*)arg1 ;
-(id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2 ;
-(id)keysSortedByValueWithOptions:(unsigned long long)arg1 usingComparator:(/*^block*/id)arg2 ;
-(id)initWithDictionary:(id)arg1 copyItems:(BOOL)arg2 ;
-(id)initWithObjects:(id)arg1 forKeys:(id)arg2 ;
-(BOOL)isNSDictionary__;
-(id)allKeysForObject:(id)arg1 ;
-(void)enumerateKeysAndObjectsUsingBlock:(/*^block*/id)arg1 ;
-(void)getKeys:(id*)arg1 ;
-(id)invertedDictionary;
-(id)keyOfEntryPassingTest:(/*^block*/id)arg1 ;
-(id)keysOfEntriesPassingTest:(/*^block*/id)arg1 ;
-(id)keysSortedByValueUsingComparator:(/*^block*/id)arg1 ;
-(id)keysSortedByValueUsingSelector:(SEL)arg1 ;
-(id)objectsForKeys:(id)arg1 notFoundMarker:(id)arg2 ;
-(id)initWithDictionary:(id)arg1 ;
-(id)initWithObject:(id)arg1 forKey:(id)arg2 ;
-(id)initWithObjectsAndKeys:(id)arg1 ;
@end

