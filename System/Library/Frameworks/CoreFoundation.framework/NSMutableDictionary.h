/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:01:26 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <CoreFoundation/CoreFoundation-Structs.h>
#import <CoreFoundation/NSDictionary.h>

@interface NSMutableDictionary : NSDictionary
+(id)_dictionaryWithContentsOfDictionaries:(id)arg1 ;
+(id)dictionaryWithCapacity:(unsigned long long)arg1 ;
+(id)dictionaryWithSharedKeySet:(id)arg1 ;
-(void)un_safeSetObject:(id)arg1 forKey:(id)arg2 ;
-(id)MCValidateAndRemoveArrayOfClass:(Class)arg1 withKey:(id)arg2 isRequired:(BOOL)arg3 outError:(id*)arg4 ;
-(id)MCValidateAndRemoveNonZeroLengthStringWithKey:(id)arg1 isRequired:(BOOL)arg2 outError:(id*)arg3 ;
-(void)MCDeepCopyEntriesFromDictionary:(id)arg1 ;
-(void)MCDeepCopyMissingEntriesFromDictionary:(id)arg1 ;
-(void)MCSetObjectIfNotNil:(id)arg1 forKey:(id)arg2 ;
-(void)MCSetBoolRestriction:(id)arg1 value:(BOOL)arg2 ;
-(void)MCDeleteBoolRestriction:(id)arg1 ;
-(void)MCSetValueRestriction:(id)arg1 value:(id)arg2 ;
-(void)MCSetIntersectionRestriction:(id)arg1 values:(id)arg2 ;
-(void)MCSetUnionRestriction:(id)arg1 values:(id)arg2 ;
-(void)MCSetIntersectionSetting:(id)arg1 values:(id)arg2 ;
-(void)MCSetUnionSetting:(id)arg1 values:(id)arg2 ;
-(void)MCFilterRestrictionPayloadKeys:(id)arg1 ;
-(id)MCValidateAndRemoveObjectOfClass:(Class)arg1 withKey:(id)arg2 isRequired:(BOOL)arg3 outError:(id*)arg4 ;
-(id)MCValidateAndRemoveArrayOfClass:(Class)arg1 withKey:(id)arg2 isRequired:(BOOL)arg3 allowZeroLengthString:(BOOL)arg4 outError:(id*)arg5 ;
-(void)MCFixUpRestrictionsDictionaryForMDMReporting;
-(id)MCMutableDictionaryContainingValidatedKeysAndClasses:(id)arg1 removeKeys:(BOOL)arg2 outError:(id*)arg3 ;
-(id)_mutableDictionaryAtKeyPath:(id)arg1 ;
-(void)_overlayCustomValueAtKeyPath:(id)arg1 intoTargetDictionary:(id)arg2 fromSourceDictionary:(id)arg3 handler:(/*^block*/id)arg4 ;
-(void)_overlayValueAtKey:(id)arg1 intoTargetDictionary:(id)arg2 fromSourceDictionary:(id)arg3 targetTakePrecedent:(BOOL)arg4 nestedDictionaryHandler:(/*^block*/id)arg5 ;
-(id)_createOrConvertToMutableDictionaryFromDictionary:(id)arg1 ;
-(void)pk_overlayDictionary:(id)arg1 existingValuesTakePrecedent:(BOOL)arg2 exceptKeyPaths:(id)arg3 exemptionHandler:(/*^block*/id)arg4 ;
-(void)pk_removeItemsAtKeyPaths:(id)arg1 ;
-(void)bs_setSafeObject:(id)arg1 forKey:(id)arg2 ;
-(id)bs_takeObjectForKey:(id)arg1 ;
-(void)addTurnstileInfoDesc:(stackshot_thread_turnstileinfo*)arg1 count:(unsigned)arg2 ;
-(void)addWaitInfoDesc:(stackshot_thread_waitinfo*)arg1 count:(unsigned)arg2 ;
-(BOOL)osa_logCounter_isLog:(id)arg1 byKey:(id)arg2 count:(unsigned long long*)arg3 withinLimit:(unsigned long long*)arg4 withOptions:(id)arg5 ;
-(void)osa_logCounter_incrementForSubtype:(id)arg1 signature:(id)arg2 filepath:(const char*)arg3 ;
-(void)osa_logCounter_incrementForSubtype_internal:(id)arg1 signature:(id)arg2 filepath:(const char*)arg3 ;
-(void)osa_logCounter_countLogTypes_internal:(id)arg1 forOwner:(id)arg2 ;
-(unsigned long long)osa_logCounter_getForSubtype:(id)arg1 forOwner:(id)arg2 ;
-(void)osa_logCounter_recordNixedDuplicate:(const char*)arg1 ;
-(id)initWithContentsOfFile:(id)arg1 ;
-(id)initWithContentsOfURL:(id)arg1 ;
-(Class)classForCoder;
-(void)setValue:(id)arg1 forKey:(id)arg2 ;
-(id)initWithContentsOfURL:(id)arg1 error:(id*)arg2 ;
-(void)_web_setInt:(int)arg1 forKey:(id)arg2 ;
-(void)_web_setBool:(BOOL)arg1 forKey:(id)arg2 ;
-(void)_web_setObject:(id)arg1 forUncopiedKey:(id)arg2 ;
-(void)removeAllObjects;
-(void)_mutate;
-(id)initWithCapacity:(unsigned long long)arg1 ;
-(void)invert;
-(void)__addObject:(id)arg1 forKey:(id)arg2 ;
-(void)replaceObject:(id)arg1 forKey:(id)arg2 ;
-(void)__setObject:(id)arg1 forKey:(id)arg2 ;
-(void)removeObjectForKey:(id)arg1 ;
-(void)setObject:(id)arg1 forKey:(id)arg2 ;
-(void)addObject:(id)arg1 forKey:(id)arg2 ;
-(void)removeEntriesWithOptions:(unsigned long long)arg1 passingTest:(/*^block*/id)arg2 ;
-(void)addEntriesFromDictionary:(id)arg1 ;
-(void)addObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
-(void)addObjects:(id)arg1 forKeys:(id)arg2 ;
-(void)removeEntriesInDictionary:(id)arg1 ;
-(void)removeEntriesPassingTest:(/*^block*/id)arg1 ;
-(void)removeKeysForObject:(id)arg1 ;
-(void)removeObjectsForKeys:(id)arg1 ;
-(void)replaceObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
-(void)replaceObjects:(id)arg1 forKeys:(id)arg2 ;
-(void)setEntriesFromDictionary:(id)arg1 ;
-(void)setObject:(id)arg1 forKeyedSubscript:(id)arg2 ;
-(void)setObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
-(void)setObjects:(id)arg1 forKeys:(id)arg2 ;
-(void)setDictionary:(id)arg1 ;
-(id)initWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
@end

