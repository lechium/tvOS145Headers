/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:05:43 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <MediaPlayer/MediaPlayer-Structs.h>
#import <libobjc.A.dylib/NSURLSessionDataDelegate.h>
#import <libobjc.A.dylib/AVAssetResourceLoaderDelegate.h>
#import <libobjc.A.dylib/MPArtworkDataSource.h>

@protocol OS_dispatch_queue, NSURLSessionDataDelegate;
@class NSURLSessionConfiguration, NSURL, NSObject, NSCache, NSMutableDictionary, NSMapTable, NSURLSession, NSURLCache, NSString;

@interface MPAbstractNetworkArtworkDataSource : NSObject <NSURLSessionDataDelegate, AVAssetResourceLoaderDelegate, MPArtworkDataSource> {

	BOOL _usesFallbackCache;
	NSURLSessionConfiguration* _URLSessionConfiguration;
	NSURL* _videoArtworkCacheURL;
	NSObject*<OS_dispatch_queue> _imageAccessQueue;
	NSObject*<OS_dispatch_queue> _videoAccessQueue;
	NSObject*<OS_dispatch_queue> _callbackQueue;
	NSCache* _fallbackImageArtworkRepresentationCache;
	NSMutableDictionary* _pendingRequestURLToCompletionHandlers;
	NSMapTable* _catalogImageTaskMap;
	NSMapTable* _resourceLoaderStoragePolicyMap;
	NSMutableDictionary* _videoTaskToCacheStoragePolicy;
	NSMutableDictionary* _videoTaskToResourceLoadingRequest;
	NSMutableDictionary* _videoTaskToData;
	NSURLSession* _imageURLSession;
	NSURLSession* _videoURLSession;
	NSURLCache* _videoURLCache;
	id<NSURLSessionDataDelegate> _URLSessionDataDelegateProxy;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> imageAccessQueue;                                //@synthesize imageAccessQueue=_imageAccessQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> videoAccessQueue;                                //@synthesize videoAccessQueue=_videoAccessQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> callbackQueue;                                   //@synthesize callbackQueue=_callbackQueue - In the implementation block
@property (nonatomic,retain) NSCache * fallbackImageArtworkRepresentationCache;                            //@synthesize fallbackImageArtworkRepresentationCache=_fallbackImageArtworkRepresentationCache - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * pendingRequestURLToCompletionHandlers;                  //@synthesize pendingRequestURLToCompletionHandlers=_pendingRequestURLToCompletionHandlers - In the implementation block
@property (nonatomic,retain) NSMapTable * catalogImageTaskMap;                                             //@synthesize catalogImageTaskMap=_catalogImageTaskMap - In the implementation block
@property (nonatomic,retain) NSMapTable * resourceLoaderStoragePolicyMap;                                  //@synthesize resourceLoaderStoragePolicyMap=_resourceLoaderStoragePolicyMap - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * videoTaskToCacheStoragePolicy;                          //@synthesize videoTaskToCacheStoragePolicy=_videoTaskToCacheStoragePolicy - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * videoTaskToResourceLoadingRequest;                      //@synthesize videoTaskToResourceLoadingRequest=_videoTaskToResourceLoadingRequest - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * videoTaskToData;                                        //@synthesize videoTaskToData=_videoTaskToData - In the implementation block
@property (nonatomic,retain) NSURLSession * imageURLSession;                                               //@synthesize imageURLSession=_imageURLSession - In the implementation block
@property (nonatomic,retain) NSURLSession * videoURLSession;                                               //@synthesize videoURLSession=_videoURLSession - In the implementation block
@property (assign,nonatomic,__weak) NSURLCache * videoURLCache;                                            //@synthesize videoURLCache=_videoURLCache - In the implementation block
@property (assign,nonatomic,__weak) id<NSURLSessionDataDelegate> URLSessionDataDelegateProxy;              //@synthesize URLSessionDataDelegateProxy=_URLSessionDataDelegateProxy - In the implementation block
@property (nonatomic,readonly) NSURLSessionConfiguration * URLSessionConfiguration;                        //@synthesize URLSessionConfiguration=_URLSessionConfiguration - In the implementation block
@property (assign,nonatomic) BOOL usesFallbackCache;                                                       //@synthesize usesFallbackCache=_usesFallbackCache - In the implementation block
@property (nonatomic,retain) NSURL * videoArtworkCacheURL;                                                 //@synthesize videoArtworkCacheURL=_videoArtworkCacheURL - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)_applyVideoCacheURL:(id)arg1 toConfiguration:(id)arg2 ;
+(void)_applyImageURLCachePolicy:(unsigned long long)arg1 cacheDiskPath:(id)arg2 toConfiguration:(id)arg3 ;
-(BOOL)respondsToSelector:(SEL)arg1 ;
-(id)init;
-(void)dealloc;
-(void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(NSObject*<OS_dispatch_queue>)callbackQueue;
-(void)setCallbackQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(BOOL)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2 ;
-(void)resourceLoader:(id)arg1 didCancelLoadingRequest:(id)arg2 ;
-(void)_didReceiveMemoryWarningNotification:(id)arg1 ;
-(id)existingArtworkEffectResultForEffectType:(long long)arg1 catalog:(id)arg2 options:(id)arg3 ;
-(void)loadArtworkEffectResultForEffectType:(long long)arg1 catalog:(id)arg2 options:(id)arg3 systemEffectHandler:(/*^block*/id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(BOOL)areRepresentationsOfKind:(long long)arg1 availableForCatalog:(id)arg2 ;
-(id)existingRepresentationOfKind:(long long)arg1 forArtworkCatalog:(id)arg2 ;
-(void)loadRepresentationOfKind:(long long)arg1 forArtworkCatalog:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(BOOL)areRepresentationsAvailableForCatalog:(id)arg1 ;
-(BOOL)isRepresentation:(id)arg1 bestRepresentationForArtworkCatalog:(id)arg2 ;
-(id)existingRepresentationForArtworkCatalog:(id)arg1 ;
-(void)loadRepresentationForArtworkCatalog:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)cancelLoadingRepresentationForArtworkCatalog:(id)arg1 ;
-(id)visualIdenticalityIdentifierForCatalog:(id)arg1 ;
-(void)updateURLSessionWithCachePolicy:(unsigned long long)arg1 cachePath:(id)arg2 ;
-(NSCache *)fallbackImageArtworkRepresentationCache;
-(void)setVideoArtworkCacheURL:(NSURL *)arg1 ;
-(id)supportedSizesForCatalog:(id)arg1 ;
-(id)requestForCatalog:(id)arg1 size:(CGSize)arg2 ;
-(id)cacheKeyForCatalog:(id)arg1 size:(CGSize)arg2 ;
-(id)sortedSupportedSizesForCatalog:(id)arg1 ;
-(BOOL)shouldLookForLargerImageRepresentationsWhenBestRepresentationIsUnavailable;
-(BOOL)wantsBackgroundImageDecompression;
-(id)requestForCatalog:(id)arg1 kind:(long long)arg2 size:(CGSize)arg3 ;
-(CGSize)bestAvailableSizeForCatalog:(id)arg1 ;
-(id)cacheKeyForCatalog:(id)arg1 kind:(long long)arg2 size:(CGSize)arg3 ;
-(id)_artworkRepresentationWithImageFromData:(id)arg1 forURLResponse:(id)arg2 catalog:(id)arg3 size:(CGSize)arg4 immediateImageDecompressionAllowed:(BOOL)arg5 ;
-(id)_existingRepresentationFromURLCacheForArtworkCatalog:(id)arg1 immediateImageDecompressionAllowed:(BOOL)arg2 ;
-(BOOL)_isRepresentationSize:(CGSize)arg1 validForCatalog:(id)arg2 ;
-(id)_existingRepresentativeObjectForArtworkCatalog:(id)arg1 kind:(long long)arg2 handler:(/*^block*/id)arg3 ;
-(id)_requestForCatalog:(id)arg1 kind:(long long)arg2 size:(CGSize)arg3 ;
-(void)_performAsyncBarrierBlockOnQueue:(id)arg1 block:(/*^block*/id)arg2 ;
-(void)_performSyncBlockOnQueue:(id)arg1 block:(/*^block*/id)arg2 ;
-(id)_bestVideoArtworkRepresentationForCatalog:(id)arg1 ;
-(id)_cacheKeyForCatalog:(id)arg1 kind:(long long)arg2 size:(CGSize)arg3 ;
-(CGSize)_bestAvailableSizeForCatalog:(id)arg1 kind:(long long)arg2 ;
-(BOOL)_subclassImplementsSelector:(SEL)arg1 ;
-(void)_didReceiveWillEnterForegroundNotification:(id)arg1 ;
-(NSURLSessionConfiguration *)URLSessionConfiguration;
-(BOOL)usesFallbackCache;
-(void)setUsesFallbackCache:(BOOL)arg1 ;
-(NSURL *)videoArtworkCacheURL;
-(NSObject*<OS_dispatch_queue>)imageAccessQueue;
-(void)setImageAccessQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)videoAccessQueue;
-(void)setVideoAccessQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setFallbackImageArtworkRepresentationCache:(NSCache *)arg1 ;
-(NSMutableDictionary *)pendingRequestURLToCompletionHandlers;
-(void)setPendingRequestURLToCompletionHandlers:(NSMutableDictionary *)arg1 ;
-(NSMapTable *)catalogImageTaskMap;
-(void)setCatalogImageTaskMap:(NSMapTable *)arg1 ;
-(NSMapTable *)resourceLoaderStoragePolicyMap;
-(void)setResourceLoaderStoragePolicyMap:(NSMapTable *)arg1 ;
-(NSMutableDictionary *)videoTaskToCacheStoragePolicy;
-(void)setVideoTaskToCacheStoragePolicy:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)videoTaskToResourceLoadingRequest;
-(void)setVideoTaskToResourceLoadingRequest:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)videoTaskToData;
-(void)setVideoTaskToData:(NSMutableDictionary *)arg1 ;
-(NSURLSession *)imageURLSession;
-(void)setImageURLSession:(NSURLSession *)arg1 ;
-(NSURLSession *)videoURLSession;
-(void)setVideoURLSession:(NSURLSession *)arg1 ;
-(NSURLCache *)videoURLCache;
-(void)setVideoURLCache:(NSURLCache *)arg1 ;
-(id<NSURLSessionDataDelegate>)URLSessionDataDelegateProxy;
-(void)setURLSessionDataDelegateProxy:(id<NSURLSessionDataDelegate>)arg1 ;
@end

