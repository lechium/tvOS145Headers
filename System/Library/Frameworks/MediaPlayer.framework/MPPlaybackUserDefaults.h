/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:05:44 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */


@protocol OS_dispatch_queue;
#import <MediaPlayer/MediaPlayer-Structs.h>
@class NSUserDefaults, NSObject, MPPlaybackEQSetting, NSNumber;

@interface MPPlaybackUserDefaults : NSObject {

	NSUserDefaults* _iPodUserDefaults;
	NSUserDefaults* _videoUserDefaults;
	NSUserDefaults* _mediaPlaybackCoreUserDefaults;
	NSUserDefaults* _airplayUserDefaults;
	NSObject*<OS_dispatch_queue> _accountsQueue;
	SCD_Struct_MP59 _notifyTokens;
	MPPlaybackEQSetting* _musicEQSetting;
	NSNumber* _devicePrivateListeningEnabled;
	long long _preferredVideoDownloadResolution;

}

@property (nonatomic,retain) MPPlaybackEQSetting * musicEQSetting;                                                       //@synthesize musicEQSetting=_musicEQSetting - In the implementation block
@property (assign,nonatomic) long long musicRepeatType; 
@property (assign,nonatomic) long long musicShuffleType; 
@property (nonatomic,readonly) BOOL soundCheckEnabled; 
@property (getter=isPrivateListeningEnabled,nonatomic,copy) NSNumber * privateListeningEnabled; 
@property (getter=isDevicePrivateListeningEnabled,nonatomic,copy) NSNumber * devicePrivateListeningEnabled;              //@synthesize devicePrivateListeningEnabled=_devicePrivateListeningEnabled - In the implementation block
@property (assign,nonatomic) long long preferredMusicLowBandwidthResolution; 
@property (assign,nonatomic) long long preferredMusicHighBandwidthResolution; 
@property (assign,nonatomic) long long preferredMusicDownloadResolution; 
@property (nonatomic,readonly) long long preferredVideoLowBandwidthResolution; 
@property (nonatomic,readonly) long long preferredVideoHighBandwidthResolution; 
@property (nonatomic,readonly) long long preferredVideoDownloadResolution;                                               //@synthesize preferredVideoDownloadResolution=_preferredVideoDownloadResolution - In the implementation block
@property (nonatomic,readonly) BOOL allowsHighQualityMusicStreamingOnCellular; 
@property (nonatomic,readonly) BOOL disableAssetCaching; 
@property (nonatomic,readonly) float progressiveDownloadAssetRatio; 
@property (nonatomic,readonly) BOOL disableAudioAnalysis; 
@property (nonatomic,readonly) BOOL disableMiniSINF; 
@property (nonatomic,readonly) BOOL disablePeriodicStateRestore; 
@property (nonatomic,readonly) BOOL disableQHO; 
@property (nonatomic,readonly) BOOL forceMusicResolution; 
@property (nonatomic,readonly) long long forcedMusicResolution; 
@property (nonatomic,readonly) BOOL forceMusicStreaming; 
@property (nonatomic,readonly) BOOL forceLibrarySupplementalContexts; 
@property (nonatomic,readonly) BOOL includeContentItemDebugFields; 
@property (nonatomic,readonly) long long maximumQueueHandOffSize; 
@property (nonatomic,readonly) BOOL showResolutionDebugUI; 
@property (nonatomic,readonly) BOOL speakerRouteEnabled; 
+(id)standardUserDefaults;
-(void)dealloc;
-(id)_init;
-(void)setPrivateListeningEnabled:(NSNumber *)arg1 ;
-(id)isPrivateListeningEnabled;
-(BOOL)autoPlayEnabledForUserIdentity:(id)arg1 ;
-(void)setAutoPlayEnabled:(BOOL)arg1 forUserIdentity:(id)arg2 ;
-(MPPlaybackEQSetting *)musicEQSetting;
-(long long)musicRepeatType;
-(void)setMusicRepeatType:(long long)arg1 ;
-(long long)musicShuffleType;
-(void)setMusicShuffleType:(long long)arg1 ;
-(BOOL)soundCheckEnabled;
-(id)isDevicePrivateListeningEnabled;
-(BOOL)privateListeningEnabledForHomeUserIdentifier:(id)arg1 error:(id*)arg2 ;
-(void)setPrivateListeningEnabled:(BOOL)arg1 forHomeUserIdentifier:(id)arg2 error:(id*)arg3 ;
-(long long)preferredMusicLowBandwidthResolution;
-(void)setPreferredMusicLowBandwidthResolution:(long long)arg1 ;
-(long long)preferredMusicHighBandwidthResolution;
-(void)setPreferredMusicHighBandwidthResolution:(long long)arg1 ;
-(long long)preferredMusicDownloadResolution;
-(void)setPreferredMusicDownloadResolution:(long long)arg1 ;
-(long long)preferredVideoLowBandwidthResolution;
-(long long)preferredVideoHighBandwidthResolution;
-(BOOL)allowsHighQualityMusicStreamingOnCellular;
-(BOOL)disableAssetCaching;
-(float)progressiveDownloadAssetRatio;
-(BOOL)disableAudioAnalysis;
-(BOOL)disableMiniSINF;
-(BOOL)disablePeriodicStateRestore;
-(BOOL)disableQHO;
-(BOOL)forceMusicResolution;
-(long long)forcedMusicResolution;
-(BOOL)forceMusicStreaming;
-(BOOL)forceLibrarySupplementalContexts;
-(BOOL)includeContentItemDebugFields;
-(BOOL)showResolutionDebugUI;
-(long long)maximumQueueHandOffSize;
-(BOOL)speakerRouteEnabled;
-(void)resetAllInternalSettings;
-(void)_migrateUserDefaults;
-(void)_loadAccountProperties;
-(void)_accountStoreChangedNotification:(id)arg1 ;
-(void)setMusicEQSetting:(MPPlaybackEQSetting *)arg1 ;
-(void)setDevicePrivateListeningEnabled:(NSNumber *)arg1 ;
-(long long)preferredVideoDownloadResolution;
@end

