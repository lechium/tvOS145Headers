/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:10:19 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/Frameworks/TVMLKit.framework/TVMLKit
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <TVMLKit/TVMLKit-Structs.h>
#import <TVMLKit/TVPlaying.h>
#import <libobjc.A.dylib/AVPlayerViewControllerDelegate.h>
#import <libobjc.A.dylib/AVPlayerViewControllerPlaybackDelegate.h>
#import <libobjc.A.dylib/AVPlayerViewControllerDelegate.h>

@protocol TVPlayerBridging, TVPlayerInternalDelegate;
@class AVPlayer, TVMediaItem, TVPlaylist, NSDate, NSDictionary, NSMutableSet, NSMutableDictionary, AVPlayerItem, NSString;

@interface TVPlayer : NSObject <TVPlaying, AVPlayerViewControllerDelegate, AVPlayerViewControllerPlaybackDelegate, AVPlayerViewControllerDelegate> {

	long long _state;
	long long _modifier;
	TVPlaylist* _playlist;
	double _scanRate;
	NSMutableSet* _observedTimedMetadataKeys;
	NSMutableDictionary* _observedTimeIntervalMap;
	NSMutableDictionary* _observedTimeBoundaryMap;
	struct {
		BOOL respondsToShouldAllowPlaybackWithRating;
		BOOL respondsToShouldStartPlaybackAtTime;
	}  _internalDelegateFlags;
	BOOL _currentMediaItemHasVideoContent;
	long long _resumeMenuBehavior;
	NSDictionary* userInfo;
	TVMediaItem* _currentMediaItem;
	id<TVPlayerBridging> _bridge;
	id<TVPlayerInternalDelegate> _internalDelegate;
	AVPlayer* _player;
	AVPlayerItem* _currentPlayerItem;

}

@property (nonatomic,readonly) AVPlayerItem * currentPlayerItem;                                //@synthesize currentPlayerItem=_currentPlayerItem - In the implementation block
@property (assign,nonatomic) BOOL currentMediaItemHasVideoContent;                              //@synthesize currentMediaItemHasVideoContent=_currentMediaItemHasVideoContent - In the implementation block
@property (assign,nonatomic,__weak) id<TVPlayerInternalDelegate> internalDelegate;              //@synthesize internalDelegate=_internalDelegate - In the implementation block
@property (nonatomic,readonly) AVPlayer * player;                                               //@synthesize player=_player - In the implementation block
@property (nonatomic,readonly) TVPlaylist * playlist; 
@property (nonatomic,readonly) long long state; 
@property (nonatomic,readonly) TVMediaItem * currentMediaItem;                                  //@synthesize currentMediaItem=_currentMediaItem - In the implementation block
@property (nonatomic,readonly) TVMediaItem * nextMediaItem; 
@property (nonatomic,readonly) TVMediaItem * previousMediaItem; 
@property (nonatomic,readonly) AVPlayer * avPlayer; 
@property (assign,nonatomic,__weak) id<TVPlayerBridging> bridge;                                //@synthesize bridge=_bridge - In the implementation block
@property (assign,nonatomic) double elapsedTime; 
@property (nonatomic,retain) NSDate * elapsedDate; 
@property (nonatomic,readonly) double duration; 
@property (nonatomic,readonly) long long modifier; 
@property (nonatomic,retain) NSDictionary * userInfo; 
@property (assign,nonatomic) double scanRate; 
@property (assign,getter=isMuted,nonatomic) BOOL muted; 
@property (assign,nonatomic) BOOL showsResumeMenu; 
@property (assign,nonatomic) long long resumeMenuBehavior;                                      //@synthesize resumeMenuBehavior=_resumeMenuBehavior - In the implementation block
@property (assign,nonatomic) BOOL preventsSleepDuringVideoPlayback; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(NSString *)debugDescription;
-(id)init;
-(void)dealloc;
-(NSDictionary *)userInfo;
-(long long)state;
-(void)setState:(long long)arg1 ;
-(void)stop;
-(void)setUserInfo:(NSDictionary *)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)pause;
-(long long)modifier;
-(void)reset;
-(void)next;
-(void)previous;
-(double)duration;
-(void)begin;
-(AVPlayer *)player;
-(id)initWithPlayer:(id)arg1 ;
-(void)setElapsedTime:(double)arg1 ;
-(double)elapsedTime;
-(double)scanRate;
-(void)setScanRate:(double)arg1 ;
-(void)setInternalDelegate:(id<TVPlayerInternalDelegate>)arg1 ;
-(id<TVPlayerInternalDelegate>)internalDelegate;
-(void)setMuted:(BOOL)arg1 ;
-(void)play;
-(BOOL)isMuted;
-(TVPlaylist *)playlist;
-(void)setPlaylist:(TVPlaylist *)arg1 ;
-(void)setBridge:(id<TVPlayerBridging>)arg1 ;
-(void)startObservingEvent:(id)arg1 extraInfo:(id)arg2 ;
-(void)stopObservingEvent:(id)arg1 ;
-(id<TVPlayerBridging>)bridge;
-(TVMediaItem *)currentMediaItem;
-(TVMediaItem *)nextMediaItem;
-(TVMediaItem *)previousMediaItem;
-(void)dispatchEvent:(id)arg1 userInfo:(id)arg2 completion:(/*^block*/id)arg3 ;
-(AVPlayer *)avPlayer;
-(void)playerViewController:(id)arg1 shouldSeekToTime:(double)arg2 completion:(/*^block*/id)arg3 ;
-(void)playerViewController:(id)arg1 shouldSeekToDate:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)playerViewController:(id)arg1 shouldPlayFromTime:(double)arg2 completion:(/*^block*/id)arg3 ;
-(void)playerViewController:(id)arg1 shouldPauseWithCompletion:(/*^block*/id)arg2 ;
-(void)playerViewController:(id)arg1 shouldScanAtRate:(double)arg2 completion:(/*^block*/id)arg3 ;
-(AVPlayerItem *)currentPlayerItem;
-(void)playerViewControllerWillStartPictureInPicture:(id)arg1 ;
-(void)playerViewControllerDidStartPictureInPicture:(id)arg1 ;
-(BOOL)playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:(id)arg1 ;
-(void)playerViewController:(id)arg1 failedToStartPictureInPictureWithError:(id)arg2 ;
-(void)playerViewControllerWillStopPictureInPicture:(id)arg1 ;
-(void)playerViewControllerDidStopPictureInPicture:(id)arg1 ;
-(void)playerViewController:(id)arg1 restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:(/*^block*/id)arg2 ;
-(void)playerViewController:(id)arg1 willTransitionToVisibilityOfTransportBar:(BOOL)arg2 withAnimationCoordinator:(id)arg3 ;
-(void)skipToPreviousItemForPlayerViewController:(id)arg1 ;
-(void)skipToNextItemForPlayerViewController:(id)arg1 ;
-(void)setPreventsSleepDuringVideoPlayback:(BOOL)arg1 ;
-(BOOL)preventsSleepDuringVideoPlayback;
-(BOOL)currentMediaItemHasVideoContent;
-(long long)resumeMenuBehavior;
-(void)setResumeMenuBehavior:(long long)arg1 ;
-(id)playbackDate;
-(void)setCurrentMediaItemHasVideoContent:(BOOL)arg1 ;
-(NSDate *)elapsedDate;
-(void)setElapsedDate:(NSDate *)arg1 ;
-(void)changeToMediaItemAtIndex:(long long)arg1 ;
-(id)accessLogs;
-(id)errorLogs;
-(void)playerItemPlayDidEnd:(id)arg1 ;
-(void)playerItemStalled:(id)arg1 ;
-(void)setCurrentMediaItem:(TVMediaItem *)arg1 ;
-(void)_dispatchEvent:(id)arg1 userInfo:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_updatePlayingStateForRate:(float)arg1 ;
-(void)_processTimedMetadata:(id)arg1 ;
-(void)setState:(long long)arg1 modifier:(long long)arg2 ;
-(void)_performPreChecks;
-(void)presentWithAnimation:(BOOL)arg1 ;
-(void)_updateTimeIntervalObserversWithIntervals:(id)arg1 ;
-(void)_updateTimeBoundaryObserversWithIntervals:(id)arg1 ;
-(id)nextMediaItemInDirection:(long long)arg1 ;
-(void)shouldChangeMediaInDirection:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)_performPreChecksWithCompletion:(/*^block*/id)arg1 ;
-(void)_checkRestrictionsForMediaItem:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)_checkResumePreferenceForMediaItem:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
@end

