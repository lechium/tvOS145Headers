/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:10:29 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <ATVSlideshow/ATVSlideshow-Structs.h>
#import <ATVSlideshow/MREffect.h>

@class MRTextRenderer, MRImage, NSMutableDictionary, NSDictionary, MRCroppingSprite, NSArray, MRCAMLBezierData;

@interface MREffectSlidingPanels : MREffect {

	MRTextRenderer* mTextRenderer;
	MRImage* mTextImage;
	CGContextRef mCachedRenderedText;
	NSMutableDictionary* mSprites;
	NSDictionary* mBreakInformation;
	MRCroppingSprite* mTextSprite;
	CGSize mMaxTextSize;
	BOOL mIsLoaded;
	NSArray* mCurrentInfo;
	BOOL mHasBreak;
	CGSize mTextSize;
	BOOL mFitMovies;
	MRCAMLBezierData* mEnterCurve;
	MRCAMLBezierData* mExitCurve;

}
-(id)init;
-(void)setAttributes:(id)arg1 ;
-(void)_cleanup;
-(void)setPixelSize:(CGSize)arg1 ;
-(void)_unload;
-(BOOL)isLoadedForTime:(double)arg1 ;
-(void)_loadForTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3 ;
-(void)renderAtTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3 ;
-(BOOL)prerenderForTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3 ;
-(void)beginMorphingToAspectRatio:(double)arg1 withDuration:(double)arg2 ;
-(id)elementHitAtPoint:(CGPoint)arg1 withInverseMatrix:(float)arg2 localPoint:(CGPoint*)arg3 ;
-(BOOL)getVerticesCoordinates:(CGPoint*)arg1 withMatrix:(float)arg2 forElement:(id)arg3 ;
-(CGSize)_maxSizeForTextElement:(id)arg1 ;
-(long long)_maxLinesForTextElement:(id)arg1 ;
-(void)_applySizeScripts:(id)arg1 ;
-(CGSize)_sizeForBreakAspectRatio:(double)arg1 size:(CGSize)arg2 inContext:(id)arg3 ;
-(void)computeAnimationForTime:(double)arg1 direction:(id)arg2 rect:(CGRect*)arg3 justification:(CGPoint*)arg4 ;
@end

