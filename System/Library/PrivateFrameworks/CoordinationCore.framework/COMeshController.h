/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:11:22 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/PrivateFrameworks/CoordinationCore.framework/CoordinationCore
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <libobjc.A.dylib/COMeshNodeStateTrackerDelegate.h>
#import <libobjc.A.dylib/COMeshNodeDelegate.h>

@protocol OS_dispatch_queue;
@class NSOrderedSet, COConstituent, NSObject, COBallot, COMeshLocalNode, NSDictionary, NSArray, NSString;

@interface COMeshController : NSObject <COMeshNodeStateTrackerDelegate, COMeshNodeDelegate> {

	NSOrderedSet* _addOns;
	unsigned long long _state;
	COConstituent* _me;
	NSObject*<OS_dispatch_queue> _dispatchQueue;
	COConstituent* _leader;
	COBallot* _ballot;
	COMeshLocalNode* _listener;
	NSDictionary* _trackers;
	NSDictionary* _commandHandlers;
	NSDictionary* _notificationHandlers;
	NSDictionary* _requestHandlers;
	NSArray* _queuedCommands;
	NSArray* _sentCommands;
	NSString* _meshName;

}

@property (nonatomic,retain) COConstituent * leader;                                  //@synthesize leader=_leader - In the implementation block
@property (nonatomic,copy) NSOrderedSet * addOns;                                     //@synthesize addOns=_addOns - In the implementation block
@property (nonatomic,copy) COBallot * ballot;                                         //@synthesize ballot=_ballot - In the implementation block
@property (nonatomic,retain) COMeshLocalNode * listener;                              //@synthesize listener=_listener - In the implementation block
@property (nonatomic,copy) NSDictionary * trackers;                                   //@synthesize trackers=_trackers - In the implementation block
@property (nonatomic,copy) NSDictionary * commandHandlers;                            //@synthesize commandHandlers=_commandHandlers - In the implementation block
@property (nonatomic,copy) NSDictionary * notificationHandlers;                       //@synthesize notificationHandlers=_notificationHandlers - In the implementation block
@property (nonatomic,copy) NSDictionary * requestHandlers;                            //@synthesize requestHandlers=_requestHandlers - In the implementation block
@property (nonatomic,copy) NSArray * queuedCommands;                                  //@synthesize queuedCommands=_queuedCommands - In the implementation block
@property (nonatomic,copy) NSArray * sentCommands;                                    //@synthesize sentCommands=_sentCommands - In the implementation block
@property (nonatomic,copy) NSString * meshName;                                       //@synthesize meshName=_meshName - In the implementation block
@property (nonatomic,readonly) unsigned long long state;                              //@synthesize state=_state - In the implementation block
@property (nonatomic,readonly) COConstituent * me;                                    //@synthesize me=_me - In the implementation block
@property (nonatomic,copy,readonly) NSArray * nodes; 
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> dispatchQueue;              //@synthesize dispatchQueue=_dispatchQueue - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(NSString *)description;
-(id)init;
-(unsigned long long)state;
-(void)start;
-(void)stop;
-(COMeshLocalNode *)listener;
-(void)setListener:(COMeshLocalNode *)arg1 ;
-(NSObject*<OS_dispatch_queue>)dispatchQueue;
-(void)setDispatchQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSArray *)nodes;
-(COConstituent *)me;
-(NSDictionary *)requestHandlers;
-(void)didTransitionToState:(unsigned long long)arg1 ;
-(NSDictionary *)notificationHandlers;
-(void)setNotificationHandlers:(NSDictionary *)arg1 ;
-(void)sendNotification:(id)arg1 ;
-(id)initWithConstituentType:(unsigned long long)arg1 ;
-(NSString *)meshName;
-(void)setMeshName:(NSString *)arg1 ;
-(NSDictionary *)commandHandlers;
-(NSOrderedSet *)addOns;
-(NSDictionary *)trackers;
-(void)setAddOns:(NSOrderedSet *)arg1 ;
-(void)willTransitionToState:(unsigned long long)arg1 ;
-(void)setTrackers:(NSDictionary *)arg1 ;
-(void)setBallot:(COBallot *)arg1 ;
-(void)setCommandHandlers:(NSDictionary *)arg1 ;
-(void)setRequestHandlers:(NSDictionary *)arg1 ;
-(void)_enqueueCommand:(id)arg1 ;
-(NSArray *)queuedCommands;
-(void)setQueuedCommands:(NSArray *)arg1 ;
-(void)_processQueuedCommands;
-(COBallot *)ballot;
-(id)nodeForConstituent:(id)arg1 ;
-(COConstituent *)leader;
-(NSArray *)sentCommands;
-(void)setSentCommands:(NSArray *)arg1 ;
-(void)node:(id)arg1 didReceiveRequest:(id)arg2 responseCallBack:(/*^block*/id)arg3 ;
-(void)node:(id)arg1 didReceiveCommand:(id)arg2 ;
-(void)_transitionToPostElection;
-(void)setLeader:(COConstituent *)arg1 ;
-(id)_currentBallotMergedWithBallot:(id)arg1 ;
-(void)_callSnapElection;
-(void)willInvalidateNode:(id)arg1 error:(id)arg2 ;
-(void)willActivateNode:(id)arg1 ;
-(void)_performInvalidationOfNode:(id)arg1 error:(id)arg2 ;
-(void)_removeSentCommand:(id)arg1 fromNode:(id)arg2 withResponse:(id)arg3 error:(id)arg4 ;
-(void)_handleElectionRequest:(id)arg1 onNode:(id)arg2 responseCallBack:(/*^block*/id)arg3 ;
-(void)_handleVoteRequest:(id)arg1 onNode:(id)arg2 responseCallBack:(/*^block*/id)arg3 ;
-(void)_handleBallotResponse:(id)arg1 onNode:(id)arg2 ;
-(void)_handleAcceptResponse:(id)arg1 onNode:(id)arg2 ;
-(void)nodeBecameAvailable:(id)arg1 ;
-(void)didAddNode:(id)arg1 ;
-(void)didActivateNode:(id)arg1 ;
-(void)node:(id)arg1 didSendCommand:(id)arg2 ;
-(void)node:(id)arg1 didReceiveResponse:(id)arg2 toRequest:(id)arg3 ;
-(void)node:(id)arg1 didReceiveError:(id)arg2 forCommand:(id)arg3 ;
-(void)didInvalidateNode:(id)arg1 ;
-(void)didRemoveNode:(id)arg1 ;
-(BOOL)addAddOn:(id)arg1 ;
-(BOOL)removeAddOn:(id)arg1 ;
-(void)registerHandler:(/*^block*/id)arg1 forCommandClass:(Class)arg2 ;
-(void)deregisterHandlerForCommandClass:(Class)arg1 ;
-(void)registerHandler:(/*^block*/id)arg1 forNotificationClass:(Class)arg2 ;
-(void)deregisterHandlerForNotificationClass:(Class)arg1 ;
-(void)registerHandler:(/*^block*/id)arg1 forRequestClass:(Class)arg2 ;
-(void)degisterHandlerForRequestClass:(Class)arg1 ;
-(void)sendCommand:(id)arg1 sentCommandCallback:(/*^block*/id)arg2 ;
-(void)sendRequest:(id)arg1 sentRequestCallback:(/*^block*/id)arg2 ;
-(void)broadcastRequest:(id)arg1 sentRequestCallback:(/*^block*/id)arg2 ;
@end

