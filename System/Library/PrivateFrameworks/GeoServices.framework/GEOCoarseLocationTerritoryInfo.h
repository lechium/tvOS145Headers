/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:02:26 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <GeoServices/GeoServices-Structs.h>
#import <ProtocolBuffer/PBCodable.h>
#import <libobjc.A.dylib/NSCopying.h>

@class PBDataReader, NSString, GEOCoarseLocationPolygon;

@interface GEOCoarseLocationTerritoryInfo : PBCodable <NSCopying> {

	PBDataReader* _reader;
	SCD_Struct_GE17* _coordinates;
	GEOCoarseLocationLatLng _representativePoint;
	double _areaDegrees;
	double _areaRatio;
	NSString* _countryNameStr;
	unsigned long long _featureId;
	double _maxDistanceMeters;
	GEOCoarseLocationPolygon* _polygon;
	NSString* _regionNameStr;
	unsigned _readerMarkPos;
	unsigned _readerMarkLength;
	os_unfair_lock_s _readerLock;
	unsigned _countryName;
	unsigned _regionName;
	int _representativePointQuality;
	unsigned _revgeoRank;
	int _territoryType;
	BOOL _precise;
	BOOL _shouldRandomize;
	struct {
		unsigned has_representativePoint : 1;
		unsigned has_areaDegrees : 1;
		unsigned has_areaRatio : 1;
		unsigned has_featureId : 1;
		unsigned has_maxDistanceMeters : 1;
		unsigned has_countryName : 1;
		unsigned has_regionName : 1;
		unsigned has_representativePointQuality : 1;
		unsigned has_revgeoRank : 1;
		unsigned has_territoryType : 1;
		unsigned has_precise : 1;
		unsigned has_shouldRandomize : 1;
		unsigned read_coordinates : 1;
		unsigned read_countryNameStr : 1;
		unsigned read_polygon : 1;
		unsigned read_regionNameStr : 1;
		unsigned wrote_anyField : 1;
	}  _flags;

}

@property (assign,nonatomic) BOOL hasTerritoryType; 
@property (assign,nonatomic) int territoryType; 
@property (assign,nonatomic) BOOL hasRegionName; 
@property (assign,nonatomic) unsigned regionName; 
@property (assign,nonatomic) BOOL hasCountryName; 
@property (assign,nonatomic) unsigned countryName; 
@property (nonatomic,readonly) unsigned long long coordinatesCount; 
@property (nonatomic,readonly) unsigned* coordinates; 
@property (assign,nonatomic) BOOL hasPrecise; 
@property (assign,nonatomic) BOOL precise; 
@property (assign,nonatomic) BOOL hasFeatureId; 
@property (assign,nonatomic) unsigned long long featureId; 
@property (assign,nonatomic) BOOL hasRepresentativePoint; 
@property (assign,nonatomic) GEOCoarseLocationLatLng representativePoint; 
@property (assign,nonatomic) BOOL hasAreaDegrees; 
@property (assign,nonatomic) double areaDegrees; 
@property (assign,nonatomic) BOOL hasRevgeoRank; 
@property (assign,nonatomic) unsigned revgeoRank; 
@property (assign,nonatomic) BOOL hasAreaRatio; 
@property (assign,nonatomic) double areaRatio; 
@property (assign,nonatomic) BOOL hasMaxDistanceMeters; 
@property (assign,nonatomic) double maxDistanceMeters; 
@property (nonatomic,readonly) BOOL hasRegionNameStr; 
@property (nonatomic,retain) NSString * regionNameStr; 
@property (nonatomic,readonly) BOOL hasCountryNameStr; 
@property (nonatomic,retain) NSString * countryNameStr; 
@property (nonatomic,readonly) BOOL hasPolygon; 
@property (nonatomic,retain) GEOCoarseLocationPolygon * polygon; 
@property (assign,nonatomic) BOOL hasRepresentativePointQuality; 
@property (assign,nonatomic) int representativePointQuality; 
@property (assign,nonatomic) BOOL hasShouldRandomize; 
@property (assign,nonatomic) BOOL shouldRandomize; 
+(BOOL)isValid:(id)arg1 ;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)description;
-(id)init;
-(void)dealloc;
-(id)initWithData:(id)arg1 ;
-(id)initWithDictionary:(id)arg1 ;
-(id)dictionaryRepresentation;
-(void)setCountryName:(unsigned)arg1 ;
-(unsigned)countryName;
-(BOOL)readFrom:(id)arg1 ;
-(void)writeTo:(id)arg1 ;
-(void)mergeFrom:(id)arg1 ;
-(void)copyTo:(id)arg1 ;
-(void)readAll:(BOOL)arg1 ;
-(id)jsonRepresentation;
-(id)initWithJSON:(id)arg1 ;
-(unsigned*)coordinates;
-(NSString *)regionNameStr;
-(NSString *)countryNameStr;
-(GEOCoarseLocationPolygon *)polygon;
-(void)setTerritoryType:(int)arg1 ;
-(void)setRegionName:(unsigned)arg1 ;
-(void)addCoordinates:(unsigned)arg1 ;
-(void)setPrecise:(BOOL)arg1 ;
-(void)setFeatureId:(unsigned long long)arg1 ;
-(void)setRepresentativePoint:(GEOCoarseLocationLatLng)arg1 ;
-(void)setAreaDegrees:(double)arg1 ;
-(void)setRevgeoRank:(unsigned)arg1 ;
-(void)setAreaRatio:(double)arg1 ;
-(void)setMaxDistanceMeters:(double)arg1 ;
-(void)setRegionNameStr:(NSString *)arg1 ;
-(void)setCountryNameStr:(NSString *)arg1 ;
-(void)setPolygon:(GEOCoarseLocationPolygon *)arg1 ;
-(void)setRepresentativePointQuality:(int)arg1 ;
-(void)setShouldRandomize:(BOOL)arg1 ;
-(unsigned long long)coordinatesCount;
-(void)clearCoordinates;
-(unsigned)coordinatesAtIndex:(unsigned long long)arg1 ;
-(int)territoryType;
-(void)setHasTerritoryType:(BOOL)arg1 ;
-(BOOL)hasTerritoryType;
-(id)territoryTypeAsString:(int)arg1 ;
-(int)StringAsTerritoryType:(id)arg1 ;
-(unsigned)regionName;
-(void)setHasRegionName:(BOOL)arg1 ;
-(BOOL)hasRegionName;
-(void)setHasCountryName:(BOOL)arg1 ;
-(BOOL)hasCountryName;
-(void)setCoordinates:(unsigned*)arg1 count:(unsigned long long)arg2 ;
-(BOOL)precise;
-(void)setHasPrecise:(BOOL)arg1 ;
-(BOOL)hasPrecise;
-(unsigned long long)featureId;
-(void)setHasFeatureId:(BOOL)arg1 ;
-(BOOL)hasFeatureId;
-(GEOCoarseLocationLatLng)representativePoint;
-(void)setHasRepresentativePoint:(BOOL)arg1 ;
-(BOOL)hasRepresentativePoint;
-(double)areaDegrees;
-(void)setHasAreaDegrees:(BOOL)arg1 ;
-(BOOL)hasAreaDegrees;
-(unsigned)revgeoRank;
-(void)setHasRevgeoRank:(BOOL)arg1 ;
-(BOOL)hasRevgeoRank;
-(double)areaRatio;
-(void)setHasAreaRatio:(BOOL)arg1 ;
-(BOOL)hasAreaRatio;
-(double)maxDistanceMeters;
-(void)setHasMaxDistanceMeters:(BOOL)arg1 ;
-(BOOL)hasMaxDistanceMeters;
-(BOOL)hasRegionNameStr;
-(BOOL)hasCountryNameStr;
-(BOOL)hasPolygon;
-(int)representativePointQuality;
-(void)setHasRepresentativePointQuality:(BOOL)arg1 ;
-(BOOL)hasRepresentativePointQuality;
-(id)representativePointQualityAsString:(int)arg1 ;
-(int)StringAsRepresentativePointQuality:(id)arg1 ;
-(BOOL)shouldRandomize;
-(void)setHasShouldRandomize:(BOOL)arg1 ;
-(BOOL)hasShouldRandomize;
@end

