/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:09:27 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/PrivateFrameworks/IOAccessoryManager.framework/IOAccessoryManager
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */


#import <IOAccessoryManager/IOAccessoryManager-Structs.h>
@class NSMutableData;

@interface HalogenCalcTypeC : NSObject {

	int _nSamples;
	int _sizeofSample;
	int _tmp1DataBuffSize;
	int _tmp2DataBuffSize;
	int _tmp3DataBuffSize;
	double _voltageGainCorrection;
	double _currentGainCorrection;
	double _currentPhaseCompensation;
	double _calVoltageSignalLevel;
	double _calVoltageNoiseLevel;
	double _calCurrentSignalLevel;
	double _calCurrentNoiseLevel;
	double _calVoltageSNR;
	double _calCurrentSNR;
	double _calVoltageAmplitude;
	double _calCurrentAmplitude;
	double _measurementVoltageSignalLevel;
	double _measurementVoltageNoiseLevel;
	double _measurementVoltageSNR;
	double _measurementCurrentSignalLevel;
	double _measurementCurrentNoiseLevel;
	double _measurementCurrentSNR;
	double _measurementVoltageAmplitude;
	double _measurementCurrentAmplitude;
	double _measurementVoltagePhase;
	double _measurementCurrentPhase;
	double _goertzelImpedance;
	double _goertzelPhase;
	double _compensatedImpedance;
	double _compensatedPhase;
	double _loadImpedance;
	double _loadPhase;
	double _resistanceInOhms;
	double _capacitanceInNanoF;
	double _sampleRate;
	double _signalFrequency;
	double _tiaGain;
	double _adcGain;
	double _parasiticCap;
	double _pinParasitics;
	double _seriesResistance;
	double _seriesRCResistance;
	double _LDCMACCapacitance;
	NSMutableData* _tmp1DataBuff;
	NSMutableData* _tmp2DataBuff;
	NSMutableData* _tmp3DataBuff;
	OpaqueFFTSetupDRef _fftContext;
	jd _seriesTotalImpedance;

}

@property (assign) int nSamples;                                        //@synthesize nSamples=_nSamples - In the implementation block
@property (assign) int sizeofSample;                                    //@synthesize sizeofSample=_sizeofSample - In the implementation block
@property (assign) double sampleRate;                                   //@synthesize sampleRate=_sampleRate - In the implementation block
@property (assign) double signalFrequency;                              //@synthesize signalFrequency=_signalFrequency - In the implementation block
@property (assign) double tiaGain;                                      //@synthesize tiaGain=_tiaGain - In the implementation block
@property (assign) double adcGain;                                      //@synthesize adcGain=_adcGain - In the implementation block
@property (assign) double parasiticCap;                                 //@synthesize parasiticCap=_parasiticCap - In the implementation block
@property (assign) double pinParasitics;                                //@synthesize pinParasitics=_pinParasitics - In the implementation block
@property (assign) double seriesResistance;                             //@synthesize seriesResistance=_seriesResistance - In the implementation block
@property (assign) double seriesRCResistance;                           //@synthesize seriesRCResistance=_seriesRCResistance - In the implementation block
@property (assign) double LDCMACCapacitance;                            //@synthesize LDCMACCapacitance=_LDCMACCapacitance - In the implementation block
@property (assign) jd seriesTotalImpedance;                             //@synthesize seriesTotalImpedance=_seriesTotalImpedance - In the implementation block
@property (assign) NSMutableData * tmp1DataBuff;                        //@synthesize tmp1DataBuff=_tmp1DataBuff - In the implementation block
@property (assign) int tmp1DataBuffSize;                                //@synthesize tmp1DataBuffSize=_tmp1DataBuffSize - In the implementation block
@property (assign) NSMutableData * tmp2DataBuff;                        //@synthesize tmp2DataBuff=_tmp2DataBuff - In the implementation block
@property (assign) int tmp2DataBuffSize;                                //@synthesize tmp2DataBuffSize=_tmp2DataBuffSize - In the implementation block
@property (assign) NSMutableData * tmp3DataBuff;                        //@synthesize tmp3DataBuff=_tmp3DataBuff - In the implementation block
@property (assign) int tmp3DataBuffSize;                                //@synthesize tmp3DataBuffSize=_tmp3DataBuffSize - In the implementation block
@property (assign) OpaqueFFTSetupDRef fftContext;                       //@synthesize fftContext=_fftContext - In the implementation block
@property (readonly) double voltageGainCorrection;                      //@synthesize voltageGainCorrection=_voltageGainCorrection - In the implementation block
@property (readonly) double currentGainCorrection;                      //@synthesize currentGainCorrection=_currentGainCorrection - In the implementation block
@property (readonly) double currentPhaseCompensation;                   //@synthesize currentPhaseCompensation=_currentPhaseCompensation - In the implementation block
@property (readonly) double calVoltageSignalLevel;                      //@synthesize calVoltageSignalLevel=_calVoltageSignalLevel - In the implementation block
@property (readonly) double calVoltageNoiseLevel;                       //@synthesize calVoltageNoiseLevel=_calVoltageNoiseLevel - In the implementation block
@property (readonly) double calCurrentSignalLevel;                      //@synthesize calCurrentSignalLevel=_calCurrentSignalLevel - In the implementation block
@property (readonly) double calCurrentNoiseLevel;                       //@synthesize calCurrentNoiseLevel=_calCurrentNoiseLevel - In the implementation block
@property (readonly) double calVoltageSNR;                              //@synthesize calVoltageSNR=_calVoltageSNR - In the implementation block
@property (readonly) double calCurrentSNR;                              //@synthesize calCurrentSNR=_calCurrentSNR - In the implementation block
@property (readonly) double calVoltageAmplitude;                        //@synthesize calVoltageAmplitude=_calVoltageAmplitude - In the implementation block
@property (readonly) double calCurrentAmplitude;                        //@synthesize calCurrentAmplitude=_calCurrentAmplitude - In the implementation block
@property (readonly) double measurementVoltageSignalLevel;              //@synthesize measurementVoltageSignalLevel=_measurementVoltageSignalLevel - In the implementation block
@property (readonly) double measurementVoltageNoiseLevel;               //@synthesize measurementVoltageNoiseLevel=_measurementVoltageNoiseLevel - In the implementation block
@property (readonly) double measurementVoltageSNR;                      //@synthesize measurementVoltageSNR=_measurementVoltageSNR - In the implementation block
@property (readonly) double measurementCurrentSignalLevel;              //@synthesize measurementCurrentSignalLevel=_measurementCurrentSignalLevel - In the implementation block
@property (readonly) double measurementCurrentNoiseLevel;               //@synthesize measurementCurrentNoiseLevel=_measurementCurrentNoiseLevel - In the implementation block
@property (readonly) double measurementCurrentSNR;                      //@synthesize measurementCurrentSNR=_measurementCurrentSNR - In the implementation block
@property (readonly) double measurementVoltageAmplitude;                //@synthesize measurementVoltageAmplitude=_measurementVoltageAmplitude - In the implementation block
@property (readonly) double measurementCurrentAmplitude;                //@synthesize measurementCurrentAmplitude=_measurementCurrentAmplitude - In the implementation block
@property (readonly) double measurementVoltagePhase;                    //@synthesize measurementVoltagePhase=_measurementVoltagePhase - In the implementation block
@property (readonly) double measurementCurrentPhase;                    //@synthesize measurementCurrentPhase=_measurementCurrentPhase - In the implementation block
@property (readonly) double goertzelImpedance;                          //@synthesize goertzelImpedance=_goertzelImpedance - In the implementation block
@property (readonly) double goertzelPhase;                              //@synthesize goertzelPhase=_goertzelPhase - In the implementation block
@property (readonly) double compensatedImpedance;                       //@synthesize compensatedImpedance=_compensatedImpedance - In the implementation block
@property (readonly) double compensatedPhase;                           //@synthesize compensatedPhase=_compensatedPhase - In the implementation block
@property (readonly) double loadImpedance;                              //@synthesize loadImpedance=_loadImpedance - In the implementation block
@property (readonly) double loadPhase;                                  //@synthesize loadPhase=_loadPhase - In the implementation block
@property (readonly) double resistanceInOhms;                           //@synthesize resistanceInOhms=_resistanceInOhms - In the implementation block
@property (readonly) double capacitanceInNanoF;                         //@synthesize capacitanceInNanoF=_capacitanceInNanoF - In the implementation block
-(void)dealloc;
-(double)sampleRate;
-(void)setSampleRate:(double)arg1 ;
-(void)_freeBuffers;
-(BOOL)_allocBuffers;
-(id)initWithParams:(int)arg1 signalFrequency:(double)arg2 sampleRate:(unsigned long long)arg3 tiaGain:(double)arg4 adcGain:(double)arg5 parasiticCap:(double)arg6 ;
-(int)doCalibration:(id)arg1 withCurrentData:(id)arg2 ;
-(double)calVoltageSNR;
-(double)calCurrentSNR;
-(double)calVoltageAmplitude;
-(double)calCurrentAmplitude;
-(double)voltageGainCorrection;
-(double)currentGainCorrection;
-(double)currentPhaseCompensation;
-(int)doLiquidDetection:(id)arg1 withCurrentData:(id)arg2 isReceptacleEmpty:(BOOL)arg3 isReceptacleWet:(BOOL)arg4 withWetTransitionThreshold:(double)arg5 withDryTransitionThreshold:(double)arg6 pinParasitics:(double)arg7 ;
-(double)goertzelImpedance;
-(double)goertzelPhase;
-(double)compensatedImpedance;
-(double)compensatedPhase;
-(double)resistanceInOhms;
-(double)capacitanceInNanoF;
-(double)measurementVoltageSignalLevel;
-(double)measurementVoltageNoiseLevel;
-(double)measurementVoltageSNR;
-(double)measurementCurrentSignalLevel;
-(double)measurementCurrentNoiseLevel;
-(double)measurementCurrentSNR;
-(double)measurementVoltageAmplitude;
-(double)measurementCurrentAmplitude;
-(double)measurementVoltagePhase;
-(double)measurementCurrentPhase;
-(double)loadImpedance;
-(double)loadPhase;
-(double)calVoltageSignalLevel;
-(double)calVoltageNoiseLevel;
-(double)calCurrentSignalLevel;
-(double)calCurrentNoiseLevel;
-(void)_applyGain:(double)arg1 toData:(id)arg2 ;
-(void)_applyFractionalPhaseShift:(id)arg1 withPhaseDelay:(double)arg2 ;
-(void)_applyTiaGain:(id)arg1 toCurrentData:(id)arg2 ;
-(void)_rcSolver;
-(void)_applyHanningWindow:(id)arg1 withSize:(int)arg2 ;
-(int)nSamples;
-(void)setNSamples:(int)arg1 ;
-(int)sizeofSample;
-(void)setSizeofSample:(int)arg1 ;
-(double)signalFrequency;
-(void)setSignalFrequency:(double)arg1 ;
-(double)adcGain;
-(void)setAdcGain:(double)arg1 ;
-(double)tiaGain;
-(void)setTiaGain:(double)arg1 ;
-(NSMutableData *)tmp1DataBuff;
-(void)setTmp1DataBuff:(NSMutableData *)arg1 ;
-(int)tmp1DataBuffSize;
-(void)setTmp1DataBuffSize:(int)arg1 ;
-(NSMutableData *)tmp2DataBuff;
-(void)setTmp2DataBuff:(NSMutableData *)arg1 ;
-(int)tmp2DataBuffSize;
-(void)setTmp2DataBuffSize:(int)arg1 ;
-(NSMutableData *)tmp3DataBuff;
-(void)setTmp3DataBuff:(NSMutableData *)arg1 ;
-(int)tmp3DataBuffSize;
-(void)setTmp3DataBuffSize:(int)arg1 ;
-(OpaqueFFTSetupDRef)fftContext;
-(void)setFftContext:(OpaqueFFTSetupDRef)arg1 ;
-(void)_goertzelSecondOrder:(id)arg1 hasFftValue:(double*)arg2 hasPhase:(double*)arg3 withHanning:(BOOL)arg4 amplitudeCorrectionFactor:(double)arg5 ;
-(double)_snr:(id)arg1 withGain:(double)arg2 hasSignalLevel:(double*)arg3 hasNoiseLevel:(double*)arg4 ;
-(void)_doMuxComp:(double)arg1 withPhase:(double)arg2 ;
-(double)parasiticCap;
-(void)setParasiticCap:(double)arg1 ;
-(double)pinParasitics;
-(void)setPinParasitics:(double)arg1 ;
-(double)seriesResistance;
-(void)setSeriesResistance:(double)arg1 ;
-(double)seriesRCResistance;
-(void)setSeriesRCResistance:(double)arg1 ;
-(double)LDCMACCapacitance;
-(void)setLDCMACCapacitance:(double)arg1 ;
-(jd)seriesTotalImpedance:(SEL)arg1 ;
-(void)setSeriesTotalImpedance:(j)arg1 :(double)arg2 ;
@end

