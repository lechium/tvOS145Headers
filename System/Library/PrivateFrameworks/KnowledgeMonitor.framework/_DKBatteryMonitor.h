/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:11:45 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/PrivateFrameworks/KnowledgeMonitor.framework/KnowledgeMonitor
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <KnowledgeMonitor/KnowledgeMonitor-Structs.h>
#import <KnowledgeMonitor/_DKMonitor.h>

@class NSDictionary;

@interface _DKBatteryMonitor : _DKMonitor {

	unsigned _powerService;
	unsigned _batteryNotification;
	IONotificationPortRef _notifyPort;
	BOOL _hasInternalBattery;
	BOOL _previouslyFullyCharged;
	int _immediateShutdownThreshold;
	NSDictionary* _previousBatteryState;
	double _previousPercentage;

}

@property (assign,nonatomic) int immediateShutdownThreshold;                   //@synthesize immediateShutdownThreshold=_immediateShutdownThreshold - In the implementation block
@property (assign,nonatomic) BOOL hasInternalBattery;                          //@synthesize hasInternalBattery=_hasInternalBattery - In the implementation block
@property (nonatomic,retain) NSDictionary * previousBatteryState;              //@synthesize previousBatteryState=_previousBatteryState - In the implementation block
@property (assign,nonatomic) double previousPercentage;                        //@synthesize previousPercentage=_previousPercentage - In the implementation block
@property (assign,nonatomic) BOOL previouslyFullyCharged;                      //@synthesize previouslyFullyCharged=_previouslyFullyCharged - In the implementation block
+(id)entitlements;
+(void)setCurrentBatteryPercentage:(double)arg1 ;
+(id)eventStream;
+(id)_eventWithBatteryPercentage:(double)arg1 isFullyCharged:(BOOL)arg2 ;
-(void)dealloc;
-(void)start;
-(void)stop;
-(void)deactivate;
-(double)currentBatteryPercentage;
-(void)synchronouslyReflectCurrentValue;
-(id)getBatteryProperties;
-(void)batteryStateChangeHandler;
-(void)_queue_handleNotification;
-(double)batteryPercentageFromPowerSourceDictionary:(id)arg1 ;
-(BOOL)fullyChargedFromPowerSourceDictionary:(id)arg1 ;
-(void)updateBatteryStateDictionary:(id)arg1 currentBatteryPercentage:(double)arg2 ;
-(void)postImminentShutdownNotification:(double)arg1 ;
-(void)completeStart;
-(void)setHasInternalBattery:(BOOL)arg1 ;
-(BOOL)percentage:(double)arg1 differsFrom:(double)arg2 ;
-(BOOL)temperature:(id)arg1 differsFrom:(id)arg2 ;
-(BOOL)voltage:(id)arg1 differsFrom:(id)arg2 ;
-(BOOL)fullyCharged:(id)arg1 differsFrom:(id)arg2 ;
-(BOOL)isCharging:(id)arg1 differsFrom:(id)arg2 ;
-(BOOL)externalConnected:(id)arg1 differsFrom:(id)arg2 ;
-(BOOL)adapterType:(id)arg1 differsFrom:(id)arg2 ;
-(BOOL)newBatteryState:(id)arg1 differsSignificantlyFromState:(id)arg2 currentBatteryPercentage:(double)arg3 previousBatteryPercentage:(double)arg4 ;
-(void)_handleBatteryNotification;
-(int)immediateShutdownThreshold;
-(void)setImmediateShutdownThreshold:(int)arg1 ;
-(BOOL)hasInternalBattery;
-(NSDictionary *)previousBatteryState;
-(void)setPreviousBatteryState:(NSDictionary *)arg1 ;
-(double)previousPercentage;
-(void)setPreviousPercentage:(double)arg1 ;
-(BOOL)previouslyFullyCharged;
-(void)setPreviouslyFullyCharged:(BOOL)arg1 ;
@end

