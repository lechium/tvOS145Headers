/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:11:45 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/PrivateFrameworks/KronoServices.framework/KronoServices
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <libobjc.A.dylib/KSPlayerStateMachineDelegate.h>
#import <libobjc.A.dylib/KSAudioPlayerDelegate.h>
#import <libobjc.A.dylib/KSMediaControllerDelegate.h>

@protocol KSPlayerDelegate, OS_dispatch_queue;
@class HHEndpoint, NSObject, KSPlayerStateMachine, KSAudioPlayer, KSMediaController, NSString;

@interface KSPlayer : NSObject <KSPlayerStateMachineDelegate, KSAudioPlayerDelegate, KSMediaControllerDelegate> {

	BOOL _wantsToPlay;
	BOOL _isPlaying;
	HHEndpoint* _endpoint;
	id<KSPlayerDelegate> _delegate;
	unsigned long long _currentMediaType;
	unsigned long long _currentReason;
	NSObject*<OS_dispatch_queue> _queue;
	KSPlayerStateMachine* _stateMachine;
	KSAudioPlayer* _audioPlayer;
	KSMediaController* _mediaController;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> queue;                //@synthesize queue=_queue - In the implementation block
@property (nonatomic,readonly) KSPlayerStateMachine * stateMachine;               //@synthesize stateMachine=_stateMachine - In the implementation block
@property (nonatomic,readonly) KSAudioPlayer * audioPlayer;                       //@synthesize audioPlayer=_audioPlayer - In the implementation block
@property (nonatomic,readonly) KSMediaController * mediaController;               //@synthesize mediaController=_mediaController - In the implementation block
@property (assign) BOOL wantsToPlay;                                              //@synthesize wantsToPlay=_wantsToPlay - In the implementation block
@property (assign) BOOL isPlaying;                                                //@synthesize isPlaying=_isPlaying - In the implementation block
@property (nonatomic,readonly) HHEndpoint * endpoint;                             //@synthesize endpoint=_endpoint - In the implementation block
@property (nonatomic,__weak,readonly) id<KSPlayerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) unsigned long long currentMediaType;               //@synthesize currentMediaType=_currentMediaType - In the implementation block
@property (nonatomic,readonly) unsigned long long currentReason;                  //@synthesize currentReason=_currentReason - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)localDevicePlayerWithDelegate:(id)arg1 ;
-(id<KSPlayerDelegate>)delegate;
-(HHEndpoint *)endpoint;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)dismiss;
-(KSPlayerStateMachine *)stateMachine;
-(KSAudioPlayer *)audioPlayer;
-(BOOL)isPlaying;
-(void)startPlayback;
-(void)stopPlayback;
-(KSMediaController *)mediaController;
-(void)setWantsToPlay:(BOOL)arg1 ;
-(BOOL)wantsToPlay;
-(void)setIsPlaying:(BOOL)arg1 ;
-(id)_initWithEndpoint:(id)arg1 delegate:(id)arg2 ;
-(void)informDelegateNeedsToPlay:(BOOL)arg1 ;
-(void)informDelegegateNeedToFade;
-(void)informDelegateMediaChanged:(unsigned long long)arg1 ;
-(void)informDelegateSetVolume:(id)arg1 level:(id)arg2 ;
-(void)audioPlayerModeChange:(id)arg1 newMode:(unsigned long long)arg2 newReason:(unsigned long long)arg3 ;
-(void)needToFade:(id)arg1 ;
-(void)musicAlarmFired:(id)arg1 item:(id)arg2 ;
-(void)musicAlarmShouldPause:(id)arg1 item:(id)arg2 ;
-(void)audioPlayer:(id)arg1 mediaChanged:(unsigned long long)arg2 ;
-(void)audioPlayer:(id)arg1 requestsVolumeCategory:(id)arg2 level:(id)arg3 ;
-(void)mediaController:(id)arg1 requestsVolumeCategory:(id)arg2 level:(id)arg3 ;
-(unsigned long long)currentMediaType;
-(unsigned long long)currentReason;
@end

