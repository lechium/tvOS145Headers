/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:03:52 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */


@protocol OS_dispatch_queue;
@class NSArray, MRAVOutputDeviceSourceInfo, NSObject, NSString, AVOutputContext, MRAVOutputDevice;

@interface MRAVOutputContext : NSObject {

	NSArray* _outputDevices;
	NSArray* _outputDevicesSnapshot;
	MRAVOutputDeviceSourceInfo* _outputDeviceSourceInfo;
	NSObject*<OS_dispatch_queue> _serialQueue;
	BOOL _isVolumeControlAvailable;
	BOOL _attemptingLogicalDeviceRecovery;
	BOOL _postOutputDeviceChangedScheduled;
	BOOL _postOutputDevicesChangedScheduled;
	BOOL _handleOutputDeviceChangedScheduled;
	BOOL _handleOutputDevicesChangedScheduled;
	BOOL _handleDiscoverySessionOutputDevicesChangedScheduled;
	BOOL _handlingAirPlayDevicesTimeOut;
	unsigned _type;
	NSString* _uniqueIdentifier;
	AVOutputContext* _avOutputContext;

}

@property (nonatomic,copy) NSArray * outputDevices; 
@property (nonatomic,readonly) unsigned type;                                                            //@synthesize type=_type - In the implementation block
@property (nonatomic,readonly) NSString * uniqueIdentifier;                                              //@synthesize uniqueIdentifier=_uniqueIdentifier - In the implementation block
@property (nonatomic,readonly) AVOutputContext * avOutputContext;                                        //@synthesize avOutputContext=_avOutputContext - In the implementation block
@property (nonatomic,readonly) NSArray * outputDeviceUIDs; 
@property (nonatomic,readonly) NSArray * personalDevices; 
@property (nonatomic,readonly) NSArray * personalDeviceUIDs; 
@property (nonatomic,readonly) NSArray * outputDevicesSnapshot; 
@property (getter=isVolumeControlAvailable,nonatomic,readonly) BOOL volumeControlAvailable; 
@property (nonatomic,readonly) BOOL supportsVolumeControl; 
@property (nonatomic,readonly) MRAVOutputDevice * predictedOutputDevice; 
@property (assign,nonatomic) float volume; 
+(id)sharedAudioPresentationContext;
+(id)createOutputContextWithUniqueIdentifier:(id)arg1 ;
+(id)sharedSystemAudioContext;
+(id)sharedSystemScreenContext;
-(id)description;
-(void)dealloc;
-(unsigned)type;
-(NSString *)uniqueIdentifier;
-(float)volume;
-(void)setVolume:(float)arg1 ;
-(NSArray *)outputDevices;
-(NSArray *)outputDeviceUIDs;
-(void)setOutputDevices:(NSArray *)arg1 ;
-(void)addOutputDevices:(id)arg1 initiator:(id)arg2 withCallbackQueue:(id)arg3 block:(/*^block*/id)arg4 ;
-(void)addOutputDevices:(id)arg1 initiator:(id)arg2 fadeAudio:(BOOL)arg3 withCallbackQueue:(id)arg4 block:(/*^block*/id)arg5 ;
-(void)removeOutputDevices:(id)arg1 initiator:(id)arg2 withCallbackQueue:(id)arg3 block:(/*^block*/id)arg4 ;
-(void)removeOutputDevices:(id)arg1 initiator:(id)arg2 fadeAudio:(BOOL)arg3 withCallbackQueue:(id)arg4 block:(/*^block*/id)arg5 ;
-(void)setOutputDevices:(id)arg1 initiator:(id)arg2 withCallbackQueue:(id)arg3 block:(/*^block*/id)arg4 ;
-(void)setOutputDevices:(id)arg1 initiator:(id)arg2 fadeAudio:(BOOL)arg3 withCallbackQueue:(id)arg4 block:(/*^block*/id)arg5 ;
-(BOOL)isVolumeControlAvailable;
-(BOOL)supportsVolumeControl;
-(void)_handleOutputDeviceVolumeDidChangeNotification:(id)arg1 ;
-(id)initWithAVOutputContext:(id)arg1 type:(unsigned)arg2 ;
-(MRAVOutputDevice *)predictedOutputDevice;
-(void)removeOutputDevices:(id)arg1 withCallbackQueue:(id)arg2 block:(/*^block*/id)arg3 ;
-(void)resetPredictedOutputDevice;
-(void)addOutputDevices:(id)arg1 withCallbackQueue:(id)arg2 block:(/*^block*/id)arg3 ;
-(void)_handleOutputDeviceDidChangeNotification:(id)arg1 ;
-(void)_handleOutputDevicesDidChangeNotification:(id)arg1 ;
-(void)_handleDiscoverySessionOutputDevicesDidChangeNotification:(id)arg1 ;
-(void)_outputContextChangeInitiatedNotification:(id)arg1 ;
-(void)_handleOutputDeviceCanSetVolumeDidChangeNotification:(id)arg1 ;
-(void)_handleOutputContextSupportsVolumeDidChangeNotification:(id)arg1 ;
-(void)_handlePredictedOutputDeviceDidChangeNotification:(id)arg1 ;
-(NSArray *)outputDevicesSnapshot;
-(NSArray *)personalDevices;
-(NSArray *)personalDeviceUIDs;
-(void)setOutputDevices:(id)arg1 withCallbackQueue:(id)arg2 block:(/*^block*/id)arg3 ;
-(void)removeAllOutputDevicesWithCallbackQueue:(id)arg1 block:(/*^block*/id)arg2 ;
-(void)attemptLogicalDeviceRecovery;
-(AVOutputContext *)avOutputContext;
@end

