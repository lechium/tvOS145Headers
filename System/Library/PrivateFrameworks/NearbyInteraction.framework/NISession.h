/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:11:50 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/PrivateFrameworks/NearbyInteraction.framework/NearbyInteraction
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <NearbyInteraction/NearbyInteraction-Structs.h>
#import <libobjc.A.dylib/UWBSessionDelegateProxyProtocol.h>

@protocol OS_dispatch_queue, OS_os_log, NISessionDelegate, NIInternalSessionDelegate;
@class NSObject, NSUUID, NIServerConnection, NIExportedObjectForwarder, NIConfiguration, NSError, NSDictionary, NIDiscoveryToken, NSString;

@interface NISession : NSObject <UWBSessionDelegateProxyProtocol> {

	NSObject*<OS_dispatch_queue> _queue;
	mutex _mutex;
	NSUUID* _internalID;
	NIServerConnection* _connection;
	NIExportedObjectForwarder* _exportedObjectForwarder;
	NIConfiguration* _currentConfiguration;
	vector<UWBSessionInterruptionBookkeeping, std::__1::allocator<UWBSessionInterruptionBookkeeping>>* _interruptions;
	atomic<bool> _readyForCallbacks;
	NSObject*<OS_os_log> _log;
	double _startTime;
	double _duration;
	BOOL _updatedNearbyObjects;
	int _internalState;
	id<NISessionDelegate> _delegate;
	NSObject*<OS_dispatch_queue> _delegateQueue;
	NSError* _invalidationError;
	NSDictionary* _activationResponse;
	id<NIInternalSessionDelegate> _internalDelegate;

}

@property (assign) int internalState;                                                 //@synthesize internalState=_internalState - In the implementation block
@property (retain) NSError * invalidationError;                                       //@synthesize invalidationError=_invalidationError - In the implementation block
@property (retain) NSDictionary * activationResponse;                                 //@synthesize activationResponse=_activationResponse - In the implementation block
@property (__weak) id<NIInternalSessionDelegate> internalDelegate;                    //@synthesize internalDelegate=_internalDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<NISessionDelegate> delegate;                   //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> delegateQueue;              //@synthesize delegateQueue=_delegateQueue - In the implementation block
@property (nonatomic,copy,readonly) NIDiscoveryToken * discoveryToken; 
@property (nonatomic,copy,readonly) NIConfiguration * configuration; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)isSupported;
+(id)_createOneShotConnectionAndResume:(BOOL)arg1 ;
+(void)setCachedDeviceCapabilities:(id)arg1 ;
+(id)cachedDeviceCapabilities;
+(void)_queryAndCacheCapabilities;
+(BOOL)_supportedPlatform:(id)arg1 ;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(NSString *)description;
-(id)init;
-(void)invalidate;
-(id<NISessionDelegate>)delegate;
-(void)setDelegate:(id<NISessionDelegate>)arg1 ;
-(NIConfiguration *)configuration;
-(void)setDelegateQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)delegateQueue;
-(void)pause;
-(void)_addObject:(id)arg1 ;
-(void)_removeObject:(id)arg1 ;
-(int)internalState;
-(void)setInternalState:(int)arg1 ;
-(void)setInternalDelegate:(id<NIInternalSessionDelegate>)arg1 ;
-(id<NIInternalSessionDelegate>)internalDelegate;
-(void)_logTime;
-(id)_remoteObject;
-(NSError *)invalidationError;
-(BOOL)_isInternalClient;
-(void)_activate:(BOOL)arg1 ;
-(void)setInvalidationError:(NSError *)arg1 ;
-(void)_serverConnectionInterrupted;
-(void)_serverConnectionInvalidated;
-(void)_activateSyncOnConnectionQueue;
-(void)_shareSandboxExtensionForCurrentBundle;
-(NSDictionary *)activationResponse;
-(id)_initAndConnectToServer;
-(id)_getSessionFailureError;
-(void)_notifyDidInvalidateWithError:(id)arg1 ;
-(void)_reinterruptSessionWithCachedInterruption;
-(id)_synchronousRemoteObject;
-(void)_handleRunSessionError:(id)arg1 ;
-(void)_handleRunSessionSuccess;
-(void)_notifySessionHasFailed;
-(void)_pauseInternalOnConnectionQueue:(BOOL)arg1 ;
-(void)_invalidateInternalOnConnectionQueue:(BOOL)arg1 ;
-(NIDiscoveryToken *)discoveryToken;
-(void)_activateAsync;
-(void)setActivationResponse:(NSDictionary *)arg1 ;
-(void)_handleActivationError:(id)arg1 ;
-(void)_handleActivationSuccess:(id)arg1 ;
-(void)_invalidateSessionInternalWithError:(id)arg1 ;
-(void)_performBlockOnDelegateQueue:(/*^block*/id)arg1 ifRespondsToSelector:(SEL)arg2 ;
-(void)_handleCommandUnsupportedPlatform;
-(void)_interruptSessionWithInternalReason:(long long)arg1 onConnectionQueue:(BOOL)arg2 cachedInterruption:(BOOL)arg3 ;
-(void)_handlePauseSessionError:(id)arg1 ;
-(void)_handlePauseSessionSuccess;
-(void)_logDurationAndSubmit:(BOOL)arg1 ;
-(void)uwbSystemDidChangeState:(unsigned long long)arg1 ;
-(void)_performBlockOnDelegateQueue:(/*^block*/id)arg1 ifRespondsToSelector:(SEL)arg2 evenIfNotRunning:(BOOL)arg3 ;
-(id)_verifyError:(id)arg1 ;
-(void)_submitErrorMetric:(id)arg1 ;
-(void)uwbSessionDidFailWithError:(id)arg1 ;
-(void)uwbSessionDidInvalidateWithError:(id)arg1 ;
-(void)didUpdateNearbyObjects:(id)arg1 ;
-(void)didRemoveNearbyObjects:(id)arg1 withReason:(unsigned long long)arg2 ;
-(void)uwbSessionInterruptedWithReason:(long long)arg1 timestamp:(double)arg2 ;
-(void)uwbSessionInterruptionReasonEnded:(long long)arg1 timestamp:(double)arg2 ;
-(void)didDiscoverNearbyObject:(id)arg1 ;
-(void)object:(id)arg1 didUpdateRegion:(id)arg2 previousRegion:(id)arg3 ;
-(void)relayDCKMessage:(id)arg1 ;
-(void)didUpdateHealthStatus:(long long)arg1 ;
-(void)runWithConfiguration:(id)arg1 ;
-(void)setConfigurationForTesting:(id)arg1 ;
-(void)_addRegionPredicate:(id)arg1 ;
-(void)_removeRegionPredicate:(id)arg1 ;
-(void)processDCKMessage:(id)arg1 responseCallback:(/*^block*/id)arg2 ;
-(void)processBluetoothEventWithType:(long long)arg1 btcClockTicks:(unsigned long long)arg2 ;
-(id)deleteURSKs;
-(id)_setDebugURSK:(id)arg1 transactionIdentifier:(unsigned)arg2 ;
-(id)_setURSKTTL:(unsigned long long)arg1 ;
@end

