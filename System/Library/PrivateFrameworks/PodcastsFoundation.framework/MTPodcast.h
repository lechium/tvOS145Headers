/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:12:10 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/PrivateFrameworks/PodcastsFoundation.framework/PodcastsFoundation
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <CoreData/NSManagedObject.h>
#import <libobjc.A.dylib/IMMetricsDataSource.h>

@class NSString, NSSet, MTSyncInfo;

@interface MTPodcast : NSManagedObject <IMMetricsDataSource>

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) BOOL sortAscending; 
@property (nonatomic,readonly) BOOL isExplicit; 
@property (nonatomic,readonly) BOOL playbackNewestToOldest; 
@property (nonatomic,readonly) BOOL feedUpdateNeedsRetry; 
@property (readonly,nonatomic) BOOL shouldBeDeleted; 
@property (assign,nonatomic) double addedDate; 
@property (nonatomic,retain) NSString * author; 
@property (assign,nonatomic) int autoDownloadType; 
@property (nonatomic,retain) NSString * category; 
@property (assign,nonatomic) long long darkCount; 
@property (assign,nonatomic) long long darkCountLocal; 
@property (assign,nonatomic) long long deletePlayedEpisodes; 
@property (assign,nonatomic) double downloadedDate; 
@property (assign,nonatomic) long long episodeLimit; 
@property (nonatomic,retain) NSString * feedURL; 
@property (assign,nonatomic) long long flags; 
@property (assign,nonatomic) BOOL hidden; 
@property (assign,nonatomic) int hidesPlayedEpisodes; 
@property (nonatomic,retain) NSString * imageURL; 
@property (nonatomic,retain) NSString * itemDescription; 
@property (assign,nonatomic) double lastDatePlayed; 
@property (assign,nonatomic) double lastTouchDate; 
@property (assign,nonatomic) BOOL notifications; 
@property (assign,nonatomic) long long offerTypes; 
@property (assign,nonatomic) long long podcastPID; 
@property (nonatomic,retain) NSString * provider; 
@property (assign,nonatomic) BOOL showPlacardForRemovePlayedEpisodes; 
@property (assign,nonatomic) long long sortOrder; 
@property (assign,nonatomic) long long storeCollectionId; 
@property (nonatomic,retain) NSString * storeCleanURL; 
@property (nonatomic,retain) NSString * storeShortURL; 
@property (assign,nonatomic) double lastStoreEpisodesInfoCheckDate; 
@property (assign,nonatomic) double lastStorePodcastInfoCheckDate; 
@property (assign,nonatomic) BOOL subscribed; 
@property (nonatomic,retain) NSString * title; 
@property (assign,nonatomic) double updateAvg; 
@property (assign,nonatomic) double updatedDate; 
@property (nonatomic,retain) NSString * updatedFeedURL; 
@property (assign,nonatomic) long long updateInterval; 
@property (assign,nonatomic) double updateStdDev; 
@property (nonatomic,retain) NSString * uuid; 
@property (nonatomic,retain) NSSet * episodes; 
@property (nonatomic,retain) NSSet * playlists; 
@property (nonatomic,retain) NSSet * playlistSettings; 
@property (nonatomic,retain) MTSyncInfo * syncInfo; 
@property (nonatomic,retain) NSString * showTypeInFeed; 
@property (assign,nonatomic) long long showTypeSetting; 
@property (nonatomic,retain) NSString * nextEpisodeUuid; 
@property (assign,nonatomic) double modifiedDate; 
@property (nonatomic,retain) NSString * webpageURL; 
@property (assign,nonatomic) double feedChangedDate; 
@property (nonatomic,retain) NSString * uberBackgroundImageURL; 
@property (nonatomic,retain) NSString * uberBackgroundJoeColor; 
@property (nonatomic,retain) NSString * displayType; 
@property (nonatomic,retain) NSString * artworkPrimaryColor; 
@property (nonatomic,readonly) BOOL autoDownload; 
@property (assign,nonatomic) long long keepEpisodes; 
@property (assign,nonatomic) BOOL orphanedFromCloud; 
@property (assign,nonatomic) BOOL showPlacardForOrphanedFromCloud; 
@property (assign,nonatomic) BOOL showPlacardForSavedEpisodes; 
+(long long)episodeLimitDefaultValue;
+(long long)deletePlayedEpisodesDefaultValue;
+(BOOL)hidePlayedEpisodesDefaultValue;
+(id)_defaultsForLoadingDefaultValues;
+(long long)defaultShowType;
+(long long)showTypeFromString:(id)arg1 ;
+(double)defaultUpdateInterval;
+(int)autoDownloadDefaultValue;
+(id)redirectURLForStoreCollectionId:(long long)arg1 ;
+(BOOL)isRedirectURL:(id)arg1 ;
+(unsigned long long)totalUnplayedCount;
+(id)productURLForStoreCollectionId:(long long)arg1 storeTrackId:(long long)arg2 ;
+(long long)storeCollectionIdForRedirectURL:(id)arg1 ;
+(id)predicateForAutoDownloadType:(int)arg1 ;
+(id)predicateForPodcastsUpdatedBefore:(id)arg1 ;
+(id)predicateForPodcastStoreId:(long long)arg1 ;
+(id)predicateForPodcastWithFeedUrl:(id)arg1 ;
+(id)_predicateForDisplayType:(long long)arg1 excluding:(BOOL)arg2 ;
+(id)userDefaultPropertiesAffectingPredicates;
+(id)predicateForAllPodcasts;
+(id)predicateForSubscribed:(BOOL)arg1 ;
+(id)predicateForSubscribedAndNotHidden:(BOOL)arg1 ;
+(id)predicateForHasBeenSynced:(BOOL)arg1 ;
+(id)predicateForPodcastsNeedingRetry:(BOOL)arg1 ;
+(id)predicateForAutoDownloadEnabled;
+(id)predicateForUpdatablePodcasts;
+(id)predicateForPodcastWithTitle:(id)arg1 ;
+(id)predicateForPodcastUuids:(id)arg1 ;
+(id)predicateForPodcastUUID:(id)arg1 ;
+(id)predicateForIdentifer:(id)arg1 ;
+(id)predicateForAreMediaAPI:(BOOL)arg1 ;
+(id)predicateForPodcastWithPodcastPID:(long long)arg1 ;
+(id)predicateForNotOfferType:(unsigned long long)arg1 ;
+(id)predicateForDisplayType:(long long)arg1 ;
+(id)predicateForNotDisplayType:(long long)arg1 ;
+(id)predicateForNullDisplayType;
+(id)predicateForNonNullDisplayType;
-(BOOL)isShareable;
-(id)shareURL;
-(id)redirectURL;
-(BOOL)isExplicit;
-(id)displayURL;
-(BOOL)sortAscending;
-(id)currentFeedURL;
-(id)metricsContentIdentifier;
-(id)metricsAdditionalData;
-(void)setPodcastPID:(long long)arg1 ;
-(BOOL)playbackNewestToOldest;
-(BOOL)feedUpdateNeedsRetry;
-(long long)episodeLimitResolvedValue;
-(BOOL)deletePlayedEpisodesResolvedValue;
-(BOOL)hidePlayedEpisodesResolvedValue;
-(long long)showTypeInFeedResolvedValue;
-(BOOL)isSerialShowTypeInFeed;
-(id)bestAvailableStoreCleanURL;
-(id)twitterShareURL;
-(void)updateLastTouchDate;
-(id)bestFeedURLExcludingRedirectURL:(BOOL)arg1 ;
-(long long)mt_syncID;
-(BOOL)shouldBeDeleted;
@end

