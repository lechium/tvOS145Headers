/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:09:37 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/PrivateFrameworks/SiriVOX.framework/SiriVOX
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <SiriVOX/SiriVOX-Structs.h>
#import <libobjc.A.dylib/AFNotifyObserverDelegate.h>
#import <libobjc.A.dylib/SVXMyriadRequestDelegate.h>

@protocol SVXMyriadResponseDelegate, OS_dispatch_queue;
@class NSObject, AFWatchdogTimer, AFMyriadGoodnessScoreEvaluator, AFMyriadPreferences, AFNotifyStatePublisher, AFNotifyObserver, NSString;

@interface SVXMyriadEndpointDevice : NSObject <AFNotifyObserverDelegate, SVXMyriadRequestDelegate> {

	id<SVXMyriadResponseDelegate> _delegate;
	int _currentRequestType;
	int _session;
	NSObject*<OS_dispatch_queue> _queue;
	AFWatchdogTimer* _timer;
	SCD_Struct_SV2 _emergencyContext;
	SCD_Struct_SV3 _endpointInfo;
	BOOL _lastMyriadDecision;
	BOOL _isWaitingForDecision;
	unsigned long long _electionPublisherState;
	AFMyriadGoodnessScoreEvaluator* _gEvaluator;
	AFMyriadPreferences* _myrPref;
	AFNotifyStatePublisher* _electionBeginPublisher;
	AFNotifyStatePublisher* _electionWinPublisher;
	AFNotifyStatePublisher* _electionLossPublisher;
	AFNotifyStatePublisher* _electionWinRespostPublisher;
	AFNotifyObserver* _electionDecisionRequestObserver;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(id)_endpoint;
-(void)notifyObserver:(id)arg1 didReceiveNotificationWithToken:(int)arg2 ;
-(void)setupEnabled:(BOOL)arg1 ;
-(void)_intializeMyriadDecisionTracker;
-(void)_intializeMyriadEventObserverAndPublisher;
-(void)_cancelMyriadElectionTimer;
-(void)_handleElectionDecisionMessage:(id)arg1 ;
-(void)resetMyriad;
-(void)_cancelEmergencyFlowTimer;
-(void)_signalEmergencyCallHandledStatus:(BOOL)arg1 ;
-(unsigned long long)_publisherState;
-(void)_intializeMyriadElectionTimer;
-(void)_initializeEmergencyFlowTimer;
-(void)_activateNewSessionIfRequired;
-(void)_sendMessage:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_deactivateSessionIfRequired;
-(void)preheatMyriad;
-(void)startAdvertising:(unsigned long long)arg1 withMyriadGoodnessScoreContext:(id)arg2 withMyriadAudioContext:(id)arg3 completion:(/*^block*/id)arg4 ;
-(id)initWithInstanceContext:(id)arg1 delegate:(id)arg2 queue:(id)arg3 ;
-(void)_handleEmergencyStatusHandledMessage:(id)arg1 ;
@end

