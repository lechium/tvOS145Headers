/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:13:37 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <UIKitCore/UIKitCore-Structs.h>
#import <UIKitCore/UIGestureRecognizer.h>

@class NSMutableArray, NSTimer;

@interface _UIRotaryGestureRecognizer : UIGestureRecognizer {

	struct {
		unsigned delegateRotaryGestureRecognizerCanBeginFromRest : 1;
		unsigned delegateRotaryGestureRecognizerMustBeginFromRest : 1;
		unsigned delegateRotaryGestureRecognizerIsAttemptingToBeginFromRest : 1;
		unsigned delegateRotaryGestureRecognizerFailedToBeginFromRest : 1;
		unsigned delegateWasNonNil : 1;
	}  _rotaryGestureRecognizerFlags;
	double _startWheelPosition;
	double _currentWheelPosition;
	double _rotaryDeadBand;
	long long _movementClassification;
	CGPoint _touchBeganPoint;
	CGPoint _digitizerLocation;
	NSMutableArray* _recentRotaryEvents;
	NSTimer* _restingTouchBeginTimer;
	NSTimer* _restingTouchRecoveryTimer;
	BOOL _isActivelyTouching;
	double _accumulatedDistance;
	double _delta;
	double _velocity;
	long long _startRegion;
	long long _beganMode;

}

@property (assign,nonatomic) double accumulatedDistance;                                          //@synthesize accumulatedDistance=_accumulatedDistance - In the implementation block
@property (assign,nonatomic) double delta;                                                        //@synthesize delta=_delta - In the implementation block
@property (assign,nonatomic) double velocity;                                                     //@synthesize velocity=_velocity - In the implementation block
@property (assign,nonatomic) BOOL isActivelyTouching;                                             //@synthesize isActivelyTouching=_isActivelyTouching - In the implementation block
@property (assign,nonatomic) long long startRegion;                                               //@synthesize startRegion=_startRegion - In the implementation block
@property (assign,nonatomic) long long beganMode;                                                 //@synthesize beganMode=_beganMode - In the implementation block
@property (assign,nonatomic,__weak) id<_UIRotaryGestureRecognizerDelegate> delegate; 
@property (nonatomic,readonly) double position; 
-(void)setDelegate:(id<_UIRotaryGestureRecognizerDelegate>)arg1 ;
-(void)reset;
-(double)position;
-(double)velocity;
-(void)setVelocity:(double)arg1 ;
-(double)delta;
-(void)setDelta:(double)arg1 ;
-(void)touchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesMoved:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesCancelled:(id)arg1 withEvent:(id)arg2 ;
-(long long)startRegion;
-(double)accumulatedDistance;
-(void)_processEvent:(id)arg1 ;
-(long long)beganMode;
-(void)_invalidateRestingTouchRecoveryTimerIfNecessary;
-(BOOL)_isTouchFarEnoughFromCenterToActivateRestingTouch:(CGPoint)arg1 ;
-(void)_invalidateRestingTouchBeginTimerIfNecessary;
-(void)_attemptToStartFromRestingTouch:(id)arg1 ;
-(BOOL)_effectiveMustBeginFromRest;
-(BOOL)_isTouchInRangeOfInitialTouchForRestingTouchActivation:(CGPoint)arg1 ;
-(void)setIsActivelyTouching:(BOOL)arg1 ;
-(void)_enterRecoveryWindowOrEndGestureWithState:(long long)arg1 ;
-(void)_notifyDelegateOfFailedToBeginFromRestIfNecessary;
-(void)setAccumulatedDistance:(double)arg1 ;
-(void)setStartRegion:(long long)arg1 ;
-(void)setBeganMode:(long long)arg1 ;
-(void)_resetDeadband;
-(void)_activateRestingTouchRecoveryTimer;
-(double)_restingTouchRangeForCurrentTouchLocation;
-(BOOL)_isPoint:(CGPoint)arg1 inRangeOfCenter:(double)arg2 ;
-(void)_endGestureFromRestingTouchRecovery:(id)arg1 ;
-(double)_calculateCurrentWheelPosition;
-(long long)_startRegionForWheelLocation:(double)arg1 ;
-(double)_calculateAngleForTouchLocation:(CGPoint)arg1 ;
-(void)_attemptToClassifyWithPreviousLocation:(CGPoint)arg1 newLocation:(CGPoint)arg2 ;
-(double)_deadzoneRangeForCurrentTouchLocation;
-(BOOL)isActivelyTouching;
-(double)_deltaForEventInfos:(id)arg1 ;
-(double)_applyDistanceWeightToValue:(double)arg1 ;
-(double)_applyDeadbandToValue:(double)arg1 ;
-(double)_velocityForEventInfos:(id)arg1 ;
-(double)_calculateRadialDistance:(CGPoint)arg1 ;
-(double)_applyScaleFactor:(double)arg1 toValue:(double)arg2 fromAngle:(double)arg3 toAngle:(double)arg4 ;
@end

