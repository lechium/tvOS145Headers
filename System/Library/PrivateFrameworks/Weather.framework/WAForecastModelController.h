/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, April 28, 2021 at 9:07:18 PM Mountain Standard Time
                       * Operating System: Version 14.5 (Build 18L204)
                       * Image Source: /System/Library/PrivateFrameworks/Weather.framework/Weather
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */


@protocol OS_dispatch_queue;
#import <Weather/Weather-Structs.h>
@class WALocationPrivacySampler, NSOperationQueue, NSObject, NSMutableSet, NSMutableDictionary, WFServiceConnection, NSString, WFWeatherStoreService;

@interface WAForecastModelController : NSObject {

	WALocationPrivacySampler* _locationGeocodingSampler;
	NSOperationQueue* _forecastOperationQueue;
	NSObject*<OS_dispatch_queue> _incomingRequestQueue;
	NSObject*<OS_dispatch_queue> _completionHandlerQueue;
	NSMutableSet* _updatingCities;
	NSMutableDictionary* _completionHandlersForCity;
	WFServiceConnection* _connection;
	ct_green_tea_logger_sRef _greenTeaLogger;
	NSOperationQueue* _priorityForecastOperationQueue;
	NSMutableSet* _priorityUpdatingCities;
	NSMutableDictionary* _priorityCompletionHandlersForCity;
	NSString* _trackingParameter;
	WFWeatherStoreService* _store;

}

@property (retain) NSOperationQueue * forecastOperationQueue;                                  //@synthesize forecastOperationQueue=_forecastOperationQueue - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> incomingRequestQueue;                          //@synthesize incomingRequestQueue=_incomingRequestQueue - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> completionHandlerQueue;                        //@synthesize completionHandlerQueue=_completionHandlerQueue - In the implementation block
@property (retain) NSMutableSet * updatingCities;                                              //@synthesize updatingCities=_updatingCities - In the implementation block
@property (retain) NSMutableDictionary * completionHandlersForCity;                            //@synthesize completionHandlersForCity=_completionHandlersForCity - In the implementation block
@property (nonatomic,retain) WFServiceConnection * connection;                                 //@synthesize connection=_connection - In the implementation block
@property (assign,nonatomic) ct_green_tea_logger_sRef greenTeaLogger;                          //@synthesize greenTeaLogger=_greenTeaLogger - In the implementation block
@property (retain) NSOperationQueue * priorityForecastOperationQueue;                          //@synthesize priorityForecastOperationQueue=_priorityForecastOperationQueue - In the implementation block
@property (retain) NSMutableSet * priorityUpdatingCities;                                      //@synthesize priorityUpdatingCities=_priorityUpdatingCities - In the implementation block
@property (retain) NSMutableDictionary * priorityCompletionHandlersForCity;                    //@synthesize priorityCompletionHandlersForCity=_priorityCompletionHandlersForCity - In the implementation block
@property (copy) NSString * trackingParameter;                                                 //@synthesize trackingParameter=_trackingParameter - In the implementation block
@property (readonly) WFWeatherStoreService * store;                                            //@synthesize store=_store - In the implementation block
@property (nonatomic,retain) WALocationPrivacySampler * locationGeocodingSampler;              //@synthesize locationGeocodingSampler=_locationGeocodingSampler - In the implementation block
-(id)init;
-(void)dealloc;
-(WFServiceConnection *)connection;
-(void)setConnection:(WFServiceConnection *)arg1 ;
-(WFWeatherStoreService *)store;
-(NSString *)trackingParameter;
-(void)setTrackingParameter:(NSString *)arg1 ;
-(void)setIncomingRequestQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)incomingRequestQueue;
-(void)setLocationGeocodingSampler:(WALocationPrivacySampler *)arg1 ;
-(BOOL)isCityBeingUpdated:(id)arg1 ;
-(void)cancelAllFetchRequests;
-(BOOL)fetchForecastForCity:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)fetchForecastForCities:(id)arg1 completion:(/*^block*/id)arg2 ;
-(WALocationPrivacySampler *)locationGeocodingSampler;
-(void)setForecastOperationQueue:(NSOperationQueue *)arg1 ;
-(NSOperationQueue *)forecastOperationQueue;
-(void)setCompletionHandlerQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setUpdatingCities:(NSMutableSet *)arg1 ;
-(void)setCompletionHandlersForCity:(NSMutableDictionary *)arg1 ;
-(BOOL)isPriorityForecastOperationsEnabled;
-(void)setPriorityForecastOperationQueue:(NSOperationQueue *)arg1 ;
-(NSOperationQueue *)priorityForecastOperationQueue;
-(void)setPriorityUpdatingCities:(NSMutableSet *)arg1 ;
-(void)setPriorityCompletionHandlersForCity:(NSMutableDictionary *)arg1 ;
-(NSMutableSet *)updatingCities;
-(ct_green_tea_logger_sRef)greenTeaLogger;
-(BOOL)isPriorityCity:(id)arg1 ;
-(BOOL)isPriorityCityBeingUpdated:(id)arg1 ;
-(NSMutableSet *)priorityUpdatingCities;
-(BOOL)fetchForecastForCity:(id)arg1 withUnits:(int)arg2 completion:(/*^block*/id)arg3 ;
-(BOOL)fetchForecastForCity:(id)arg1 withUnits:(int)arg2 requestOptions:(id)arg3 completion:(/*^block*/id)arg4 ;
-(id)_queue_executeFetchForCity:(id)arg1 withUnits:(int)arg2 requestOptions:(id)arg3 completion:(/*^block*/id)arg4 ;
-(id)_queue_executeFetchForCity:(id)arg1 completion:(/*^block*/id)arg2 ;
-(NSMutableDictionary *)priorityCompletionHandlersForCity;
-(id)_queue_executeFetchForCity:(id)arg1 withUnits:(int)arg2 requestOptions:(id)arg3 completion:(/*^block*/id)arg4 completionHandlersForCity:(id)arg5 updatingCities:(id)arg6 ;
-(NSMutableDictionary *)completionHandlersForCity;
-(id)_commaSeparatedNamesForUpdatingCities:(id)arg1 ;
-(void)_handleForecastOperationCompletion:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)completionHandlerQueue;
-(id)_commaSeparatedPriorityUpdatingCitiesNames;
-(id)_commaSeparatedUpdatingCitiesNames;
-(void)setGreenTeaLogger:(ct_green_tea_logger_sRef)arg1 ;
@end

