//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "ACSURLSessionDataDelegate-Protocol.h"

@class ACLSTypeVerifier, ACSURLSession, NSArray, NSDate, NSDictionary, NSMutableData, NSMutableDictionary, NSOperationQueue, NSString, NSURL, NSURLSessionConfiguration;
@protocol OS_dispatch_queue, OS_dispatch_semaphore, OS_dispatch_source, OS_xpc_object;

@interface AssetCacheLocatorService : NSObject <ACSURLSessionDataDelegate>
{
    _Bool _redactLogs;	// 8 = 0x8
    _Bool _skipEVCheck;	// 9 = 0x9
    _Bool _diskCacheRefreshTimerResumed;	// 10 = 0xa
    _Bool _cacheRefreshInProgress;	// 11 = 0xb
    _Bool _locateServerValidated;	// 12 = 0xc
    int _concurrentDNSResolutions;	// 16 = 0x10
    unsigned int _singleLocateTag;	// 20 = 0x14
    unsigned int _locateTag;	// 24 = 0x18
    double _affinityQueryTimeout;	// 32 = 0x20
    double _locateTimeout;	// 40 = 0x28
    double _dnsResolutionTimeout;	// 48 = 0x30
    NSURL *_locateURL;	// 56 = 0x38
    double _refreshValidityInterval;	// 64 = 0x40
    NSString *_cacheDirPath;	// 72 = 0x48
    NSString *_diskCachePlistPath;	// 80 = 0x50
    NSArray *_localhostAddresses;	// 88 = 0x58
    NSDictionary *_serverCapabilitiesTemplate;	// 96 = 0x60
    ACLSTypeVerifier *_serverCapabilitiesVerifier;	// 104 = 0x68
    NSDictionary *_serverDetailsTemplate;	// 112 = 0x70
    ACLSTypeVerifier *_serverDetailsVerifier;	// 120 = 0x78
    NSDictionary *_diskCacheTemplate;	// 128 = 0x80
    ACLSTypeVerifier *_diskCacheVerifier;	// 136 = 0x88
    NSArray *_softwareVersions;	// 144 = 0x90
    NSDate *_bootTime;	// 152 = 0x98
    NSURLSessionConfiguration *_locateSessionConfig;	// 160 = 0xa0
    NSURLSessionConfiguration *_importSessionConfig;	// 168 = 0xa8
    NSURLSessionConfiguration *_querySessionConfig;	// 176 = 0xb0
    NSObject<OS_dispatch_queue> *_queue;	// 184 = 0xb8
    NSObject<OS_xpc_object> *_listenerConnection;	// 192 = 0xc0
    NSMutableDictionary *_diskCache;	// 200 = 0xc8
    NSObject<OS_dispatch_source> *_diskCacheRefreshTimer;	// 208 = 0xd0
    NSObject<OS_dispatch_semaphore> *_singleLocate;	// 216 = 0xd8
    NSOperationQueue *_locateOpQueue;	// 224 = 0xe0
    NSArray *_localAddresses;	// 232 = 0xe8
    NSArray *_gatewayIdentifiers;	// 240 = 0xf0
    NSObject<OS_dispatch_queue> *_cacheRefreshQueue;	// 248 = 0xf8
    NSMutableDictionary *_affinityCache;	// 256 = 0x100
    unsigned long long _testFlags;	// 264 = 0x108
    CDUnknownBlockType _locateCallback;	// 272 = 0x110
    NSObject<OS_dispatch_queue> *_locateCallbackQueue;	// 280 = 0x118
    NSArray *_locateFavoredServerRanges;	// 288 = 0x120
    ACSURLSession *_locateSession;	// 296 = 0x128
    unsigned long long _locateResponseCode;	// 304 = 0x130
    NSMutableData *_locateResponseData;	// 312 = 0x138
    NSDate *_lastLocateDate;	// 320 = 0x140
}

- (void).cxx_destruct;	// IMP=0x0000000100027368
@property(retain) NSDate *lastLocateDate; // @synthesize lastLocateDate=_lastLocateDate;
@property(retain) NSMutableData *locateResponseData; // @synthesize locateResponseData=_locateResponseData;
@property unsigned long long locateResponseCode; // @synthesize locateResponseCode=_locateResponseCode;
@property _Bool locateServerValidated; // @synthesize locateServerValidated=_locateServerValidated;
@property(retain) ACSURLSession *locateSession; // @synthesize locateSession=_locateSession;
@property(retain) NSArray *locateFavoredServerRanges; // @synthesize locateFavoredServerRanges=_locateFavoredServerRanges;
@property(retain) NSObject<OS_dispatch_queue> *locateCallbackQueue; // @synthesize locateCallbackQueue=_locateCallbackQueue;
@property(copy) CDUnknownBlockType locateCallback; // @synthesize locateCallback=_locateCallback;
@property unsigned int locateTag; // @synthesize locateTag=_locateTag;
@property unsigned long long testFlags; // @synthesize testFlags=_testFlags;
@property(retain) NSMutableDictionary *affinityCache; // @synthesize affinityCache=_affinityCache;
@property _Bool cacheRefreshInProgress; // @synthesize cacheRefreshInProgress=_cacheRefreshInProgress;
@property(retain) NSObject<OS_dispatch_queue> *cacheRefreshQueue; // @synthesize cacheRefreshQueue=_cacheRefreshQueue;
@property(retain) NSArray *gatewayIdentifiers; // @synthesize gatewayIdentifiers=_gatewayIdentifiers;
@property(retain) NSArray *localAddresses; // @synthesize localAddresses=_localAddresses;
@property(retain) NSOperationQueue *locateOpQueue; // @synthesize locateOpQueue=_locateOpQueue;
@property unsigned int singleLocateTag; // @synthesize singleLocateTag=_singleLocateTag;
@property(retain) NSObject<OS_dispatch_semaphore> *singleLocate; // @synthesize singleLocate=_singleLocate;
@property _Bool diskCacheRefreshTimerResumed; // @synthesize diskCacheRefreshTimerResumed=_diskCacheRefreshTimerResumed;
@property(retain) NSObject<OS_dispatch_source> *diskCacheRefreshTimer; // @synthesize diskCacheRefreshTimer=_diskCacheRefreshTimer;
@property(retain) NSMutableDictionary *diskCache; // @synthesize diskCache=_diskCache;
@property(retain) NSObject<OS_xpc_object> *listenerConnection; // @synthesize listenerConnection=_listenerConnection;
@property(retain) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain) NSURLSessionConfiguration *querySessionConfig; // @synthesize querySessionConfig=_querySessionConfig;
@property(retain) NSURLSessionConfiguration *importSessionConfig; // @synthesize importSessionConfig=_importSessionConfig;
@property(retain) NSURLSessionConfiguration *locateSessionConfig; // @synthesize locateSessionConfig=_locateSessionConfig;
@property(retain) NSDate *bootTime; // @synthesize bootTime=_bootTime;
@property(retain) NSArray *softwareVersions; // @synthesize softwareVersions=_softwareVersions;
@property(retain) ACLSTypeVerifier *diskCacheVerifier; // @synthesize diskCacheVerifier=_diskCacheVerifier;
@property(retain) NSDictionary *diskCacheTemplate; // @synthesize diskCacheTemplate=_diskCacheTemplate;
@property(retain) ACLSTypeVerifier *serverDetailsVerifier; // @synthesize serverDetailsVerifier=_serverDetailsVerifier;
@property(retain) NSDictionary *serverDetailsTemplate; // @synthesize serverDetailsTemplate=_serverDetailsTemplate;
@property(retain) ACLSTypeVerifier *serverCapabilitiesVerifier; // @synthesize serverCapabilitiesVerifier=_serverCapabilitiesVerifier;
@property(retain) NSDictionary *serverCapabilitiesTemplate; // @synthesize serverCapabilitiesTemplate=_serverCapabilitiesTemplate;
@property(retain) NSArray *localhostAddresses; // @synthesize localhostAddresses=_localhostAddresses;
@property(retain) NSString *diskCachePlistPath; // @synthesize diskCachePlistPath=_diskCachePlistPath;
@property(retain) NSString *cacheDirPath; // @synthesize cacheDirPath=_cacheDirPath;
@property _Bool skipEVCheck; // @synthesize skipEVCheck=_skipEVCheck;
@property double refreshValidityInterval; // @synthesize refreshValidityInterval=_refreshValidityInterval;
@property _Bool redactLogs; // @synthesize redactLogs=_redactLogs;
@property(retain) NSURL *locateURL; // @synthesize locateURL=_locateURL;
@property double dnsResolutionTimeout; // @synthesize dnsResolutionTimeout=_dnsResolutionTimeout;
@property double locateTimeout; // @synthesize locateTimeout=_locateTimeout;
@property int concurrentDNSResolutions; // @synthesize concurrentDNSResolutions=_concurrentDNSResolutions;
@property double affinityQueryTimeout; // @synthesize affinityQueryTimeout=_affinityQueryTimeout;
- (id)redactStringsFromObject:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000100026d90
- (id)redactObject:(id)arg1;	// IMP=0x0000000100026918
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100026908
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;	// IMP=0x000000010002658c
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100026308
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;	// IMP=0x00000001000259ec
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100025900
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000001000254a4
- (void)importToCachingServerAsURL:(id)arg1 sourcePath:(id)arg2 sourceFileHandle:(id)arg3 sourceOffset:(long long)arg4 sourceLength:(long long)arg5 method:(id)arg6 headers:(id)arg7 importStrategies:(id)arg8 entitled:(_Bool)arg9 callback:(CDUnknownBlockType)arg10 callbackQueue:(id)arg11 tag:(unsigned int)arg12;	// IMP=0x00000001000251d8
- (void)importToLocalCachingServerAsURL:(id)arg1 sourceFileHandle:(id)arg2 sourceOffset:(long long)arg3 sourceLength:(long long)arg4 method:(id)arg5 headers:(id)arg6 callback:(CDUnknownBlockType)arg7 callbackQueue:(id)arg8 tag:(unsigned int)arg9;	// IMP=0x0000000100024d50
- (void)updateHealthOfCachingServerWithHostport:(id)arg1 healthy:(_Bool)arg2 override:(_Bool)arg3 callback:(CDUnknownBlockType)arg4 callbackQueue:(id)arg5 tag:(unsigned int)arg6;	// IMP=0x000000010002452c
- (void)recentlySeenCachingServerWithAutoRefresh:(_Bool)arg1 callback:(CDUnknownBlockType)arg2 callbackQueue:(id)arg3 tag:(unsigned int)arg4;	// IMP=0x0000000100024094
- (_Bool)isAddress:(id)arg1 inCompiledRanges:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000100023d74
- (id)compileRanges:(id)arg1 tag:(unsigned int)arg2;	// IMP=0x0000000100023940
- (id)describeCapableServers:(id)arg1 fromAvailableServers:(id)arg2 withOtherServers:(id)arg3;	// IMP=0x00000001000234c4
- (void)slowcateCachingServerWithTimeout:(double)arg1 capabilities:(id)arg2 affinityID:(id)arg3 forceRefresh:(_Bool)arg4 forceDNSRefresh:(_Bool)arg5 callback:(CDUnknownBlockType)arg6 tag:(unsigned int)arg7;	// IMP=0x0000000100021c0c
- (void)relocateCachingServersWithTimeout:(double)arg1 capabilities:(id)arg2 affinityID:(id)arg3 forceRefresh:(_Bool)arg4 tag:(unsigned int)arg5;	// IMP=0x00000001000215ac
- (void)locateCachingServersWithTimeout:(double)arg1 capabilities:(id)arg2 affinityID:(id)arg3 autoRefresh:(_Bool)arg4 quickMiss:(_Bool)arg5 forceMiss:(_Bool)arg6 callback:(CDUnknownBlockType)arg7 callbackQueue:(id)arg8 tag:(unsigned int)arg9;	// IMP=0x0000000100020d40
- (int)probeCacheWithLabel:(id)arg1 capabilities:(id)arg2 affinityID:(id)arg3 hitServers:(id *)arg4 hitServersAreSorted:(_Bool *)arg5 hitOtherServers:(id *)arg6 hitValidityInterval:(double *)arg7 tag:(unsigned int)arg8;	// IMP=0x0000000100020498
- (_Bool)probeCacheForType:(id)arg1 withLabel:(id)arg2 networkIdentifiers:(id)arg3 hitServers:(id *)arg4 hitValidityInterval:(double *)arg5 tag:(unsigned int)arg6;	// IMP=0x00000001000202c4
- (void)uncacheAllAffinitiesWithTag:(unsigned int)arg1;	// IMP=0x0000000100020228
- (void)queryServersFromArray:(id)arg1 forReachabilityOrAffinityID:(id)arg2 withTimeout:(double)arg3 callbackWithServers:(CDUnknownBlockType)arg4 callbackQueue:(id)arg5 tag:(unsigned int)arg6;	// IMP=0x000000010001e1b0
- (void)cacheServers:(id)arg1 forAffinityID:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x000000010001df5c
- (id)cachedServers:(id)arg1 forAffinityID:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x000000010001dbdc
- (void)refineServers:(id)arg1 intoBest:(id *)arg2 andOther:(id *)arg3 tag:(unsigned int)arg4;	// IMP=0x000000010001d858
- (id)serversFromArray:(id)arg1 withCapabilities:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x000000010001d5f0
- (_Bool)doesServer:(id)arg1 haveCapabilities:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x000000010001d220
- (void)locateLocalCachingServersWithTimeout:(double)arg1 localAddresses:(id)arg2 gatewayIdentifiers:(id)arg3 configurationProfiles:(id)arg4 forceDNSRefresh:(_Bool)arg5 callback:(CDUnknownBlockType)arg6 callbackQueue:(id)arg7 tag:(unsigned int)arg8;	// IMP=0x000000010001c2f4
- (_Bool)parseLocateResponse:(id)arg1 withFavoredServerRanges:(id)arg2 intoServers:(id *)arg3 validityInterval:(double *)arg4 error:(id *)arg5 tag:(unsigned int)arg6;	// IMP=0x000000010001b374
- (void)locateLocalCachingServersWithHeaders:(id)arg1 body:(id)arg2 timeout:(double)arg3 favoredServerRanges:(id)arg4 callback:(CDUnknownBlockType)arg5 callbackQueue:(id)arg6 tag:(unsigned int)arg7;	// IMP=0x000000010001a410
- (id)locateTetheredCachingServersWithTag:(unsigned int)arg1;	// IMP=0x0000000100019db4
- (void)uncacheAllRecentlySeenWithTag:(unsigned int)arg1;	// IMP=0x0000000100019cc4
- (void)uncacheRecentlySeenForNetworkIdentifiers:(id)arg1 tag:(unsigned int)arg2;	// IMP=0x0000000100019ca0
- (void)cacheNotRecentlySeenForNetworkIdentifiers:(id)arg1 tag:(unsigned int)arg2;	// IMP=0x0000000100019bd0
- (void)cacheRecentlySeen:(_Bool)arg1 forNetworkIdentifiers:(id)arg2 validityInterval:(double)arg3 tag:(unsigned int)arg4;	// IMP=0x00000001000198b0
- (void)cachedRecentlySeen:(id *)arg1 forNetworkIdentifiers:(id)arg2 validityInterval:(double *)arg3 tag:(unsigned int)arg4;	// IMP=0x0000000100019830
- (void)uncacheDNSPublicAddressRangesAndFavoredServerRangesForNetworkIdentifiers:(id)arg1 tag:(unsigned int)arg2;	// IMP=0x000000010001980c
- (void)cacheDNSPublicAddressRanges:(id)arg1 andFavoredServerRanges:(id)arg2 forNetworkIdentifiers:(id)arg3 validityInterval:(double)arg4 tag:(unsigned int)arg5;	// IMP=0x0000000100019458
- (void)cachedDNSPublicAddressRanges:(id *)arg1 andFavoredServerRanges:(id *)arg2 forNetworkIdentifiers:(id)arg3 tag:(unsigned int)arg4;	// IMP=0x0000000100019374
- (void)uncacheAllServersWithTag:(unsigned int)arg1;	// IMP=0x0000000100019284
- (_Bool)anyCachedServersWithTag:(unsigned int)arg1;	// IMP=0x00000001000191e8
- (void)uncacheEntriesCalled:(id)arg1 withKey:(id)arg2 forNetworkIdentifiers:(id)arg3 tag:(unsigned int)arg4;	// IMP=0x0000000100018f88
- (void)uncacheServersForNetworkIdentifiers:(id)arg1 tag:(unsigned int)arg2;	// IMP=0x0000000100018f64
- (void)cacheServers:(id)arg1 forNetworkIdentifiers:(id)arg2 validityInterval:(double)arg3 tag:(unsigned int)arg4;	// IMP=0x0000000100018afc
- (id)cachedEntryCalled:(id)arg1 withKey:(id)arg2 forNetworkIdentifiers:(id)arg3 validityInterval:(double *)arg4 tag:(unsigned int)arg5;	// IMP=0x000000010001879c
- (void)cachedServers:(id *)arg1 forNetworkIdentifiers:(id)arg2 validityInterval:(double *)arg3 tag:(unsigned int)arg4;	// IMP=0x00000001000186fc
- (void)updateDiskCacheRefreshTimerWithTag:(unsigned int)arg1;	// IMP=0x0000000100017f88
- (void)saveDiskCacheWithTag:(unsigned int)arg1;	// IMP=0x0000000100017a28
- (_Bool)transferVolatileStateFromDiskCache:(id)arg1 toDiskCache:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x00000001000172e8
- (void)loadDiskCacheWithTag:(unsigned int)arg1;	// IMP=0x0000000100016434
- (id)makeBootTimeWithTag:(unsigned int)arg1;	// IMP=0x0000000100016328
- (id)sanitizeRanges:(id)arg1 fromSource:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000100015cc4
- (void)resolveDNSRecordsWithTimeout:(double)arg1 callback:(CDUnknownBlockType)arg2 callbackQueue:(id)arg3 tag:(unsigned int)arg4;	// IMP=0x0000000100014b10
- (void)resolveDNSRecordNamed:(id)arg1 withTimeout:(double)arg2 errorIfNotFound:(_Bool)arg3 callback:(CDUnknownBlockType)arg4 callbackQueue:(id)arg5 tag:(unsigned int)arg6;	// IMP=0x00000001000135b8
- (id)makeRangesFromDNSRecordNamed:(id)arg1 withType:(int)arg2 data:(const char *)arg3 length:(unsigned long long)arg4 more:(_Bool *)arg5 error:(id *)arg6 tag:(unsigned int)arg7;	// IMP=0x0000000100012a24
- (id)safeString:(const char *)arg1 length:(unsigned long long)arg2 forceHex:(_Bool)arg3;	// IMP=0x0000000100012964
- (_Bool)makeLocalAddresses:(id *)arg1 andGatewayIdentifiers:(id *)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000100012704
- (void)watchForNetworkChanges;	// IMP=0x0000000100012484
- (void)networkChanged;	// IMP=0x00000001000122d4
- (id)makeSoftwareVersions;	// IMP=0x0000000100011e84
- (_Bool)doesConnection:(id)arg1 haveEntitlement:(const char *)arg2;	// IMP=0x0000000100011e38
- (_Bool)handleSetTestFlagsEvent:(id)arg1 forConnection:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000100011df4
- (_Bool)handleIntrospectEvent:(id)arg1 forConnection:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000100011494
- (_Bool)handleImportEvent:(id)arg1 forConnection:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000100010ae0
- (_Bool)handleUpdateHealthEvent:(id)arg1 forConnection:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x00000001000107a0
- (_Bool)handleRecentlySeenEvent:(id)arg1 forConnection:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x0000000100010228
- (_Bool)handleLocateEvent:(id)arg1 forConnection:(id)arg2 tag:(unsigned int)arg3;	// IMP=0x000000010000efd8
- (_Bool)handleEvent:(id)arg1 forConnection:(id)arg2;	// IMP=0x000000010000e8f0
- (void)handleConnection:(id)arg1;	// IMP=0x000000010000e704
- (void)start;	// IMP=0x000000010000e290
- (id)choose:(int)arg1 fromArray:(id)arg2 sorted:(_Bool)arg3 other:(id)arg4 tag:(unsigned int)arg5;	// IMP=0x000000010000dc50
- (id)servers:(id)arg1 byAppendingServers:(id)arg2;	// IMP=0x000000010000dbac
- (id)XPCObjectFromNSObject:(id)arg1 tag:(unsigned int)arg2;	// IMP=0x000000010000d880
- (id)NSObjectFromXPCObject:(id)arg1 tag:(unsigned int)arg2;	// IMP=0x000000010000d4c4
- (id)errorWithObject:(id)arg1 fromService:(const char *)arg2 tag:(unsigned int)arg3;	// IMP=0x000000010000d364
- (id)objectWithError:(id)arg1;	// IMP=0x000000010000d250
- (_Bool)amRunningInMySingleLocate:(unsigned int)arg1;	// IMP=0x000000010000d220
- (_Bool)amRunningOnMyQueue;	// IMP=0x000000010000d1cc
- (id)systemGroupContainerPathWithGroupIdentifier:(id)arg1;	// IMP=0x000000010000d0f8
- (id)init;	// IMP=0x000000010000a994

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

