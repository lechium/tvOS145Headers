//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "PBInstanceDependable-Protocol.h"
#import "PBPresentationElementFocusCoordinatorObserver-Protocol.h"
#import "PBSDisplayManagerServiceInterface-Protocol.h"
#import "PBSDisplayState-Protocol.h"
#import "PBSMigrationHandling-Protocol.h"
#import "PBSceneManagerObserver-Protocol.h"

@class NSArray, NSDictionary, NSHashTable, NSMutableArray, NSMutableDictionary, NSNumber, NSSet, NSString, NSUserDefaults, PBBulletinService, PBCableSignalInfo, PBSDisplayMode, SSDisplay, UIApplicationSceneDeactivationAssertion;
@protocol OS_dispatch_source;

@interface PBDisplayManager : NSObject <PBSceneManagerObserver, PBPresentationElementFocusCoordinatorObserver, PBSDisplayState, PBSDisplayManagerServiceInterface, PBSMigrationHandling, PBInstanceDependable>
{
    _Bool _filteredUsingdPineBoardPolicy;	// 8 = 0x8
    _Bool _canHandleHighBandwidthModes;	// 9 = 0x9
    _Bool _shouldModeSwitchForDynamicRange;	// 10 = 0xa
    _Bool _shouldModeSwitchForFrameRate;	// 11 = 0xb
    _Bool _atmosEnabled;	// 12 = 0xc
    _Bool _detectedPoorCableConnection;	// 13 = 0xd
    _Bool _deemed4KCapable;	// 14 = 0xe
    _Bool _usesDolbyLowLatency;	// 15 = 0xf
    double _baseCableCheckTimeInterval;	// 16 = 0x10
    NSArray *_blackScreenRecoveryDisplayModes;	// 24 = 0x18
    NSMutableDictionary *_nextEstablishModePerDisplays;	// 32 = 0x20
    NSHashTable *_stateObservers;	// 40 = 0x28
    SSDisplay *_systemState;	// 48 = 0x30
    NSObject<OS_dispatch_source> *_reloadStateSource;	// 56 = 0x38
    NSObject<OS_dispatch_source> *_notifyClientsSource;	// 64 = 0x40
    NSNumber *_displayConnectionToNotify;	// 72 = 0x48
    PBBulletinService *_bulletinService;	// 80 = 0x50
    UIApplicationSceneDeactivationAssertion *_noScreenAssertion;	// 88 = 0x58
    double _localeRefreshRate;	// 96 = 0x60
    NSArray *_sortedDisplayModes;	// 104 = 0x68
    PBSDisplayMode *_currentDisplayMode;	// 112 = 0x70
    PBSDisplayMode *_fallbackDisplayMode;	// 120 = 0x78
    PBSDisplayMode *_userSelectedDisplayMode;	// 128 = 0x80
    NSSet *_seenDisplayIDs;	// 136 = 0x88
    NSString *_currentDisplayID;	// 144 = 0x90
    long long _displayConnection;	// 152 = 0x98
    long long _lastCablePollStatus;	// 160 = 0xa0
    NSDictionary *_audioLatencies;	// 168 = 0xa8
    NSDictionary *_colorCalibrations;	// 176 = 0xb0
    long long _eARCStatus;	// 184 = 0xb8
    double _userPreferredRefreshRate;	// 192 = 0xc0
    NSSet *_encodedPromotedDisplayModes;	// 200 = 0xc8
    NSNumber *_presentedDisplayAssistantKind;	// 208 = 0xd0
    NSUserDefaults *_defaults;	// 216 = 0xd8
    NSDictionary *_memoryStore;	// 224 = 0xe0
    NSString *_currentDisplayIdentifier;	// 232 = 0xe8
    NSObject<OS_dispatch_source> *_cableCheckTimer;	// 240 = 0xf0
    PBCableSignalInfo *_lastCableErrorInfo;	// 248 = 0xf8
    NSMutableArray *_matchContentRequestedModes;	// 256 = 0x100
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;	// IMP=0x000000010024c4a0
+ (unsigned long long)migrateWithContext:(id)arg1 error:(id *)arg2;	// IMP=0x000000010024bd48
+ (unsigned long long)migrateDisplayModes:(id)arg1 error:(id *)arg2;	// IMP=0x000000010024b028
+ (unsigned long long)migratePreferenceKeyToDisplayIdentifier:(id)arg1;	// IMP=0x000000010024ab60
+ (id)sharedInstance;	// IMP=0x0000000100240e4c
+ (id)dependencyDescription;	// IMP=0x0000000100240c04
+ (_Bool)shouldAllowModeSwitchForDynamicFrameRate;	// IMP=0x00000001000a1fec
+ (_Bool)shouldAllowModeSwitchForDynamicRange;	// IMP=0x00000001000a1f0c
+ (void)enumerateMutableDisplayPreferencesUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000100132b48
- (void).cxx_destruct;	// IMP=0x000000010024db14
@property(retain, nonatomic) NSMutableArray *matchContentRequestedModes; // @synthesize matchContentRequestedModes=_matchContentRequestedModes;
@property(copy, nonatomic) PBCableSignalInfo *lastCableErrorInfo; // @synthesize lastCableErrorInfo=_lastCableErrorInfo;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *cableCheckTimer; // @synthesize cableCheckTimer=_cableCheckTimer;
@property(copy, nonatomic) NSString *currentDisplayIdentifier; // @synthesize currentDisplayIdentifier=_currentDisplayIdentifier;
@property(retain, nonatomic) NSDictionary *memoryStore; // @synthesize memoryStore=_memoryStore;
@property(retain, nonatomic) NSUserDefaults *defaults; // @synthesize defaults=_defaults;
@property(readonly, nonatomic) _Bool usesDolbyLowLatency; // @synthesize usesDolbyLowLatency=_usesDolbyLowLatency;
@property(retain, nonatomic) NSNumber *presentedDisplayAssistantKind; // @synthesize presentedDisplayAssistantKind=_presentedDisplayAssistantKind;
@property(nonatomic) _Bool deemed4KCapable; // @synthesize deemed4KCapable=_deemed4KCapable;
@property(copy, nonatomic) NSSet *encodedPromotedDisplayModes; // @synthesize encodedPromotedDisplayModes=_encodedPromotedDisplayModes;
@property(nonatomic) double userPreferredRefreshRate; // @synthesize userPreferredRefreshRate=_userPreferredRefreshRate;
@property(nonatomic) long long eARCStatus; // @synthesize eARCStatus=_eARCStatus;
@property(retain, nonatomic) NSDictionary *colorCalibrations; // @synthesize colorCalibrations=_colorCalibrations;
@property(retain, nonatomic) NSDictionary *audioLatencies; // @synthesize audioLatencies=_audioLatencies;
@property(nonatomic) long long lastCablePollStatus; // @synthesize lastCablePollStatus=_lastCablePollStatus;
@property(nonatomic) _Bool detectedPoorCableConnection; // @synthesize detectedPoorCableConnection=_detectedPoorCableConnection;
@property(nonatomic) long long displayConnection; // @synthesize displayConnection=_displayConnection;
@property(nonatomic) _Bool atmosEnabled; // @synthesize atmosEnabled=_atmosEnabled;
@property(nonatomic) _Bool shouldModeSwitchForFrameRate; // @synthesize shouldModeSwitchForFrameRate=_shouldModeSwitchForFrameRate;
@property(nonatomic) _Bool shouldModeSwitchForDynamicRange; // @synthesize shouldModeSwitchForDynamicRange=_shouldModeSwitchForDynamicRange;
@property(nonatomic) _Bool canHandleHighBandwidthModes; // @synthesize canHandleHighBandwidthModes=_canHandleHighBandwidthModes;
@property(copy, nonatomic) NSString *currentDisplayID; // @synthesize currentDisplayID=_currentDisplayID;
@property(copy, nonatomic) NSSet *seenDisplayIDs; // @synthesize seenDisplayIDs=_seenDisplayIDs;
@property(copy, nonatomic) PBSDisplayMode *userSelectedDisplayMode; // @synthesize userSelectedDisplayMode=_userSelectedDisplayMode;
@property(copy, nonatomic) PBSDisplayMode *fallbackDisplayMode; // @synthesize fallbackDisplayMode=_fallbackDisplayMode;
@property(copy, nonatomic) PBSDisplayMode *currentDisplayMode; // @synthesize currentDisplayMode=_currentDisplayMode;
@property(copy, nonatomic) NSArray *sortedDisplayModes; // @synthesize sortedDisplayModes=_sortedDisplayModes;
@property(nonatomic) double localeRefreshRate; // @synthesize localeRefreshRate=_localeRefreshRate;
@property(retain, nonatomic) UIApplicationSceneDeactivationAssertion *noScreenAssertion; // @synthesize noScreenAssertion=_noScreenAssertion;
@property(retain, nonatomic) PBBulletinService *bulletinService; // @synthesize bulletinService=_bulletinService;
@property(retain, nonatomic) NSNumber *displayConnectionToNotify; // @synthesize displayConnectionToNotify=_displayConnectionToNotify;
@property(readonly, nonatomic) NSObject<OS_dispatch_source> *notifyClientsSource; // @synthesize notifyClientsSource=_notifyClientsSource;
@property(readonly, nonatomic) NSObject<OS_dispatch_source> *reloadStateSource; // @synthesize reloadStateSource=_reloadStateSource;
@property(retain, nonatomic) SSDisplay *systemState; // @synthesize systemState=_systemState;
@property(retain, nonatomic) NSHashTable *stateObservers; // @synthesize stateObservers=_stateObservers;
@property(retain, nonatomic) NSMutableDictionary *nextEstablishModePerDisplays; // @synthesize nextEstablishModePerDisplays=_nextEstablishModePerDisplays;
@property(nonatomic) _Bool filteredUsingdPineBoardPolicy; // @synthesize filteredUsingdPineBoardPolicy=_filteredUsingdPineBoardPolicy;
@property(copy, nonatomic) NSArray *blackScreenRecoveryDisplayModes; // @synthesize blackScreenRecoveryDisplayModes=_blackScreenRecoveryDisplayModes;
@property(nonatomic) double baseCableCheckTimeInterval; // @synthesize baseCableCheckTimeInterval=_baseCableCheckTimeInterval;
- (void)sceneManager:(id)arg1 didChangeCurrentApplicationFromSceneHandle:(id)arg2 toSceneHandle:(id)arg3;	// IMP=0x000000010024d094
- (void)presentationElementFocusCoordinator:(id)arg1 didUpdateToActiveLayoutLevel:(long long)arg2 fromLevel:(long long)arg3;	// IMP=0x000000010024cd88
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x000000010024c8d0
- (void)removeStateObserver:(id)arg1;	// IMP=0x000000010024c424
- (void)addStateObserver:(id)arg1;	// IMP=0x000000010024c3a8
- (void)notifyStateChangeForDisplayConnection:(long long)arg1;	// IMP=0x000000010024c194
- (void)displayConnectionUpdated:(long long)arg1;	// IMP=0x000000010024be94
- (void)_toggleColorCalibration;	// IMP=0x000000010024a75c
- (long long)colorCalibrationStatusForDisplayMode:(id)arg1;	// IMP=0x000000010024a6f8
- (id)colorCalibrationForDisplayMode:(id)arg1;	// IMP=0x000000010024a688
- (void)setColorCalibration:(id)arg1 forKeys:(id)arg2;	// IMP=0x000000010024a5fc
- (void)setColorCalibration:(id)arg1 forKey:(id)arg2;	// IMP=0x000000010024a528
- (id)audioLatencyForDisplayMode:(id)arg1;	// IMP=0x000000010024a4b8
- (void)setAudioLatency:(id)arg1 forKey:(id)arg2;	// IMP=0x000000010024a42c
- (_Bool)didCompleteDisplayAssistantForCurrentDisplay;	// IMP=0x000000010024a3f8
- (void)displayAssistantDidCompleteForKind:(id)arg1 fromUserInteraction:(_Bool)arg2;	// IMP=0x000000010024a268
- (void)removeCableCheckHistory;	// IMP=0x000000010024a238
- (void)forgetDisplaysForDisplayAssistant;	// IMP=0x000000010024a208
- (void)displayAssistantDidCompleteForKind:(id)arg1;	// IMP=0x000000010024a1a0
- (void)displayAssistantDidStartForKind:(id)arg1;	// IMP=0x000000010024a140
- (void)presentDisplayAssistantWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100249f08
- (void)handleRegionChangeWithNewCountryCode:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100249e7c
- (void)wakeDisplayWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00000001002499a0
- (void)sleepDisplayWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010024913c
- (void)completeDisplayTransition:(long long)arg1 error:(id)arg2 withReply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100248bec
- (void)_resetSettingsForCurrentDisplay;	// IMP=0x0000000100248968
- (_Bool)_recalculateDefaultDisplayMode:(id *)arg1;	// IMP=0x0000000100247f24
- (id)_recalculatedBlackScreenRecoveryDisplayModes;	// IMP=0x00000001002476d4
- (id)_recalculatedDisplayModesFromCoreAnimationModes:(id)arg1;	// IMP=0x0000000100246fc4
- (void)_applyColorCalibrationIfNeeded;	// IMP=0x0000000100246b2c
- (void)reloadState;	// IMP=0x0000000100245728
- (void)updateDisplayManagerWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100244808
- (_Bool)updateCurrentCADisplayFromDisplayMode:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100243fa4
- (void)enableAtmos:(_Bool)arg1;	// IMP=0x0000000100243f60
- (void)enableModeSwitchingForFrameRate:(_Bool)arg1;	// IMP=0x0000000100243f1c
- (void)enableModeSwitchingForDynamicRange:(_Bool)arg1;	// IMP=0x0000000100243ed8
- (id)findMatchingCAMode:(id)arg1;	// IMP=0x0000000100243afc
- (id)findMatchingLocaleMode:(id)arg1 enforceVirtualCheck:(_Bool)arg2;	// IMP=0x0000000100243a70
- (id)findFirstMode:(CDUnknownBlockType)arg1;	// IMP=0x0000000100243a00
- (id)filterModes:(CDUnknownBlockType)arg1;	// IMP=0x0000000100243990
- (void)fetchCurrentDisplayStateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0000000100243900
@property(readonly, nonatomic) NSDictionary *serialisedState;
@property(readonly, nonatomic) _Bool isPresentingDisplayAssistant;
- (_Bool)isAdvertisingHDMI2;	// IMP=0x0000000100242fc0
- (id)promotedVirtualDisplayModes;	// IMP=0x0000000100242d74
- (void)setColorGains:(id)arg1;	// IMP=0x0000000100242890
- (void)dealloc;	// IMP=0x0000000100241b28
- (id)_init;	// IMP=0x000000010024100c
- (id)init;	// IMP=0x0000000100240f54
- (double)recalculatedCurrentLocaleRefreshRate;	// IMP=0x0000000100070868
- (void)updateDisplayForNewRegionWithCountryCode:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100070438
- (_Bool)_isModeSwitchInProgress;	// IMP=0x00000001000a4b18
- (void)_notifyDisplayModeChange:(_Bool)arg1;	// IMP=0x00000001000a48bc
- (void)_notifyDisplayModeChangeDidFinish;	// IMP=0x00000001000a4884
- (void)_considerDisplayModeSwitchFinished:(id)arg1;	// IMP=0x00000001000a4800
- (long long)reportingValueForMatchFrameRate;	// IMP=0x00000001000a47ac
- (long long)reportingValueForMatchDynamicRange;	// IMP=0x00000001000a4758
- (id)_bestSDRDisplayMode;	// IMP=0x00000001000a43ec
- (_Bool)_shouldModeSwitchForBundleIdentifier:(id)arg1;	// IMP=0x00000001000a4010
- (void)_updateDisplayManagerWithDisplayMode:(id)arg1;	// IMP=0x00000001000a3d20
- (id)_findDisplayModeFromPredicate:(id)arg1;	// IMP=0x00000001000a3718
- (id)_bestDisplayModeForDynamicRange:(long long)arg1 frameRate:(double)arg2;	// IMP=0x00000001000a3444
- (id)_fallbackPredicatesForDynamicRange:(long long)arg1 frameRates:(id)arg2;	// IMP=0x00000001000a30c4
- (id)_displayModePredicatesForDynamicRange:(long long)arg1 frameRate:(double)arg2;	// IMP=0x00000001000a2bbc
- (id)preferredDisplayModeForBundleIdentifier:(id)arg1;	// IMP=0x00000001000a27f4
- (void)performModeSwitchForDisplayConfigurationRequest:(id)arg1;	// IMP=0x00000001000a2314
- (void)performModeSwitchForBundleIdentifierIfNeeded:(id)arg1;	// IMP=0x00000001000a213c
- (_Bool)isModeSwitchNeededForTransitionToBundleIdentifier:(id)arg1;	// IMP=0x00000001000a20cc
- (void)removeNativeAndPerformanceObservers;	// IMP=0x00000001000a1eb4
- (void)addNativeAndPerformanceObservers;	// IMP=0x00000001000a1e38
- (void)removeDisplayModeForKey:(id)arg1 persisted:(_Bool)arg2;	// IMP=0x0000000100136908
- (id)_readDisplayModeForKey:(id)arg1 persisted:(_Bool)arg2;	// IMP=0x0000000100136654
- (void)_saveDisplayMode:(id)arg1 forKey:(id)arg2 persisted:(_Bool)arg3;	// IMP=0x0000000100136514
- (void)_saveCurrentResolutionsPreferences:(id)arg1 toPersistentStore:(_Bool)arg2;	// IMP=0x0000000100136100
- (id)_currentResolutionsPreferencesFromPersistentStore:(_Bool)arg1;	// IMP=0x0000000100135bc4
- (double)readCableAlertIntervalOverride;	// IMP=0x0000000100135b64
- (int)readCableScoreOverride;	// IMP=0x0000000100135abc
- (double)readCableErrorPollingIntervalOverride;	// IMP=0x0000000100135a5c
- (double)readCableHistoryWindowOverride;	// IMP=0x00000001001359fc
- (_Bool)_debugAlwaysSaveModeEnabled;	// IMP=0x0000000100135994
- (_Bool)_shouldPreferDolbyVisionLowLatency;	// IMP=0x000000010013592c
- (void)resetCableCheckCumulativeTime;	// IMP=0x00000001001358d4
- (double)readCableCheckCumulativeTime;	// IMP=0x0000000100135874
- (void)saveCableCheckCumulativeTime:(double)arg1;	// IMP=0x0000000100135814
- (_Bool)readDetectedPoorCableConnection;	// IMP=0x00000001001357ac
- (void)saveDetectedPoorCableConnection:(_Bool)arg1;	// IMP=0x0000000100135740
- (void)removeLastCableErrorInfo;	// IMP=0x00000001001356e8
- (id)readLastCableErrorInfo;	// IMP=0x00000001001354c8
- (void)saveLastCableErrorInfo:(id)arg1;	// IMP=0x00000001001352c8
- (id)readColorCalibrations;	// IMP=0x00000001001351a8
- (void)removeColorCalibrations;	// IMP=0x00000001001350b8
- (void)saveColorCalibration:(id)arg1 forKeys:(id)arg2;	// IMP=0x0000000100134ce8
- (id)readAudioLatencies;	// IMP=0x0000000100134bc8
- (void)adjustAtmos:(id)arg1;	// IMP=0x000000010013494c
- (void)removeAudioLatencies;	// IMP=0x00000001001347d0
- (void)saveNewAudioLatency:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000100134638
- (id)readEncodedPromotedDisplayModes;	// IMP=0x00000001001344b0
- (void)removePromotedDisplayModes;	// IMP=0x00000001001343c0
- (void)saveNewPromotedDisplayMode:(id)arg1;	// IMP=0x00000001001340d8
- (void)removeAllCompleteDisplayAssistants;	// IMP=0x0000000100133fb4
- (_Bool)readDidCompleteDisplayAssistant;	// IMP=0x0000000100133ec8
- (void)saveDidCompleteDisplayAssistant:(_Bool)arg1;	// IMP=0x0000000100133ddc
- (double)readUserPreferredRefreshRate;	// IMP=0x0000000100133cfc
- (void)saveUserPreferredRefreshRate:(double)arg1;	// IMP=0x0000000100133c64
- (_Bool)readAtmosEnabled;	// IMP=0x0000000100133b78
- (_Bool)readShouldModeSwitchForFrameRate;	// IMP=0x0000000100133a8c
- (void)saveAtmosEnabled:(_Bool)arg1;	// IMP=0x00000001001339a0
- (void)saveShouldModeSwitchForFrameRate:(_Bool)arg1;	// IMP=0x00000001001338b4
- (_Bool)readShouldModeSwitchForDynamicRange;	// IMP=0x00000001001337c8
- (void)saveShouldModeSwitchForDynamicRange:(_Bool)arg1;	// IMP=0x00000001001336dc
- (_Bool)readCanDoHighBandwidth;	// IMP=0x00000001001335f0
- (void)saveCanHandleHighBandwidthModes:(_Bool)arg1;	// IMP=0x0000000100133504
- (id)readSeenDisplayIDs;	// IMP=0x0000000100133314
- (void)saveCurrentDisplayID:(id)arg1;	// IMP=0x00000001001331cc
- (void)removeUserSelectedDisplayMode;	// IMP=0x000000010013310c
- (id)readUserSelectedDisplayMode;	// IMP=0x0000000100132fac
- (void)saveUserSelectedDisplayMode:(id)arg1;	// IMP=0x0000000100132e8c
- (double)_historyWindowInterval;	// IMP=0x000000010014e5a8
- (double)_pollingInterval;	// IMP=0x000000010014e43c
- (void)_stopBackgroundMonitoring;	// IMP=0x000000010014e2a8
- (void)_startBackgroundMonitoringAndIgnoreFirstPoll:(_Bool)arg1;	// IMP=0x000000010014dc2c
- (void)_resetTimer;	// IMP=0x000000010014dbec
- (void)registerModeSwitch;	// IMP=0x000000010014dbbc
- (void)resetCableInfoHistory;	// IMP=0x000000010014da68
- (void)_processCurrentCableInfo;	// IMP=0x000000010014d024
- (void)stopMonitoringCable;	// IMP=0x000000010014cfd0
- (void)startMonitoringCable;	// IMP=0x000000010014ca78

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

