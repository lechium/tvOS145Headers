//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <OSAnalytics/OSAReport.h>

#import "OSAConcreteReport-Protocol.h"

@class NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableString, NSString;

@interface OSACrashReport : OSAReport <OSAConcreteReport>
{
    unsigned int _task;	// 48 = 0x30
    struct timeval _proc_starttime;	// 56 = 0x38
    NSString *_procPath;	// 72 = 0x48
    int _cpuType;	// 80 = 0x50
    _Bool _is64Bit;	// 84 = 0x54
    NSMutableArray *_taskImages;	// 88 = 0x58
    NSArray *_usedImages;	// 96 = 0x60
    NSMutableArray *_threadInfos;	// 104 = 0x68
    NSMutableDictionary *_applicationSpecificInfo;	// 112 = 0x70
    int _maxBinaryIdentifierLength;	// 120 = 0x78
    NSMutableDictionary *_extraInfo;	// 128 = 0x80
    unsigned int _cs_status;	// 136 = 0x88
    unsigned long long _uniqId;	// 144 = 0x90
    long long *_exceptionCode;	// 152 = 0x98
    unsigned int _exceptionCodeCount;	// 160 = 0xa0
    int _signal;	// 164 = 0xa4
    unsigned int _threadPortOriginal;	// 168 = 0xa8
    unsigned int _threadPortSelected;	// 172 = 0xac
    unsigned int _threadState[1296];	// 176 = 0xb0
    int _threadStateFlavor;	// 5360 = 0x14f0
    unsigned int _threadStateCount;	// 5364 = 0x14f4
    unsigned int _pageinState[1296];	// 5368 = 0x14f8
    unsigned int _pageinStateCount;	// 10552 = 0x2938
    unsigned int _exceptionState[1296];	// 10556 = 0x293c
    unsigned int _exceptionStateCount;	// 15740 = 0x3d7c
    unsigned long long _threadId;	// 15744 = 0x3d80
    int _crashedThreadNumber;	// 15752 = 0x3d88
    NSString *_parentProcessName;	// 15760 = 0x3d90
    int _ppid;	// 15768 = 0x3d98
    unsigned int _uid;	// 15772 = 0x3d9c
    int _highlightedThreadNumber;	// 15776 = 0x3da0
    NSArray *_lastExceptionBacktrace;	// 15784 = 0x3da8
    char _slice_uuid[37];	// 15792 = 0x3db0
    _Bool _is_first_party;	// 15829 = 0x3dd5
    int _task_role;	// 15832 = 0x3dd8
    unsigned long long _coalition_id;	// 15840 = 0x3de0
    NSString *_coalition_name;	// 15848 = 0x3de8
    unsigned long long _queue_serial_no;	// 15856 = 0x3df0
    NSString *_memgraph_filename;	// 15864 = 0x3df8
    NSMutableDictionary *_spewage_diag;	// 15872 = 0x3e00
    unsigned long long _spewage_diag_total_length;	// 15880 = 0x3e08
    unsigned long long _abort_cause;	// 15888 = 0x3e10
    unsigned int _exit_snapshot_length;	// 15896 = 0x3e18
    struct exit_reason_snapshot *_exit_snapshot;	// 15904 = 0x3e20
    unsigned int _exit_payload_length;	// 15912 = 0x3e28
    void *_exit_payload;	// 15920 = 0x3e30
    NSString *_terminator_reason;	// 15928 = 0x3e38
    NSString *_terminator_proc;	// 15936 = 0x3e40
    int _terminator_pid;	// 15944 = 0x3e48
    NSString *_caller_name;	// 15952 = 0x3e50
    NSString *_vmregion_info;	// 15960 = 0x3e58
    NSArray *_diagToolExtras;	// 15968 = 0x3e60
    NSMutableString *_sig_frames;	// 15976 = 0x3e68
    NSDictionary *_probGuardReport;	// 15984 = 0x3e70
    _Bool _is_corpse;	// 15992 = 0x3e78
    unsigned long long _awakeSystemUptime;	// 16000 = 0x3e80
    unsigned long long _workloop_id;	// 16008 = 0x3e88
    int _responsible_pid;	// 16016 = 0x3e90
    NSDictionary *_workQueueLimits;	// 16024 = 0x3e98
    NSDictionary *_bundle_info;	// 16032 = 0x3ea0
    NSDictionary *_build_info;	// 16040 = 0x3ea8
    NSDictionary *_store_info;	// 16048 = 0x3eb0
    NSString *_adam_id;	// 16056 = 0x3eb8
    NSString *_lsAppType;	// 16064 = 0x3ec0
    NSString *_lsDisplayName;	// 16072 = 0x3ec8
    NSString *_suspected3rdPartyPlugin;	// 16080 = 0x3ed0
    _Bool _bundleVisibility;	// 16088 = 0x3ed8
    _Bool _fatalDyldErrorOnLaunch;	// 16089 = 0x3ed9
    unsigned int _platform;	// 16092 = 0x3edc
    NSString *_sandboxContainer;	// 16096 = 0x3ee0
    NSString *_sleepWakeUUID;	// 16104 = 0x3ee8
    NSString *_vmSummary;	// 16112 = 0x3ef0
    NSMutableArray *_rosettaRegions;	// 16120 = 0x3ef8
    NSString *_mxTerminationReason;	// 16128 = 0x3f00
    _Bool _is_beta;	// 16136 = 0x3f08
    _Bool _is_simulated;	// 16137 = 0x3f09
    int _proc_id;	// 16140 = 0x3f0c
    int _exceptionType;	// 16144 = 0x3f10
    NSString *_procName;	// 16152 = 0x3f18
    NSString *_bundle_id;	// 16160 = 0x3f20
    NSString *_short_vers;	// 16168 = 0x3f28
    NSString *_responsibleProc;	// 16176 = 0x3f30
    unsigned long long _crashingAddress;	// 16184 = 0x3f38
    unsigned long long _sharedCacheAddress;	// 16192 = 0x3f40
}

+ (_Bool)isMetricKitClient:(id)arg1;	// IMP=0x000000010001eab0
+ (id)loadBuildInfo:(id)arg1;	// IMP=0x0000000100016ad4
+ (id)loadStoreInfo:(id)arg1 atURL:(id)arg2 forPlatform:(unsigned int)arg3;	// IMP=0x000000010001676c
+ (id)loadBundInfoAtURL:(id)arg1 withKeys:(id)arg2;	// IMP=0x000000010001624c
- (void).cxx_destruct;	// IMP=0x000000010001eb5c
@property(readonly, nonatomic) unsigned long long sharedCacheAddress; // @synthesize sharedCacheAddress=_sharedCacheAddress;
@property(readonly, nonatomic) unsigned long long crashingAddress; // @synthesize crashingAddress=_crashingAddress;
@property(readonly, nonatomic) int exceptionType; // @synthesize exceptionType=_exceptionType;
@property(readonly, nonatomic) _Bool is_simulated; // @synthesize is_simulated=_is_simulated;
@property(readonly, nonatomic) _Bool is_beta; // @synthesize is_beta=_is_beta;
@property(readonly, nonatomic) NSString *responsibleProc; // @synthesize responsibleProc=_responsibleProc;
@property(readonly, nonatomic) NSString *short_vers; // @synthesize short_vers=_short_vers;
@property(readonly, nonatomic) NSString *bundle_id; // @synthesize bundle_id=_bundle_id;
@property(readonly, nonatomic) NSString *procName; // @synthesize procName=_procName;
@property(readonly, nonatomic) int proc_id; // @synthesize proc_id=_proc_id;
- (void)sendToMetricKit;	// IMP=0x000000010001eab8
- (_Bool)saveWithOptions:(id)arg1;	// IMP=0x000000010001ea58
- (id)getXformTupleForLog:(id)arg1;	// IMP=0x000000010001e768
- (id)getNotificationInfo;	// IMP=0x000000010001e760
- (void)generateLogAtLevel:(_Bool)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010001cde0
- (id)reduceToTwoSigFigures:(unsigned long long)arg1;	// IMP=0x000000010001cd7c
- (_Bool)isExceptionNonFatal;	// IMP=0x000000010001ccf0
- (id)decode_threadState;	// IMP=0x000000010001c3b4
- (id)decode_esr;	// IMP=0x000000010001c0d0
- (id)decode_reason;	// IMP=0x000000010001bc58
- (id)decode_reasonWatchdog;	// IMP=0x000000010001ba30
- (id)decode_reasonMetal;	// IMP=0x000000010001b884
- (id)decode_reasonCoreAnimation;	// IMP=0x000000010001b6d8
- (id)decode_reasonExec;	// IMP=0x000000010001b474
- (id)decode_reasonTcc;	// IMP=0x000000010001b2ac
- (id)decode_reasonBTC;	// IMP=0x0000000100019bac
- (id)decode_versionCodes:(unsigned short [4])arg1;	// IMP=0x0000000100019a48
- (id)decode_reasonDyld;	// IMP=0x0000000100019604
- (id)decode_reasonCarousel;	// IMP=0x00000001000195f8
- (id)decode_reasonLibSystem;	// IMP=0x0000000100019284
- (id)decode_reasonNamespace;	// IMP=0x0000000100018f00
- (id)terminationReasonExceptionCode;	// IMP=0x0000000100018ea4
- (id)decode_exceptionCodes;	// IMP=0x00000001000181c8
- (void)captureDiagInfo:(id)arg1;	// IMP=0x0000000100017918
- (id)decode_exceptionType;	// IMP=0x000000010001781c
- (id)decode_signal;	// IMP=0x0000000100017610
- (id)decode_cpuType;	// IMP=0x0000000100017554
- (id)_descriptionForException:(id)arg1;	// IMP=0x000000010001737c
- (void)_extractVMMap:(struct _CSTypeRef)arg1;	// IMP=0x00000001000172f4
- (void)loadBundleInfo;	// IMP=0x0000000100016d64
- (void)captureLSInfo;	// IMP=0x0000000100016ad0
- (void)setApplicationSpecificInformation:(const char *)arg1;	// IMP=0x00000001000161e0
- (void)_extractPGMReportUsingSymbolicator:(struct _CSTypeRef)arg1 usingCatalog:(id)arg2;	// IMP=0x0000000100015d94
- (id)_extractPGMTraceInfo:(CDStruct_49f68912 *)arg1 withSymbolicator:(struct _CSTypeRef)arg2 usingCatalog:(id)arg3;	// IMP=0x0000000100015b74
- (unsigned long long)_findMallocZone:(id)arg1 usingSymbolicator:(struct _CSTypeRef)arg2;	// IMP=0x000000010001595c
- (id)_findContainingRegion:(id)arg1 address:(unsigned long long)arg2;	// IMP=0x0000000100015868
- (void)_extractBacktraceInfoUsingSymbolicator:(struct _CSTypeRef)arg1 usingCorpse:(_Bool)arg2 usingCatalog:(id)arg3;	// IMP=0x0000000100014d60
- (id)composeFrame:(id)arg1 info:(id)arg2;	// IMP=0x0000000100014c44
- (void)symbolicateFrame:(unsigned long long)arg1 adjusted:(unsigned long long)arg2 withSymbolicator:(struct _CSTypeRef)arg3 usingCatalog:(id)arg4 andBlock:(CDUnknownBlockType)arg5;	// IMP=0x00000001000145a0
- (id)_objcSelectorNameForMessenger:(id)arg1;	// IMP=0x000000010001449c
- (unsigned long long)_objcSelectorAddressForMessenger:(id)arg1 memory:(struct mapped_memory_t *)arg2;	// IMP=0x00000001000143ec
- (void)_extractBinaryImageInfoUsingSymbolicator:(struct _CSTypeRef)arg1;	// IMP=0x0000000100013fa4
- (void)_extractCrashReporterAnnotationsFromSymbolOwner:(struct _CSTypeRef)arg1 withMemory:(struct mapped_memory_t *)arg2 internal:(_Bool)arg3;	// IMP=0x0000000100013b10
- (id)_readDataAtAddress:(unsigned long long)arg1 size:(unsigned long long)arg2;	// IMP=0x0000000100013854
- (struct _VMURange)_regionAtAddress:(unsigned long long)arg1 immutableOnly:(_Bool)arg2;	// IMP=0x0000000100013794
- (char *)_copyStringFromTask:(unsigned int)arg1 atAddress:(unsigned long long)arg2 immutableOnly:(_Bool)arg3 maxLength:(unsigned long long)arg4;	// IMP=0x00000001000135e0
- (id)_readStringAtTaskAddress:(unsigned long long)arg1 immutableOnly:(_Bool)arg2 maxLength:(unsigned long long)arg3;	// IMP=0x0000000100013564
- (unsigned long long)_readAddressFromMemory:(struct mapped_memory_t *)arg1 atAddress:(unsigned long long)arg2;	// IMP=0x0000000100013534
- (unsigned long long)_readAddressFromMemory:(struct mapped_memory_t *)arg1 atSymbol:(struct _CSTypeRef)arg2;	// IMP=0x00000001000134ec
- (void)_extractLastExceptionBacktraceUsingSymbolicator:(struct _CSTypeRef)arg1 usingCatalog:(id)arg2;	// IMP=0x000000010001328c
- (id)slice_uuid;	// IMP=0x0000000100013254
- (id)additionalIPSMetadata;	// IMP=0x0000000100012ccc
- (_Bool)isActionable;	// IMP=0x0000000100012b18
- (id)reportNamePrefix;	// IMP=0x0000000100012a7c
- (id)appleCareDetails;	// IMP=0x00000001000128e8
- (id)problemType;	// IMP=0x0000000100012898
- (void)_parseCorpse:(unsigned long long)arg1 size:(unsigned long long)arg2;	// IMP=0x0000000100011d08
- (void)autopsyCorpse:(unsigned long long)arg1 size:(unsigned long long)arg2;	// IMP=0x0000000100011b8c
- (void)autopsyCorpse;	// IMP=0x0000000100011ac0
- (void)finishExtractionUsingCorpse:(_Bool)arg1;	// IMP=0x0000000100010ea8
- (struct _CSTypeRef)_getSymbolicator:(_Bool)arg1 forAutopsy:(_Bool)arg2;	// IMP=0x0000000100010cec
- (id)nameFromPid:(int)arg1;	// IMP=0x0000000100010bbc
- (id)pathFromPid:(int)arg1;	// IMP=0x0000000100010b04
- (void)extractThreadStateInfo;	// IMP=0x00000001000108dc
- (void)noteCaller:(const char *)arg1 onThreadID:(unsigned long long)arg2;	// IMP=0x000000010001087c
- (void)inspectLivePid:(int)arg1 exceptionCodes:(long long *)arg2 count:(unsigned int)arg3;	// IMP=0x0000000100010220
- (void)_extractWorkQueueLimitsFromData:(struct proc_workqueueinfo *)arg1;	// IMP=0x00000001000100a8
- (void)unpackExceptionCodes;	// IMP=0x0000000100010068
- (void)dealloc;	// IMP=0x000000010000ffd4
- (id)initSimulated:(unsigned int)arg1 withReason:(const char *)arg2;	// IMP=0x000000010000ff64
- (id)initWithTask:(unsigned int)arg1 exceptionType:(int)arg2 thread:(unsigned int)arg3 threadStateFlavor:(int)arg4 threadState:(unsigned int [1296])arg5 threadStateCount:(unsigned int)arg6;	// IMP=0x000000010000f910
- (void)stashStatus:(id)arg1 note:(id)arg2;	// IMP=0x000000010000f220

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

