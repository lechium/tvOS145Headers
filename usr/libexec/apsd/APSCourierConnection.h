//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "APSProtocolParserDelegate-Protocol.h"
#import "APSTCPStreamDelegate-Protocol.h"
#import "PCConnectionManagerDelegate-Protocol.h"

@class APSProtocolParser, NSDate, NSMutableArray, NSMutableDictionary, NSString, NSTimer, PCConnectionManager;
@protocol APSCourierConnectionDelegate, APSTCPStream;

@interface APSCourierConnection : NSObject <APSTCPStreamDelegate, PCConnectionManagerDelegate, APSProtocolParserDelegate>
{
    NSString *_domain;	// 8 = 0x8
    id <APSTCPStream> _streams[2];	// 16 = 0x10
    APSProtocolParser *_parsers[2];	// 32 = 0x20
    NSString *_redirectHost;	// 48 = 0x30
    unsigned char _redirectCount;	// 56 = 0x38
    PCConnectionManager *_connectionManagers[2];	// 64 = 0x40
    NSMutableDictionary *_contexts[2];	// 80 = 0x50
    NSTimer *_keepAliveTimers[2];	// 96 = 0x60
    _Bool _keepAliveV2Supported[2];	// 112 = 0x70
    NSString *_usingCachedIPAddress[2];	// 120 = 0x78
    _Bool _isConnecting[2];	// 136 = 0x88
    void *_keepAlivePowerAssertions[2];	// 144 = 0x90
    NSTimer *_connectionEstablishTimers[2];	// 160 = 0xa0
    void *_connectionEstablishPowerAssertions[2];	// 176 = 0xb0
    _Bool _isDualChannelAllowed;	// 192 = 0xc0
    id <APSCourierConnectionDelegate> _delegate;	// 200 = 0xc8
    long long _lastAttemptedInterface;	// 208 = 0xd0
    _Bool _remainsConnectedWhenWWANSuspends;	// 216 = 0xd8
    NSMutableArray *_connectionAttemptsInExpensiveConditions;	// 224 = 0xe0
    _Bool _powerOptimizationsForExpensiveNetworkingDisabled;	// 232 = 0xe8
    unsigned long long _maxExpensiveConditionsConnectionAttempts;	// 240 = 0xf0
    double _expensiveConditionsBackOffInterval;	// 248 = 0xf8
    double _wifiKeepAliveEarlyFireConstantInterval;	// 256 = 0x100
    unsigned int _disconnectReason;	// 264 = 0x108
    NSDate *_lastConnected;	// 272 = 0x110
}

- (void).cxx_destruct;	// IMP=0x0000000100079194
@property(nonatomic) double wifiKeepAliveEarlyFireConstantInterval; // @synthesize wifiKeepAliveEarlyFireConstantInterval=_wifiKeepAliveEarlyFireConstantInterval;
@property(nonatomic) double expensiveConditionsBackOffInterval; // @synthesize expensiveConditionsBackOffInterval=_expensiveConditionsBackOffInterval;
@property(nonatomic) unsigned long long maxExpensiveConditionsConnectionAttempts; // @synthesize maxExpensiveConditionsConnectionAttempts=_maxExpensiveConditionsConnectionAttempts;
@property(nonatomic) _Bool powerOptimizationsForExpensiveNetworkingDisabled; // @synthesize powerOptimizationsForExpensiveNetworkingDisabled=_powerOptimizationsForExpensiveNetworkingDisabled;
@property(nonatomic) _Bool remainsConnectedWhenWWANSuspends; // @synthesize remainsConnectedWhenWWANSuspends=_remainsConnectedWhenWWANSuspends;
@property(retain, nonatomic) NSString *redirectHost; // @synthesize redirectHost=_redirectHost;
@property(nonatomic) unsigned int disconnectReason; // @synthesize disconnectReason=_disconnectReason;
@property(retain, nonatomic) NSDate *lastConnected; // @synthesize lastConnected=_lastConnected;
- (void)tcpStreamDidFailToFindKeepAliveProxyInterface:(id)arg1;	// IMP=0x00000001000790e4
- (void)tcpStreamDidFailToObtainKeepAliveProxy:(id)arg1;	// IMP=0x00000001000790a4
- (void)tcpStreamDidFailToForceKeepAliveProxyInterface:(id)arg1;	// IMP=0x0000000100079064
- (void)tcpStreamHasConnected:(id)arg1 context:(id)arg2 enabledPackedFormat:(_Bool)arg3 maxEncoderTableSize:(unsigned long long)arg4 maxDecoderTableSize:(unsigned long long)arg5 secureHandshakeEnabled:(_Bool)arg6;	// IMP=0x0000000100078f7c
- (void)tcpStream:(id)arg1 hasDeterminedServerHostname:(id)arg2;	// IMP=0x0000000100078f04
- (void)tcpStream:(id)arg1 receivedServerBag:(id)arg2;	// IMP=0x0000000100078ef0
- (void)tcpStream:(id)arg1 errorOccured:(id)arg2;	// IMP=0x0000000100078db8
- (void)tcpStreamEndEncountered:(id)arg1;	// IMP=0x0000000100078d78
- (unsigned long long)tcpStream:(id)arg1 dataReceived:(id)arg2;	// IMP=0x0000000100078cc4
- (void)protocolParser:(id)arg1 receiveAPNSPackError:(id)arg2;	// IMP=0x0000000100078c4c
- (void)connectionManager:(id)arg1 handleEvent:(int)arg2 context:(id)arg3;	// IMP=0x0000000100078bb4
- (_Bool)isPackedFormatOnInterface:(long long)arg1;	// IMP=0x0000000100078ba0
- (_Bool)parseMessage:(id)arg1 parameters:(id *)arg2 isInvalid:(_Bool *)arg3 lengthParsed:(unsigned long long *)arg4 onInterface:(long long)arg5;	// IMP=0x0000000100078b8c
- (void)sendTaskControlMessageWithMetadata:(id)arg1 messageId:(unsigned long long)arg2 onInterface:(long long)arg3;	// IMP=0x0000000100078b30
- (_Bool)sendMessageWithTopicHash:(id)arg1 identifier:(unsigned long long)arg2 payload:(id)arg3 token:(id)arg4 isPlistFormat:(_Bool)arg5 lastRTT:(id)arg6 onInterface:(long long)arg7;	// IMP=0x0000000100078ac4
- (void)sendFilterMessageWithEnabledHashes:(id)arg1 ignoredHashes:(id)arg2 opportunisticHashes:(id)arg3 nonWakingHashes:(id)arg4 pausedHashes:(id)arg5 token:(id)arg6 onInterface:(long long)arg7;	// IMP=0x0000000100078a68
- (void)sendMessageTracingAckWithTopic:(id)arg1 tracingUUID:(id)arg2 status:(int)arg3 token:(id)arg4 onInterface:(long long)arg5;	// IMP=0x0000000100078a00
- (void)sendAppTokenGenerateMessageWithTopicHash:(id)arg1 baseToken:(id)arg2 appId:(unsigned short)arg3 onInterface:(long long)arg4;	// IMP=0x00000001000789a4
- (void)sendKeepAliveMessageWithMetadata:(id)arg1 onInterface:(long long)arg2;	// IMP=0x0000000100078948
- (void)sendMessageTransportAcknowledgeMessageOnInterface:(long long)arg1;	// IMP=0x00000001000788ec
- (void)sendMessageAcknowledgeMessageWithResponse:(long long)arg1 messageId:(id)arg2 token:(id)arg3 onInterface:(long long)arg4;	// IMP=0x0000000100078890
- (void)sendSetActiveState:(_Bool)arg1 forInterval:(unsigned int)arg2 onInterface:(long long)arg3;	// IMP=0x0000000100078834
- (void)sendSetActiveIntervalMessageWithInterval:(unsigned int)arg1 onInterface:(long long)arg2;	// IMP=0x00000001000787d8
- (void)sendFlushResponseMessageWithPaddingLength:(unsigned long long)arg1 onInterface:(long long)arg2;	// IMP=0x000000010007877c
- (void)sendFlushMessageWithWantPaddingLength:(unsigned long long)arg1 paddingLength:(unsigned long long)arg2 onInterface:(long long)arg3;	// IMP=0x0000000100078720
- (void)sendConnectMessageWithToken:(id)arg1 interface:(long long)arg2 activeInterval:(unsigned int)arg3 metadata:(id)arg4 certificate:(id)arg5 nonce:(id)arg6 signature:(id)arg7 redirectCount:(unsigned char)arg8 tcpHandshakeTimeMilliseconds:(double)arg9 dnsResolveTimeMilliseconds:(double)arg10 tlsHandshakeTimeMilliseconds:(double)arg11 consecutiveConnectionFailureReason:(id)arg12 onInterface:(long long)arg13;	// IMP=0x000000010007841c
- (void)sendConnectMessageWithToken:(id)arg1 state:(int)arg2 interface:(long long)arg3 activeInterval:(unsigned int)arg4 metadata:(id)arg5 certificate:(id)arg6 nonce:(id)arg7 signature:(id)arg8 redirectCount:(unsigned char)arg9 onInterface:(long long)arg10;	// IMP=0x00000001000782bc
- (void)holdPowerAssertionUntilStreamQuiesces;	// IMP=0x000000010007825c
@property(readonly, nonatomic) _Bool didPushCauseWake;
@property(nonatomic) _Bool isDualChannelAllowed;
- (void)_handleDualModeState;	// IMP=0x0000000100077d20
- (unsigned long long)countOfGrowthActionsOnInterface:(long long)arg1;	// IMP=0x0000000100077d00
- (_Bool)shouldClientScheduleReconnectDueToFailureOnInterface:(long long)arg1;	// IMP=0x0000000100077cdc
- (int)currentGrowthStageOnInterface:(long long)arg1;	// IMP=0x0000000100077cbc
- (id)currentKeepAliveStateOnInterface:(long long)arg1;	// IMP=0x0000000100077c24
- (double)currentKeepAliveIntervalOnInterface:(long long)arg1;	// IMP=0x0000000100077c04
@property(readonly, nonatomic) double minimumKeepAliveInterval;
@property(readonly, copy, nonatomic) NSString *ifname;
- (_Bool)isKeepAliveProxyConfiguredOnInterface:(long long)arg1;	// IMP=0x0000000100077b48
- (_Bool)isKeepAliveProxySupportedOnSocketOnInterface:(long long)arg1;	// IMP=0x0000000100077b24
- (_Bool)hasOpenConnectionOnInterface:(long long)arg1;	// IMP=0x0000000100077b00
@property(readonly, nonatomic) _Bool hasOpenConnection;
@property(readonly, nonatomic) unsigned long long countOpenConnections;
@property(readonly, nonatomic) unsigned long long countConnectedInterfaces;
- (_Bool)isConnectedOnInterface:(long long)arg1;	// IMP=0x0000000100077a04
@property(readonly, nonatomic) _Bool isConnected;
- (_Bool)generationMatches:(unsigned long long)arg1 forInterface:(long long)arg2;	// IMP=0x0000000100077978
- (_Bool)setIsConnected:(_Bool)arg1 onInterface:(long long)arg2 withDisconnectReason:(unsigned int)arg3;	// IMP=0x00000001000774b4
- (_Bool)setIsConnected:(_Bool)arg1 onInterface:(long long)arg2;	// IMP=0x00000001000774a4
- (id)serverHostnameForInterface:(long long)arg1;	// IMP=0x0000000100077380
- (id)serverIPAddressForInterface:(long long)arg1;	// IMP=0x000000010007725c
@property(readonly, nonatomic) long long lastAttemptedInterface;
@property(readonly, nonatomic) long long connectingInterface;
@property(readonly, nonatomic) long long preferredInterface;
@property(readonly, nonatomic) long long nextConnectionAttemptInterface;
@property(readonly, retain, nonatomic) NSString *tcpInfoDescription;
- (id)_currentStream;	// IMP=0x0000000100077060
@property(nonatomic) id <APSCourierConnectionDelegate> delegate;
- (id)objectForKey:(id)arg1 onInterface:(long long)arg2;	// IMP=0x0000000100076fc8
- (void)setObject:(id)arg1 forKey:(id)arg2 onInterface:(long long)arg3;	// IMP=0x0000000100076ee4
- (void)_keepAliveResponseTimerFired:(id)arg1;	// IMP=0x0000000100076e50
- (void)clearKeepAliveResponseTimerOnInterface:(long long)arg1;	// IMP=0x0000000100076de8
- (void)startKeepAliveResponseTimerOnInterface:(long long)arg1 shortInterval:(_Bool)arg2;	// IMP=0x0000000100076cc4
- (_Bool)hasKeepAliveResponseTimerOnInterface:(long long)arg1;	// IMP=0x0000000100076ca0
- (void)_connectionEstablishTimerFired:(id)arg1;	// IMP=0x0000000100076c0c
- (void)clearConnectionEstablishTimerOnInterface:(long long)arg1;	// IMP=0x0000000100076ba4
- (void)startConnectionEstablishTimerOnInterface:(long long)arg1;	// IMP=0x0000000100076a98
- (_Bool)hasConnectionEstablishTimerOnInterface:(long long)arg1;	// IMP=0x0000000100076a74
- (_Bool)hasConnectionEstablishTimer;	// IMP=0x0000000100076a54
- (void)_updateConnectionManagerKeepAliveIntervalNonCellular;	// IMP=0x00000001000769f8
- (void)__updateConnectionManagerKeepAliveIntervalNonCellular;	// IMP=0x00000001000769ac
- (void)_updateConnectionManagerKeepAliveIntervalWWAN;	// IMP=0x0000000100076950
- (void)__updateConnectionManagerKeepAliveIntervalWWAN;	// IMP=0x0000000100076904
- (int)lastKeepAliveActionOnInterface:(long long)arg1;	// IMP=0x00000001000767e0
- (_Bool)keepAliveV2SupportedOnInterface:(long long)arg1;	// IMP=0x00000001000766e4
- (void)setKeepAliveV2Supported:(_Bool)arg1 onInterface:(long long)arg2;	// IMP=0x00000001000765b0
- (void)updateConnectionManagerKeepAliveIntervalOnInterface:(long long)arg1;	// IMP=0x000000010007646c
- (void)setEnableNonCellularOnConnectionManager:(_Bool)arg1;	// IMP=0x000000010007645c
- (void)setMinimumIntervalFallbackEnabled:(_Bool)arg1;	// IMP=0x0000000100076414
- (void)setKeepAliveGracePeriod:(double)arg1 onInterface:(long long)arg2;	// IMP=0x00000001000762d4
- (double)keepAliveGracePeriodOnInterface:(long long)arg1;	// IMP=0x00000001000761b0
- (void)setUsingServerStatsAggressively:(_Bool)arg1 onInterface:(long long)arg2;	// IMP=0x0000000100076068
- (void)setServerStatsExpectedKeepAlive:(double)arg1 onInterface:(long long)arg2;	// IMP=0x0000000100075f28
- (void)setServerStatsMinKeepAlive:(double)arg1 onInterface:(long long)arg2;	// IMP=0x0000000100075de8
- (void)setServerStatsMaxKeepAlive:(double)arg1 onInterface:(long long)arg2;	// IMP=0x0000000100075ca8
- (void)resumeManagerWithAction:(int)arg1 onInterface:(long long)arg2;	// IMP=0x0000000100075ad8
- (_Bool)isExpensiveToUseInterface:(long long)arg1;	// IMP=0x0000000100075a8c
- (id)pcInterfaceMonitorOnInterface:(long long)arg1;	// IMP=0x0000000100075a40
- (id)pcInterfaceMonitorNonCellular;	// IMP=0x0000000100075a30
- (id)pcInterfaceMonitorWWAN;	// IMP=0x0000000100075a20
- (void)stopAndResetManagerOnInterface:(long long)arg1;	// IMP=0x000000010007587c
- (void)stopManagerOnInterface:(long long)arg1;	// IMP=0x00000001000756d8
- (void)stopManagers;	// IMP=0x00000001000756a0
- (void)closeStreamForInterface:(long long)arg1;	// IMP=0x0000000100075640
- (void)writeDataInBackground:(id)arg1;	// IMP=0x00000001000755e0
- (void)writeDataInBackground:(id)arg1 onInterface:(long long)arg2;	// IMP=0x00000001000754bc
- (Class)tcpStreamClass;	// IMP=0x00000001000754b0
- (void)connectToEnvironment:(id)arg1 onInterface:(long long)arg2 withIdentity:(struct __SecIdentity *)arg3 useAlternatePort:(_Bool)arg4 forceKeepAliveProxy:(_Bool)arg5;	// IMP=0x000000010007507c
- (_Bool)shouldConnectOnInterface:(long long)arg1;	// IMP=0x0000000100074c78
- (void)setKeepAliveIntervalOverrideOnAudioAccessory;	// IMP=0x0000000100074b80
- (_Bool)isSuspendedOnInterface:(long long)arg1;	// IMP=0x0000000100074a88
- (void)setIsSuspended:(_Bool)arg1 onInterface:(long long)arg2;	// IMP=0x0000000100074940
- (void)setIsConnecting:(_Bool)arg1 onInterface:(long long)arg2;	// IMP=0x000000010007482c
- (_Bool)isConnectingOnInterface:(long long)arg1;	// IMP=0x0000000100074808
- (void)setUsingCachedIPAddress:(id)arg1 onInterface:(long long)arg2;	// IMP=0x00000001000746d8
- (id)usingCachedIPAddressOnInterface:(long long)arg1;	// IMP=0x00000001000746ac
- (unsigned char)redirectCount;	// IMP=0x00000001000746a4
- (void)clearRedirectCount;	// IMP=0x000000010007469c
- (void)incrementRedirectCount;	// IMP=0x000000010007468c
- (long long)_interfaceForConnectionManager:(id)arg1;	// IMP=0x0000000100074664
- (long long)_interfaceForStream:(id)arg1;	// IMP=0x000000010007463c
- (long long)_interfaceForProtocolParser:(id)arg1;	// IMP=0x0000000100074614
- (void)dealloc;	// IMP=0x00000001000744d8
- (id)initWithEnvironment:(id)arg1;	// IMP=0x00000001000742b8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

