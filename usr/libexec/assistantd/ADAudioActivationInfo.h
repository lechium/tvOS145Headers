//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class AFClientConfiguration, AFExperimentContext, AFLanguageDetectionUserContext, AFSpeechRecordingAlertPolicy, NSString, NSUUID;

@interface ADAudioActivationInfo : NSObject
{
    long long _activationMode;	// 8 = 0x8
    long long _storedActivationMode;	// 16 = 0x10
    long long _csAudioRecordType;	// 24 = 0x18
    AFClientConfiguration *_currentClientConfiguration;	// 32 = 0x20
    _Bool _suppressStartAlert;	// 40 = 0x28
    AFExperimentContext *_experimentContext;	// 48 = 0x30
    _Bool _isActivated;	// 56 = 0x38
    float _activeMediaPlaybackVolume;	// 60 = 0x3c
    _Bool _useBorealisBuffer;	// 64 = 0x40
    _Bool _usePrelistening;	// 65 = 0x41
    _Bool _isOnPhoneCall;	// 66 = 0x42
    _Bool _hasPlayedStartAlert;	// 67 = 0x43
    long long _speechEvent;	// 72 = 0x48
    long long _audioAlertStyle;	// 80 = 0x50
    NSString *_deviceIdentifier;	// 88 = 0x58
    double _activationSystemUptime;	// 96 = 0x60
    unsigned long long _activationHostTime;	// 104 = 0x68
    unsigned long long _buttonDownHostTime;	// 112 = 0x70
    unsigned long long _voiceTriggerEndHostTime;	// 120 = 0x78
    long long _speechCapturingMode;	// 128 = 0x80
    long long _speechEndpointerOperationMode;	// 136 = 0x88
    AFSpeechRecordingAlertPolicy *_speechRecordingAlertPolicy;	// 144 = 0x90
    long long _presentationMode;	// 152 = 0x98
    AFLanguageDetectionUserContext *_languageDetectionUserContext;	// 160 = 0xa0
    long long _dictationInputOrigin;	// 168 = 0xa8
    NSUUID *_turnIdentifier;	// 176 = 0xb0
    NSString *_applicationDisplayName;	// 184 = 0xb8
    NSString *_applicationBundleIdentifier;	// 192 = 0xc0
}

- (void).cxx_destruct;	// IMP=0x00000001001978e0
@property(readonly, copy, nonatomic) NSString *applicationBundleIdentifier; // @synthesize applicationBundleIdentifier=_applicationBundleIdentifier;
@property(readonly, copy, nonatomic) NSString *applicationDisplayName; // @synthesize applicationDisplayName=_applicationDisplayName;
@property(readonly, copy, nonatomic) NSUUID *turnIdentifier; // @synthesize turnIdentifier=_turnIdentifier;
@property(readonly, nonatomic) long long dictationInputOrigin; // @synthesize dictationInputOrigin=_dictationInputOrigin;
@property(readonly, copy, nonatomic) AFLanguageDetectionUserContext *languageDetectionUserContext; // @synthesize languageDetectionUserContext=_languageDetectionUserContext;
@property(readonly, nonatomic) long long presentationMode; // @synthesize presentationMode=_presentationMode;
@property(readonly, nonatomic) AFSpeechRecordingAlertPolicy *speechRecordingAlertPolicy; // @synthesize speechRecordingAlertPolicy=_speechRecordingAlertPolicy;
@property(readonly, nonatomic) long long speechEndpointerOperationMode; // @synthesize speechEndpointerOperationMode=_speechEndpointerOperationMode;
@property(readonly, nonatomic) _Bool hasPlayedStartAlert; // @synthesize hasPlayedStartAlert=_hasPlayedStartAlert;
@property(readonly, nonatomic) _Bool isOnPhoneCall; // @synthesize isOnPhoneCall=_isOnPhoneCall;
@property(nonatomic) long long speechCapturingMode; // @synthesize speechCapturingMode=_speechCapturingMode;
@property(readonly, nonatomic) unsigned long long voiceTriggerEndHostTime; // @synthesize voiceTriggerEndHostTime=_voiceTriggerEndHostTime;
@property(readonly, nonatomic) unsigned long long buttonDownHostTime; // @synthesize buttonDownHostTime=_buttonDownHostTime;
@property(readonly, nonatomic) unsigned long long activationHostTime; // @synthesize activationHostTime=_activationHostTime;
@property(readonly, nonatomic) double activationSystemUptime; // @synthesize activationSystemUptime=_activationSystemUptime;
@property(readonly, copy, nonatomic) NSString *deviceIdentifier; // @synthesize deviceIdentifier=_deviceIdentifier;
@property(readonly, nonatomic) long long audioAlertStyle; // @synthesize audioAlertStyle=_audioAlertStyle;
@property(readonly, nonatomic) _Bool usePrelistening; // @synthesize usePrelistening=_usePrelistening;
@property(readonly, nonatomic) _Bool useBorealisBuffer; // @synthesize useBorealisBuffer=_useBorealisBuffer;
@property(readonly, nonatomic) long long speechEvent; // @synthesize speechEvent=_speechEvent;
- (id)_audioSessionActiveDelayServerConfiguration;	// IMP=0x0000000100197504
- (id)_audioSessionActiveDelayOverride;	// IMP=0x0000000100197410
- (id)_audioSessionActiveDelayUserPerception;	// IMP=0x00000001001970cc
- (id)_audioSessionActiveDelayCoreSpeech;	// IMP=0x0000000100196f04
- (long long)_audioAlertStyleForListenAfterSpeakingWithRecordRoute:(id)arg1 playbackRoute:(id)arg2 echoCancellation:(_Bool)arg3 useDeviceSpeakerForTTS:(long long)arg4;	// IMP=0x0000000100196d70
- (_Bool)_isVibrationDisabledInAccessibility;	// IMP=0x0000000100196cb8
- (_Bool)_isVoiceOverTouchEnabledInAccessibility;	// IMP=0x0000000100196c00
- (id)dateByAddingTimeIntervalSinceActivation:(double)arg1;	// IMP=0x0000000100196928
- (id)audioSessionActivationTargetDate;	// IMP=0x00000001001967b0
- (long long)overrideStartingAlertBeepSoundID;	// IMP=0x0000000100196760
- (_Bool)isVoiceOverTouchEnabled;	// IMP=0x0000000100196754
- (long long)twoShotPromptTypeForRecordRoute:(id)arg1 playbackRoute:(id)arg2;	// IMP=0x00000001001965e8
- (_Bool)shouldSuppressRecordingErrorAlert;	// IMP=0x00000001001965d4
- (_Bool)shouldSuppressRecordingStopAlert;	// IMP=0x00000001001965ac
- (_Bool)shouldPlayAlertIfNotPrelistening;	// IMP=0x0000000100196564
- (_Bool)shouldExplicitlyPlayAlertOnStart;	// IMP=0x0000000100196518
- (_Bool)shouldUseVoiceTriggerAnalyzerStyle;	// IMP=0x000000010019650c
- (_Bool)canEnterTwoShot;	// IMP=0x00000001001964b8
- (_Bool)_eventIsRaiseToSpeak;	// IMP=0x00000001001964a8
- (_Bool)_eventIsVoiceTrigger;	// IMP=0x00000001001964a0
- (_Bool)_canUseZLL;	// IMP=0x0000000100196410
- (_Bool)canGetPCMStream;	// IMP=0x00000001001963f8
- (_Bool)requiresBorealisConsumerCheck;	// IMP=0x00000001001963c8
- (_Bool)shouldTreatTimeoutAsHardEndpoint;	// IMP=0x00000001001963bc
- (_Bool)canPrepareWithoutInterruption;	// IMP=0x00000001001963b4
- (_Bool)canPrewarm;	// IMP=0x0000000100196380
- (void)endUpdateToPostVoiceWithContext:(unsigned long long)arg1 success:(_Bool)arg2;	// IMP=0x000000010019636c
- (unsigned long long)beginUpdateToPostVoice;	// IMP=0x0000000100196348
- (_Bool)needsUpdateToPostVoiceMode;	// IMP=0x0000000100196304
- (void)audioSessionActivated;	// IMP=0x00000001001962f8
- (long long)audioAlertStyleForRecordRoute:(id)arg1 playbackRoute:(id)arg2;	// IMP=0x0000000100195c1c
- (_Bool)shouldOverrideRecordingStartingAlertBehaviorForAlertStyle:(long long)arg1;	// IMP=0x0000000100195b98
- (id)_alertBehaviorForRecordRoute:(id)arg1 playbackRoute:(id)arg2 attemptsToUsePastDataBufferFrames:(_Bool)arg3;	// IMP=0x00000001001957ac
- (id)startRecordingSettingsWithRecordRoute:(id)arg1 playbackRoute:(id)arg2;	// IMP=0x0000000100195328
- (long long)_csAudioRecordTypeForSpeechEvent:(long long)arg1 useBorealisBuffer:(_Bool)arg2;	// IMP=0x0000000100195310
- (long long)_csAudioRecordTypeForSpeechEvent:(long long)arg1;	// IMP=0x00000001001952ec
- (id)recordContextForSpeechEvent:(long long)arg1;	// IMP=0x0000000100195288
- (id)recordContext;	// IMP=0x0000000100195224
- (long long)_csAudioRecordType;	// IMP=0x00000001001951e0
- (long long)_activationMode;	// IMP=0x0000000100195194
- (id)recordSettingsWithOptions:(unsigned long long)arg1;	// IMP=0x0000000100194dcc
- (id)_appendDictationApplicationInfoSettings:(id)arg1;	// IMP=0x0000000100194d0c
- (long long)event;	// IMP=0x0000000100194d04
- (void)setClientConfiguration:(id)arg1;	// IMP=0x0000000100194c14
- (void)setSpeechRequestOptions:(id)arg1 currentActivationInfo:(id)arg2;	// IMP=0x0000000100194684
- (id)initWithSpeechCapturingMode:(long long)arg1 clientConfiguration:(id)arg2 experimentContext:(id)arg3;	// IMP=0x00000001001944e0
- (id)description;	// IMP=0x000000010019442c

@end

