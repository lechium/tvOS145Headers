//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "ADAudioSessionCoordinatorDelegate-Protocol.h"
#import "ADRecordingInfoProviding-Protocol.h"
#import "ADSpeechCapturingDelegate-Protocol.h"
#import "ADVolumeServiceProviding-Protocol.h"
#import "ADVolumeTracking-Protocol.h"
#import "AFAudioPowerUpdaterDelegate-Protocol.h"
#import "CoreEmbeddedSpeechRecognizerDelegate-Protocol.h"

@class ADAudioPlaybackService, ADAudioSessionCoordinator, ADSpeechCapturingContext, ADSpeechCompressor, ADSpeechLog, ADSpeechPlaybackSimulator, ADSpeechRecorder, ADVolumeService, AFAudioPowerUpdater, AFClientConfiguration, AFDictationOptions, AFInstanceContext, AFQueue, CSAudioSessionController, CSSpeechController, CoreEmbeddedSpeechRecognizer, NSArray, NSError, NSMutableSet, NSString;
@protocol ADRecordingInfoProviding, ADSpeechCapturing, ADSpeechManagerDelegate, ADVolumeServiceProviding, ADVolumeTracking, AFAudioSessionAssertionAcquisitionService, OS_dispatch_queue, OS_dispatch_source;

@interface ADSpeechManager : NSObject <CoreEmbeddedSpeechRecognizerDelegate, ADSpeechCapturingDelegate, ADVolumeServiceProviding, ADVolumeTracking, ADRecordingInfoProviding, AFAudioPowerUpdaterDelegate, ADAudioSessionCoordinatorDelegate>
{
    CoreEmbeddedSpeechRecognizer *_interactiveLocalSpeechRecognizer;	// 8 = 0x8
    NSString *_localSpeechRecognizerTask;	// 16 = 0x10
    NSObject<OS_dispatch_source> *_profileUpdateDelayTimer;	// 24 = 0x18
    NSObject<OS_dispatch_source> *_profileUpdateCoalescingTimer;	// 32 = 0x20
    _Bool _profileUpdateIsActive;	// 40 = 0x28
    AFQueue *_profileUpdateLanguageQueue;	// 48 = 0x30
    NSMutableSet *_profileUpdateLanguageSet;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_queue;	// 64 = 0x40
    AFInstanceContext *_instanceContext;	// 72 = 0x48
    int _speechState;	// 80 = 0x50
    _Bool _shouldTalkToDelegate;	// 84 = 0x54
    long long _capturingMode;	// 88 = 0x58
    AFClientConfiguration *_clientConfiguration;	// 96 = 0x60
    ADSpeechCapturingContext *_capturingContext;	// 104 = 0x68
    NSError *_recordingError;	// 112 = 0x70
    id <ADSpeechManagerDelegate> _delegate;	// 120 = 0x78
    CDUnknownBlockType _recordStartedCompletion;	// 128 = 0x80
    CDUnknownBlockType _recordStoppedCompletion;	// 136 = 0x88
    _Bool _releasesAudioSessionWhenRecordingStopped;	// 144 = 0x90
    long long _prepareAudioSystemTransactionCount;	// 152 = 0x98
    _Bool _releasesAudioSessionWhenPrepareAudioSystemDone;	// 160 = 0xa0
    ADSpeechLog *_speechLog;	// 168 = 0xa8
    CSSpeechController *_speechController;	// 176 = 0xb0
    CSAudioSessionController *_audioSessionController;	// 184 = 0xb8
    id <ADSpeechCapturing> _currentCapturing;	// 192 = 0xc0
    ADSpeechRecorder *_speechRecorder;	// 200 = 0xc8
    ADSpeechPlaybackSimulator *_playbackSimulator;	// 208 = 0xd0
    ADSpeechCompressor *_speechCompressor;	// 216 = 0xd8
    ADVolumeService *_volumeService;	// 224 = 0xe0
    ADAudioPlaybackService *_audioPlaybackService;	// 232 = 0xe8
    id _context;	// 240 = 0xf0
    _Bool _isDriving;	// 248 = 0xf8
    _Bool _isAudioSessionActive;	// 249 = 0xf9
    _Bool _hasPreparedAudioSystemForPlayback;	// 250 = 0xfa
    NSString *_recordRoute;	// 256 = 0x100
    NSString *_deviceIdentifier;	// 264 = 0x108
    _Bool _hasFetchedSmartSiriVolume;	// 272 = 0x110
    _Bool _hasUpdatedSiriOutputVolume;	// 273 = 0x111
    unsigned long long _dirtySiriOutputVolumeHostTime;	// 280 = 0x118
    _Bool _hasReceivedLastAudioBuffer;	// 288 = 0x120
    NSString *_initialDictationLanguage;	// 296 = 0x128
    NSString *_primaryDictationLanguage;	// 304 = 0x130
    NSArray *_dictationLanguages;	// 312 = 0x138
    AFDictationOptions *_dictationOptions;	// 320 = 0x140
    AFAudioPowerUpdater *_inputAudioPowerUpdater;	// 328 = 0x148
    AFAudioPowerUpdater *_outputAudioPowerUpdater;	// 336 = 0x150
    ADAudioSessionCoordinator *_audioSessionCoordinator;	// 344 = 0x158
}

+ (void)_detectOnDeviceDictationOrchestrationMismatchForLanguage:(id)arg1 initialLanguage:(id)arg2 eligibleForOnDeviceDictation:(_Bool)arg3 modelType:(id)arg4 onDeviceRequest:(_Bool)arg5 context:(id)arg6;	// IMP=0x0000000100292ed0
+ (id)sharedManager;	// IMP=0x000000010028c93c
+ (id)_speechCodecError;	// IMP=0x000000010028c914
+ (id)_badStateError;	// IMP=0x000000010028c8ec
- (void).cxx_destruct;	// IMP=0x000000010029b948
@property(readonly, nonatomic) ADAudioPlaybackService *audioPlaybackService; // @synthesize audioPlaybackService=_audioPlaybackService;
@property(readonly, nonatomic) CSAudioSessionController *audioSessionController; // @synthesize audioSessionController=_audioSessionController;
@property(readonly, nonatomic) ADAudioSessionCoordinator *audioSessionCoordinator; // @synthesize audioSessionCoordinator=_audioSessionCoordinator;
@property(readonly, nonatomic) AFAudioPowerUpdater *outputAudioPowerUpdater; // @synthesize outputAudioPowerUpdater=_outputAudioPowerUpdater;
@property(readonly, nonatomic) AFAudioPowerUpdater *inputAudioPowerUpdater; // @synthesize inputAudioPowerUpdater=_inputAudioPowerUpdater;
@property(nonatomic) _Bool isDriving; // @synthesize isDriving=_isDriving;
@property(retain, nonatomic) id context; // @synthesize context=_context;
@property(copy, nonatomic) AFDictationOptions *dictationOptions; // @synthesize dictationOptions=_dictationOptions;
@property(copy, nonatomic) NSArray *dictationLanguages; // @synthesize dictationLanguages=_dictationLanguages;
@property(copy, nonatomic) NSString *primaryDictationLanguage; // @synthesize primaryDictationLanguage=_primaryDictationLanguage;
@property(copy, nonatomic) NSString *initialDictationLanguage; // @synthesize initialDictationLanguage=_initialDictationLanguage;
@property(readonly, nonatomic) id <AFAudioSessionAssertionAcquisitionService> audioSessionAssertionAcquisitionService;
- (void)_updateSiriOutputVolume:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010029b624
- (void)_fetchSmartSiriVolume:(_Bool)arg1;	// IMP=0x000000010029b49c
- (id)_volumeService;	// IMP=0x000000010029b36c
- (_Bool)_supportsVolumeService;	// IMP=0x000000010029b344
- (void)setEARLanguageDetectorSpeechRequestId:(id)arg1;	// IMP=0x000000010029b254
- (void)_addRecordStoppedCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010029b140
- (void)setEndpointerDelayedTrigger:(_Bool)arg1;	// IMP=0x000000010029b098
- (void)setEndpointerThreshold:(double)arg1;	// IMP=0x000000010029aff0
- (void)updateSpeechSynthesisRecord:(id)arg1;	// IMP=0x000000010029af20
@property(readonly, nonatomic) id <ADRecordingInfoProviding> recordingInfoProvider;
@property(readonly, nonatomic) id <ADVolumeServiceProviding> volumeServiceProvider;
@property(readonly, nonatomic) id <ADVolumeTracking> volumeTracker;
- (void)_dispatchUpdateSpeechProfileForNextLanguage;	// IMP=0x000000010029aa34
- (void)_addLanguageUpdateToQueue:(id)arg1;	// IMP=0x000000010029a9c0
- (void)_updateSpeechProfileForLanguages:(id)arg1;	// IMP=0x000000010029a824
- (void)_requestSpeechProfileUpdateForLanguages:(id)arg1;	// IMP=0x000000010029a504
- (void)updateSpeechProfilesForReasons:(id)arg1;	// IMP=0x0000000100299c40
- (void)sendSpeechCorrectionInfo:(id)arg1 interactionIdentifier:(id)arg2;	// IMP=0x0000000100299b38
- (void)cancelSpeechProfileUpdate;	// IMP=0x0000000100299aa4
- (void)getLastStartpointTimestampAndCurrentTime:(CDUnknownBlockType)arg1;	// IMP=0x00000001002999d4
- (void)stopFingerprintingForSuccess:(_Bool)arg1;	// IMP=0x0000000100299910
- (void)updateSpeechOptions:(id)arg1;	// IMP=0x000000010029982c
- (void)playRecordingStartAlert;	// IMP=0x0000000100299790
- (void)enforcePreviousEndpointHint;	// IMP=0x00000001002996f4
- (void)updateEndpointHintForDuration:(double)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100299610
- (void)updateOptionsAfterRecognitionForElapsedTime:(double)arg1 isFinal:(_Bool)arg2;	// IMP=0x0000000100299590
- (void)updateServerEndpointFeatures:(id)arg1;	// IMP=0x00000001002994c0
- (void)suspendAutomaticEndpointingInRange:(struct AFTimeRange)arg1;	// IMP=0x0000000100299418
- (void)setFingerprintWasRecognized;	// IMP=0x00000001002993ac
- (void)suppressAudioInterruptionEndedNotificationsAndEndSessionIfIdle:(CDUnknownBlockType)arg1;	// IMP=0x0000000100299248
- (_Bool)_endSessionIfIdle;	// IMP=0x0000000100299120
- (void)_cancelRecordingIfNeededAndEndSessionWhenIdleWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100298acc
- (void)endSession:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001002988a8
- (void)endSession;	// IMP=0x0000000100298270
- (void)setSuppressAudioInterruptionEndedNotifications:(_Bool)arg1;	// IMP=0x00000001002981f8
- (void)_stopSpeechCaptureWithOptions:(id)arg1;	// IMP=0x0000000100297e1c
- (void)stopSpeechCaptureIfFingerprintingOnlyWithOptions:(id)arg1;	// IMP=0x0000000100297ca8
- (void)stopSpeechCaptureWithOptions:(id)arg1;	// IMP=0x0000000100297b20
- (void)cancelSpeechCaptureSuppressingAlert:(_Bool)arg1;	// IMP=0x0000000100297674
- (void)startSpeechCaptureWithURL:(id)arg1 isNarrowBand:(_Bool)arg2 isDictation:(_Bool)arg3 sessionUUID:(id)arg4;	// IMP=0x0000000100297228
- (void)addRecordedDictationAudioSampleData:(id)arg1;	// IMP=0x0000000100297158
- (void)startRecordedDictationCaptureWithSessionUUID:(id)arg1 narrowband:(_Bool)arg2 secureOfflineOnly:(_Bool)arg3;	// IMP=0x0000000100296d5c
- (void)_startCaptureForMode:(long long)arg1 options:(id)arg2 context:(id)arg3;	// IMP=0x0000000100296158
- (id)_startFixedPriorityCaptureForMode:(long long)arg1 options:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x0000000100295f44
- (void)startAcousticIDCaptureWithOptions:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x0000000100295f18
- (id)startSpeechCaptureForDictationWithOptions:(id)arg1 sessionUUID:(id)arg2 secureOfflineOnly:(_Bool)arg3;	// IMP=0x0000000100295d74
- (id)startSpeechCaptureForRequestWithOptions:(id)arg1 sessionUUID:(id)arg2 language:(id)arg3;	// IMP=0x0000000100295bec
- (_Bool)isStopped;	// IMP=0x0000000100295b40
- (_Bool)isCapturing;	// IMP=0x0000000100295a90
- (void)setClientConfiguration:(id)arg1;	// IMP=0x00000001002959a8
- (void)setDelegate:(id)arg1;	// IMP=0x0000000100295918
- (void)_prepareAudioSystemWithContext:(id)arg1 audioSessionAssertion:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100293c4c
- (void)prepareAudioSystemWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100293910
- (void)preheatWithOptions:(id)arg1;	// IMP=0x0000000100293664
- (void)eagerlyInitializeAudioRecording;	// IMP=0x00000001002935f8
- (void)localSpeechRecognizer:(id)arg1 didCompletionRecognitionWithStatistics:(id)arg2 error:(id)arg3;	// IMP=0x0000000100292bb4
- (void)localSpeechRecognizer:(id)arg1 didRecognizePackage:(id)arg2;	// IMP=0x0000000100292984
- (void)localSpeechRecognizer:(id)arg1 didRecognizeRawEagerRecognitionCandidate:(id)arg2;	// IMP=0x0000000100292840
- (void)localSpeechRecognizer:(id)arg1 didProcessAudioDuration:(double)arg2;	// IMP=0x0000000100292784
- (void)localSpeechRecognizer:(id)arg1 didRecognizeTokens:(id)arg2;	// IMP=0x0000000100292554
- (void)audioPowerUpdaterDidUpdate:(id)arg1 averagePower:(float)arg2 peakPower:(float)arg3;	// IMP=0x0000000100292538
- (id)_recordingInfo;	// IMP=0x00000001002924e4
- (id)getRecordingInfo;	// IMP=0x00000001002923d0
- (void)getRecordingInfoUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001002922f4
- (void)getVolumeServiceUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000100292218
- (void)setDirtySiriOutputVolumeHostTime:(unsigned long long)arg1;	// IMP=0x00000001002920f0
- (void)audioSessionCoordinator:(id)arg1 releaseAudioSessionWithContext:(id)arg2;	// IMP=0x0000000100291df4
- (void)audioSessionCoordinator:(id)arg1 prepareAudioSessionWithContext:(id)arg2;	// IMP=0x00000001002919b8
- (void)speechCapturingDidProvideConfidenceScores:(id)arg1 classification:(unsigned long long)arg2 classifiedUser:(id)arg3 unknownUserScore:(long long)arg4 duration:(long long)arg5 version:(long long)arg6 thresholdingType:(id)arg7 assetVersion:(id)arg8;	// IMP=0x00000001002918cc
- (void)speechCapturing:(id)arg1 languageDetectorDidFail:(id)arg2;	// IMP=0x000000010029186c
- (void)speechCapturing:(id)arg1 didDetectLanguage:(id)arg2 confidenceScores:(id)arg3 isConfident:(_Bool)arg4;	// IMP=0x0000000100291854
- (void)speechCapturing:(id)arg1 didLoseAudioSessionOwnerOrMediaServices:(id)arg2;	// IMP=0x0000000100291780
- (void)speechCapturing:(id)arg1 didInterruptAudioSession:(id)arg2;	// IMP=0x00000001002916ac
- (void)speechCapturing:(id)arg1 didSetAudioSessionActive:(_Bool)arg2;	// IMP=0x000000010029159c
- (void)speechCapturing:(id)arg1 willSetAudioSessionActive:(_Bool)arg2;	// IMP=0x0000000100291498
- (void)speechCapturingDidRequestUpdateSiriOutputVolume:(id)arg1;	// IMP=0x000000010029139c
- (void)speechCapturingDidRequestShutdownUI:(id)arg1;	// IMP=0x00000001002912e4
- (void)speechCapturingDidRequestQuickStop:(id)arg1;	// IMP=0x000000010029122c
- (void)speechCapturing:(id)arg1 performTwoShotPromptWithType:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100291218
- (void)speechCapturing:(id)arg1 didDetectEndpointAtTime:(double)arg2;	// IMP=0x000000010029120c
- (void)speechCapturing:(id)arg1 didDetectStartpointAtTime:(double)arg2;	// IMP=0x0000000100291200
- (void)speechCapturing:(id)arg1 didFinishWritingAudioFile:(id)arg2 error:(id)arg3;	// IMP=0x00000001002911ec
- (void)speechCapturingDidDelayEndpointForMusic:(id)arg1;	// IMP=0x00000001002911e0
- (void)speechCapturingDidDetectMusic:(id)arg1;	// IMP=0x00000001002911d4
- (void)speechCapturing:(id)arg1 didReceiveFingerprint:(id)arg2 duration:(double)arg3;	// IMP=0x00000001002911c4
- (void)speechCapturingDidRecordPCMAudioData:(id)arg1;	// IMP=0x0000000100291154
- (void)speechCapturingDidRecordSpeechPackets:(id)arg1 atTimestamp:(double)arg2 totalPacketCount:(long long)arg3;	// IMP=0x0000000100290ff0
- (void)speechCapturingDidStopRecordingWithError:(id)arg1 endpointMode:(long long)arg2 totalPacketCount:(long long)arg3 endpointerMetrics:(id)arg4;	// IMP=0x0000000100290ed0
- (void)speechCapturingWillStopRecording;	// IMP=0x0000000100290ec0
- (void)speechCapturingDidReceiveLastAudioBufferWithEndpointMode:(long long)arg1 totalPacketCount:(long long)arg2 endpointerMetrics:(id)arg3;	// IMP=0x0000000100290dfc
- (void)speechCapturingDidUpdateRecordingInfo:(id)arg1;	// IMP=0x0000000100290d54
- (void)speechCapturingDidStartRecordingSuccessfully:(_Bool)arg1 error:(id)arg2 withInfo:(id)arg3;	// IMP=0x000000010028fd18
- (void)_updateCapturingStateWithOptions:(id)arg1;	// IMP=0x000000010028fc10
- (void)_recordingStoppedWithError:(id)arg1 totalPacketCount:(long long)arg2 endpointMode:(long long)arg3 endpointerMetrics:(id)arg4;	// IMP=0x000000010028f914
- (void)_lastAudioBufferReceivedWithEndpointMode:(long long)arg1 totalPacketCount:(long long)arg2 endpointerMetrics:(id)arg3;	// IMP=0x000000010028f7c0
- (void)_cancelRecordingWithError:(id)arg1 suppressAlert:(_Bool)arg2;	// IMP=0x000000010028f638
- (void)_tellDelegateDidDetectLanguage:(id)arg1 confidenceScores:(id)arg2 isConfident:(_Bool)arg3;	// IMP=0x000000010028f5ac
- (void)_tellDelegateDidSetAudioSessionActive:(_Bool)arg1;	// IMP=0x000000010028f560
- (void)_tellDelegateWillSetAudioSessionActive:(_Bool)arg1;	// IMP=0x000000010028f514
- (void)_tellDelegateShutdownUIWasRequested;	// IMP=0x000000010028f4d4
- (void)_tellDelegateQuickStopWasRequested;	// IMP=0x000000010028f494
- (void)_tellDelegateToPerformTwoShotPromptWithType:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010028f428
- (void)_tellDelegateSpeechEndpointWasDetectedAtTime:(double)arg1;	// IMP=0x000000010028f3d8
- (void)_tellDelegateSpeechStartpointWasDetectedAtTime:(double)arg1;	// IMP=0x000000010028f388
- (void)_tellDelegateAudioFileDidFinish:(id)arg1 error:(id)arg2;	// IMP=0x000000010028f308
- (void)_tellDelegateAboutInputAveragePower:(float)arg1 peak:(float)arg2;	// IMP=0x000000010028f274
- (void)_tellDelegateEndpointWasDelayedForMusic;	// IMP=0x000000010028f1fc
- (void)_tellDelegateMusicWasDetected;	// IMP=0x000000010028f184
- (void)_tellDelegateAboutFingerprint:(id)arg1 duration:(double)arg2;	// IMP=0x000000010028f0e0
- (void)_tellDelegateAboutSpeechPackets:(id)arg1 atTimestamp:(double)arg2 count:(long long)arg3;	// IMP=0x000000010028f030
- (void)_tellDelegateUpdateAudioInfo:(id)arg1;	// IMP=0x000000010028ef98
- (void)_tellDelegateSpeechStartedWithRecordingInfo:(id)arg1;	// IMP=0x000000010028ef00
- (void)_tellDelegateSpeechWillBeginWithTimestamp:(double)arg1 isFromFile:(_Bool)arg2;	// IMP=0x000000010028ee30
- (void)_tellDelegateSpeechRecognitionUpdateWillBegin;	// IMP=0x000000010028edb4
- (void)_tellDelegateSpeechShouldPreheatWithRecordingInfo:(id)arg1;	// IMP=0x000000010028ed1c
- (void)_tellDelegateSpeechFinished;	// IMP=0x000000010028ec84
- (void)_tellDelegateSpeechReceivedLastAudioBufferWithEndpointMode:(long long)arg1 totalPacketCount:(long long)arg2 endpointerMetrics:(id)arg3;	// IMP=0x000000010028ebd4
- (void)_tellDelegateSpeechFailedWithError:(id)arg1;	// IMP=0x000000010028eb2c
- (void)_tellDelegateSpeechCanceled;	// IMP=0x000000010028eaa0
- (void)_cleanUpDelegateInfo;	// IMP=0x000000010028e9d0
- (void)resetLocalRecognizer;	// IMP=0x000000010028e904
- (void)cancelLocalRecognitionIfActive;	// IMP=0x000000010028e79c
- (_Bool)isLocallyRecognizingInSiriMiniMode;	// IMP=0x000000010028e6c4
- (_Bool)isLocallyRecognizingInDictationMode;	// IMP=0x000000010028e600
- (_Bool)isLocallyRecognizing;	// IMP=0x000000010028e554
- (void)disableDESWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010028e484
- (void)getOfflineDictationStatusIgnoringCache:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010028e3a0
- (id)_interactiveLocalSpeechRecognizer;	// IMP=0x000000010028e298
- (void)_fetchAssetsForLanaugeOrEnablementNotification:(id)arg1;	// IMP=0x000000010028e07c
- (void)dictationSessionDidComplete;	// IMP=0x000000010028dc68
- (_Bool)_releaseSession;	// IMP=0x000000010028d864
- (void)_updateRecordRoute:(id)arg1 andDeviceIdentifier:(id)arg2;	// IMP=0x000000010028d67c
- (void)_updateSpeechState:(int)arg1;	// IMP=0x000000010028d454
- (id)_currentSpeechCaptureSource;	// IMP=0x000000010028d368
- (id)_speechCompressor;	// IMP=0x000000010028d254
- (void)getSpeechRecorderVTSatScore:(CDUnknownBlockType)arg1;	// IMP=0x000000010028d160
- (id)_speechRecorder;	// IMP=0x000000010028d038
- (void)dealloc;	// IMP=0x000000010028cf94
- (id)_initWithInstanceContext:(id)arg1;	// IMP=0x000000010028c9f0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

