//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "ADAcousticFingerprinterDelegate-Protocol.h"
#import "ADSpeechCapturing-Protocol.h"
#import "CSAudioSessionControllerDelegate-Protocol.h"
#import "CSEndpointAnalyzerDelegate-Protocol.h"
#import "CSLanguageDetectorDelegate-Protocol.h"
#import "CSSpeakerIdentificationDelegate-Protocol.h"
#import "CSSpeechControllerDelegate-Protocol.h"

@class ADAcousticFingerprinter, ADAudioActivationInfo, ADAudioFileWriter, ADAudioPlaybackService, ADSpeechCapturingContext, AFBluetoothWirelessSplitterSessionStateObserver, AFClientConfiguration, AFExperimentContext, AFSpeechSynthesisRecord, AFWatchdogTimer, CSAudioRecordDeviceInfo, CSAudioSessionController, CSEndpointerMetrics, CSSpeechController, NSArray, NSFileHandle, NSMutableDictionary, NSString, NSUUID, NSXPCConnection;
@protocol ADSpeechCapturingDelegate, CSEndpointAnalyzer, OS_dispatch_group, OS_dispatch_queue, OS_dispatch_source;

@interface ADSpeechRecorder : NSObject <ADAcousticFingerprinterDelegate, CSSpeechControllerDelegate, CSEndpointAnalyzerDelegate, CSLanguageDetectorDelegate, CSSpeakerIdentificationDelegate, CSAudioSessionControllerDelegate, ADSpeechCapturing>
{
    id <ADSpeechCapturingDelegate> _delegate;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_queue;	// 16 = 0x10
    _Bool _isSpeechControllerInitialized;	// 24 = 0x18
    CSSpeechController *_speechController;	// 32 = 0x20
    CSAudioSessionController *_audioSessionController;	// 40 = 0x28
    ADAudioPlaybackService *_audioPlaybackService;	// 48 = 0x30
    long long _packetCount;	// 56 = 0x38
    long long _speechCapturingMode;	// 64 = 0x40
    long long _recordingAlertsConfiguration;	// 72 = 0x48
    NSObject<OS_dispatch_source> *_extendedEndpointTimer;	// 80 = 0x50
    id <CSEndpointAnalyzer> _endpointAnalyzer;	// 88 = 0x58
    ADSpeechCapturingContext *_context;	// 96 = 0x60
    ADAudioActivationInfo *_currentActivationInfo;	// 104 = 0x68
    ADAudioActivationInfo *_pendingActivationInfo;	// 112 = 0x70
    CSAudioRecordDeviceInfo *_currentRecordDeviceInfo;	// 120 = 0x78
    NSString *_currentPlaybackRoute;	// 128 = 0x80
    _Bool _fingerprintingEnabled;	// 136 = 0x88
    ADAcousticFingerprinter *_fingerprinter;	// 144 = 0x90
    long long _audioFileType;	// 152 = 0x98
    _Bool _needsAVVCLPCMCallbacks;	// 160 = 0xa0
    _Bool _hasReceivedEmptyLPCMRecordBuffer;	// 161 = 0xa1
    NSFileHandle *_audioFileHandle;	// 168 = 0xa8
    ADAudioFileWriter *_audioFileWriter;	// 176 = 0xb0
    ADAudioFileWriter *_audioLogggingFileWriter;	// 184 = 0xb8
    long long _startEvent;	// 192 = 0xc0
    long long _recordingState;	// 200 = 0xc8
    long long _endpointerOperationMode;	// 208 = 0xd0
    _Bool _didReceiveFirstBuffer;	// 216 = 0xd8
    _Bool _didReceiveLastBuffer;	// 217 = 0xd9
    _Bool _didDetectStartpoint;	// 218 = 0xda
    _Bool _didDetectEndpoint;	// 219 = 0xdb
    _Bool _didEnterTwoShotMode;	// 220 = 0xdc
    _Bool _didFakeTwoShotWithAlert;	// 221 = 0xdd
    NSUUID *_fakeTwoShotTTSPromptUUID;	// 224 = 0xe0
    _Bool _serverDidRecognizeSpeech;	// 232 = 0xe8
    _Bool _fingerprintWasRecognized;	// 233 = 0xe9
    _Bool _serverDidEndpoint;	// 234 = 0xea
    _Bool _didTimeout;	// 235 = 0xeb
    _Bool _wasCanceled;	// 236 = 0xec
    _Bool _suppressRecordingStoppedAlert;	// 237 = 0xed
    _Bool _isRecordingUsingBTRoute;	// 238 = 0xee
    double _twoShotStartTime;	// 240 = 0xf0
    _Bool _didPerformTwoShotPrompt;	// 248 = 0xf8
    _Bool _forceSuccessAlertOnStop;	// 249 = 0xf9
    _Bool _isDriving;	// 250 = 0xfa
    double _startRecordingTimestamp;	// 256 = 0x100
    double _firstBufferTimestamp;	// 264 = 0x108
    unsigned long long _firstBufferHostTime;	// 272 = 0x110
    unsigned long long _estimatedSpeechEndHostTime;	// 280 = 0x118
    double _lastPrepareTimestamp;	// 288 = 0x120
    double _accumulatedBufferDuration;	// 296 = 0x128
    NSObject<OS_dispatch_group> *_recordingWillStartGroup;	// 304 = 0x130
    struct OpaqueAudioConverter *_decoder;	// 312 = 0x138
    double _expectedFirstBufferTimestamp;	// 320 = 0x140
    _Bool _isOpus;	// 328 = 0x148
    NSString *_recordDevice;	// 336 = 0x150
    _Bool _audioDuckingEnabled;	// 344 = 0x158
    NSXPCConnection *_speechRecordingEventListenerConnection;	// 352 = 0x160
    AFWatchdogTimer *_fakeTwoShotTTSPromptWatchdogTimer;	// 360 = 0x168
    unsigned long long _lastAudioRecordBufferStartTime;	// 368 = 0x170
    unsigned long long _lastAudioRecordBufferReceiptTime;	// 376 = 0x178
    CSEndpointerMetrics *_lastEndpointerMetrics;	// 384 = 0x180
    double _lastEndpointHintDuration;	// 392 = 0x188
    NSArray *_lastEndpointHintFeatures;	// 400 = 0x190
    CDUnknownBlockType _lastEndpointHintCompletion;	// 408 = 0x198
    AFSpeechSynthesisRecord *_mostRecentSpeechSynthesisRecord;	// 416 = 0x1a0
    AFClientConfiguration *_currentClientConfiguration;	// 424 = 0x1a8
    NSObject<OS_dispatch_group> *_alertPlaybackGroup;	// 432 = 0x1b0
    NSMutableDictionary *_numberOfAVVCAlertPlaybacksByType;	// 440 = 0x1b8
    AFBluetoothWirelessSplitterSessionStateObserver *_bluetoothWirelessSplitterSessionStateObserver;	// 448 = 0x1c0
    AFExperimentContext *_experimentContext;	// 456 = 0x1c8
    _Bool _suppressInterruptionEndedNotifications;	// 464 = 0x1d0
}

- (void).cxx_destruct;	// IMP=0x00000001001acc44
@property(nonatomic) _Bool suppressInterruptionEndedNotifications; // @synthesize suppressInterruptionEndedNotifications=_suppressInterruptionEndedNotifications;
- (void)_setAudioDuckingEnabled:(_Bool)arg1;	// IMP=0x00000001001acc30
- (void)_setDictationAudioModeEnabled:(_Bool)arg1;	// IMP=0x00000001001acc2c
- (unsigned int)_audioDeviceID;	// IMP=0x00000001001acc24
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionOwnerResetNotification:(id)arg2;	// IMP=0x00000001001acb60
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionOwnerLostNotification:(id)arg2;	// IMP=0x00000001001aca28
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:(id)arg2;	// IMP=0x00000001001ac964
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:(id)arg2;	// IMP=0x00000001001ac82c
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionRouteChangeNotificationWithUserInfo:(id)arg2;	// IMP=0x00000001001ac768
- (void)audioSessionController:(id)arg1 didReceiveAudioSessionInterruptionNotificationWithUserInfo:(id)arg2;	// IMP=0x00000001001ac5dc
- (void)speakerIdentificationDidDetectSpeakerWithScores:(id)arg1;	// IMP=0x00000001001ac268
- (_Bool)_startAudioPlaybackRequest:(id)arg1 options:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001abeb0
- (void)acousticFingerprinter:(id)arg1 hasFingerprint:(id)arg2 duration:(double)arg3;	// IMP=0x00000001001abd60
- (void)setEARLanguageDetectorSpeechRequestId:(id)arg1;	// IMP=0x00000001001abd50
- (void)performBlockAfterAlerts:(CDUnknownBlockType)arg1 timeout:(double)arg2;	// IMP=0x00000001001ab864
- (void)setEndpointerDelayedTrigger:(_Bool)arg1;	// IMP=0x00000001001ab854
- (void)setEndpointerThreshold:(double)arg1;	// IMP=0x00000001001ab840
- (void)enforcePreviousEndpointHint;	// IMP=0x00000001001ab82c
- (void)_enforceEndpointHint;	// IMP=0x00000001001ab740
- (void)_clearEndpointHint;	// IMP=0x00000001001ab6f8
- (void)_checkIfLastEndpointHintShouldBeAccepted;	// IMP=0x00000001001ab43c
- (void)updateEndpointHintForDuration:(double)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001ab2e4
- (void)_handleFakeTwoShotPromptCallbackWithUUID:(id)arg1 timestamp:(double)arg2 duration:(double)arg3 error:(id)arg4;	// IMP=0x00000001001ab130
- (void)_handleFakeTwoShotPromptTimeoutWithUUID:(id)arg1;	// IMP=0x00000001001ab050
- (void)_playPhaticWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001aacec
- (void)_performTwoShotPromptForType:(long long)arg1 atTime:(double)arg2;	// IMP=0x00000001001aa540
- (void)_hardEndpointWasDetectedWithMetrics:(id)arg1 atTime:(double)arg2;	// IMP=0x00000001001aa314
- (void)endpointer:(id)arg1 didDetectHardEndpointAtTime:(double)arg2 withMetrics:(id)arg3;	// IMP=0x00000001001a9dd4
- (void)endpointer:(id)arg1 didDetectStartpointAtTime:(double)arg2;	// IMP=0x00000001001a9b60
- (void)speechControllerDidUpdateSmartSiriVolume:(id)arg1 forReason:(unsigned long long)arg2;	// IMP=0x00000001001a9a2c
- (void)_speechControllerRequestsOperation:(unsigned long long)arg1 forReason:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001a97f0
- (void)speechControllerRequestsOperation:(unsigned long long)arg1 forReason:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001a9690
- (void)speechControllerRequestsOperation:(unsigned long long)arg1 forReason:(unsigned long long)arg2;	// IMP=0x00000001001a9564
- (void)suppressUtteranceGradingIfRequired;	// IMP=0x00000001001a9314
- (void)speechControllerDidDetectVoiceTriggerTwoShot:(id)arg1 atTime:(double)arg2;	// IMP=0x00000001001a9304
- (void)speechControllerDidDetectVoiceTriggerTwoShot:(id)arg1 atTime:(double)arg2 wantsAudibleFeedback:(_Bool)arg3;	// IMP=0x00000001001a8e24
- (void)languageDetectorDidDetectLanguageWithConfidence:(id)arg1 confidence:(id)arg2 isConfident:(_Bool)arg3;	// IMP=0x00000001001a8c8c
- (void)_playStopAlertIfNecessaryForReason:(long long)arg1 endpointMode:(long long)arg2 error:(id)arg3;	// IMP=0x00000001001a8868
- (void)_setLanguageDetectorDelegateIfRequired;	// IMP=0x00000001001a8864
- (void)speechControllerDidFinishAlertPlayback:(id)arg1 ofType:(long long)arg2 error:(id)arg3;	// IMP=0x00000001001a84b0
- (void)speechController:(id)arg1 didSetAudioSessionActive:(_Bool)arg2;	// IMP=0x00000001001a8394
- (void)speechController:(id)arg1 willSetAudioSessionActive:(_Bool)arg2;	// IMP=0x00000001001a8278
- (void)speechControllerRecordHardwareConfigurationDidChange:(id)arg1 toConfiguration:(long long)arg2;	// IMP=0x00000001001a81c4
- (void)speechControllerEndRecordInterruption:(id)arg1;	// IMP=0x00000001001a80e4
- (void)speechControllerBeginRecordInterruption:(id)arg1 withContext:(id)arg2;	// IMP=0x00000001001a7fdc
- (void)_speechControllerDidReceiveLastAudioRecordBuffer:(id)arg1 forReason:(long long)arg2 estimatedSpeechEndHostTime:(unsigned long long)arg3 isRecordingStopped:(_Bool)arg4;	// IMP=0x00000001001a7d54
- (void)speechControllerLPCMRecordBufferAvailable:(id)arg1 buffer:(id)arg2;	// IMP=0x00000001001a7ac4
- (id)convertVirtualAudioSubTypeToString:(unsigned int)arg1;	// IMP=0x00000001001a7a50
- (id)getAudioRouteInstrumentationWithRecordingInfo:(id)arg1;	// IMP=0x00000001001a73e0
- (void)_speechControllerDidReceiveFirstAudioRecordBufferWithHostTime:(unsigned long long)arg1 atHostTime:(unsigned long long)arg2;	// IMP=0x00000001001a7134
- (void)speechControllerRecordBufferAvailable:(id)arg1 buffers:(id)arg2 durationInSec:(float)arg3 recordedAt:(unsigned long long)arg4 audioDeviceInfo:(id)arg5;	// IMP=0x00000001001a6b60
- (void)_decodeRecordBufferForSecureOfflineOnly:(id)arg1 isOpus:(_Bool)arg2;	// IMP=0x00000001001a668c
- (struct OpaqueAudioConverter *)_opusDecoder;	// IMP=0x00000001001a660c
- (struct OpaqueAudioConverter *)_speexDecoder;	// IMP=0x00000001001a658c
- (void)_speechControllerDidStopRecording:(id)arg1 audioDeviceInfo:(id)arg2 forReason:(long long)arg3 estimatedSpeechEndHostTime:(unsigned long long)arg4 errorCodeOverride:(long long)arg5 underlyingError:(id)arg6;	// IMP=0x00000001001a59a8
- (void)speechControllerDidStopRecording:(id)arg1 audioDeviceInfo:(id)arg2 forReason:(long long)arg3 estimatedSpeechEndHostTime:(unsigned long long)arg4;	// IMP=0x00000001001a5630
- (void)speechControllerDidDeliverLastBuffer:(id)arg1 forReason:(long long)arg2 estimatedSpeechEndHostTime:(unsigned long long)arg3;	// IMP=0x00000001001a54b4
- (void)_speechControllerDidStartRecording:(id)arg1 successfully:(_Bool)arg2 error:(id)arg3;	// IMP=0x00000001001a4cc8
- (void)speechControllerDidStartRecording:(id)arg1 audioDeviceInfo:(id)arg2 successfully:(_Bool)arg3 error:(id)arg4;	// IMP=0x00000001001a4a7c
- (id)_recordingInfoForEvent:(long long)arg1 audioAlertStyle:(long long)arg2 includeBTInfo:(_Bool)arg3 includeRecordDeviceInfo:(_Bool)arg4;	// IMP=0x00000001001a4640
- (id)_currentRecordingInfo;	// IMP=0x00000001001a45e4
- (void)_updateRecordDeviceInfoAndPlaybackRouteForReason:(id)arg1 audioDeviceInfo:(id)arg2 forcesUpdate:(_Bool)arg3;	// IMP=0x00000001001a4108
- (id)_currentPlaybackRoute;	// IMP=0x00000001001a40b0
- (id)_currentRecordDeviceInfo;	// IMP=0x00000001001a4058
- (id)_currentRecordRoute;	// IMP=0x00000001001a3ff8
- (void)updateServerEndpointFeatures:(id)arg1;	// IMP=0x00000001001a3f8c
- (void)playRecordingStartAlert;	// IMP=0x00000001001a3d64
- (void)getLastStartpointTimestampAndCurrentTime:(CDUnknownBlockType)arg1;	// IMP=0x00000001001a3cc4
- (void)setClientConfiguration:(id)arg1;	// IMP=0x00000001001a3bac
- (id)_speechRecordingEventListener;	// IMP=0x00000001001a3b3c
- (void)setSpeechRecordingEventListeningEndpoint:(id)arg1;	// IMP=0x00000001001a3a78
- (void)setIsDriving:(_Bool)arg1;	// IMP=0x00000001001a3a70
- (void)setAudioFileHandle:(id)arg1;	// IMP=0x00000001001a3a64
- (void)setAudioFileType:(long long)arg1;	// IMP=0x00000001001a3a5c
- (void)forceSuccessAudioAlertOnStop;	// IMP=0x00000001001a39a4
- (void)setFingerprintingEnabled:(_Bool)arg1;	// IMP=0x00000001001a3928
- (void)cancelSpeechCaptureSuppressingAlert:(_Bool)arg1;	// IMP=0x00000001001a3844
- (void)stopSpeechCaptureForEvent:(long long)arg1 suppressAlert:(_Bool)arg2 hostTime:(unsigned long long)arg3;	// IMP=0x00000001001a36dc
- (void)setFingerprintWasRecognized;	// IMP=0x00000001001a3624
- (void)setSpeechWasRecognizedForElapsedTime:(double)arg1 isFinal:(_Bool)arg2;	// IMP=0x00000001001a34ac
- (void)releaseAudioSession;	// IMP=0x00000001001a3204
- (void)setDelegate:(id)arg1;	// IMP=0x00000001001a31f8
- (_Bool)_updateAudioContextWithPendingInfoForReason:(id)arg1;	// IMP=0x00000001001a304c
- (_Bool)_updateAudioContextToPostVoiceForReason:(id)arg1;	// IMP=0x00000001001a2f14
- (_Bool)_setAudioContextWithInfo:(id)arg1 forReason:(id)arg2;	// IMP=0x00000001001a2c48
- (void)_updateAudioContextWithInfo:(id)arg1 reason:(id)arg2;	// IMP=0x00000001001a2ae8
- (void)setSpeechRequestOptions:(id)arg1;	// IMP=0x00000001001a2738
- (void)_logAudioMetrics:(id)arg1;	// IMP=0x00000001001a23c8
- (void)_logVoiceTriggerInfo:(id)arg1;	// IMP=0x00000001001a21ac
- (void)_logBluetoothState;	// IMP=0x00000001001a1f78
- (void)_logFanState;	// IMP=0x00000001001a1f74
- (id)fetchRecordingInfo;	// IMP=0x00000001001a1f68
- (unsigned int)_audioSessionID;	// IMP=0x00000001001a1e48
- (unsigned int)fetchAudioSessionID;	// IMP=0x00000001001a1e3c
- (void)updateSpeechSynthesisRecord:(id)arg1;	// IMP=0x00000001001a1cf0
- (_Bool)startSpeechCaptureWithContext:(id)arg1 willStartHandler:(CDUnknownBlockType)arg2 error:(id *)arg3;	// IMP=0x00000001001a0aec
- (void)prepareForMode:(long long)arg1;	// IMP=0x00000001001a0990
- (void)suspendAutomaticEndpointingInRange:(struct AFTimeRange)arg1;	// IMP=0x00000001001a097c
- (id)currentVTSatScore;	// IMP=0x00000001001a082c
- (id)recordingInfoForPreheatWithEvent:(long long)arg1;	// IMP=0x00000001001a0738
- (_Bool)prepareSpeechCaptureWithOptions:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x00000001001a06c0
- (void)preheat;	// IMP=0x00000001001a021c
- (void)eagerlyInitializeAudioRecording;	// IMP=0x00000001001a0160
- (void)_stopRecordingForEndpointReason:(CDUnion_e15ec660)arg1;	// IMP=0x00000001001a0070
- (void)_cancelExtendedEndpointTimer;	// IMP=0x00000001001a0034
- (void)_scheduleExtendedEndpointTimer;	// IMP=0x000000010019fee4
- (void)_setEndpointStyle:(long long)arg1;	// IMP=0x000000010019fd78
- (void)_setupAudioFileWritingForSpeechController:(id)arg1 info:(id)arg2 context:(id)arg3;	// IMP=0x000000010019f328
- (_Bool)_checkAudioLoggingLimits:(id)arg1;	// IMP=0x000000010019f130
- (void)_playAudioAlert:(long long)arg1;	// IMP=0x000000010019eee0
- (int)_mapInstrumentationEndpointTypeFromStopRecordingReason:(CDUnion_e15ec660)arg1;	// IMP=0x000000010019ee28
- (_Bool)_shouldEmitInstrumentation;	// IMP=0x000000010019ede8
- (void)_disableEndpointer;	// IMP=0x000000010019ed10
- (void)_stopRecordingWithReason:(CDUnion_e15ec660)arg1 hostTime:(unsigned long long)arg2;	// IMP=0x000000010019e5c0
- (_Bool)_prepareSpeechControllerWithOptions:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x000000010019e058
- (id)_fingerprinter;	// IMP=0x000000010019df98
- (void)_resetSpeechController;	// IMP=0x000000010019de00
- (id)_speechControllerWithError:(id *)arg1;	// IMP=0x000000010019d974
- (id)_speechController;	// IMP=0x000000010019d964
- (void)_updateRecordBufferDuration;	// IMP=0x000000010019d850
- (void)_setAlertsIfNeeded;	// IMP=0x000000010019d0c4
- (void)_setEndpointerOperationMode:(long long)arg1 forceUpdate:(_Bool)arg2;	// IMP=0x000000010019ce44
- (void)_setSpeechCapturingMode:(long long)arg1;	// IMP=0x000000010019cd4c
- (void)dealloc;	// IMP=0x000000010019ccdc
- (id)initWithQueue:(id)arg1 speechController:(id)arg2 audioSessionController:(id)arg3 audioPlaybackService:(id)arg4;	// IMP=0x000000010019c990

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

