//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "BLBookInstallManagerProgressDelegate-Protocol.h"
#import "NSURLSessionDataDelegate-Protocol.h"

@class BLBookInstallManager, BLDatabaseManager, BLDownloadPipelineQueue, BLDownloadPolicyManager, NSMapTable, NSMutableDictionary, NSMutableOrderedSet, NSMutableSet, NSString;
@protocol BLOSTransactionCoordinating, BLOperationQueueProtocol, OS_dispatch_queue, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface BLDownloadPipeline : NSObject <NSURLSessionDataDelegate, BLBookInstallManagerProgressDelegate>
{
    BLDatabaseManager *_databaseManager;	// 8 = 0x8
    BLBookInstallManager *_installManager;	// 16 = 0x10
    BLDownloadPolicyManager *_downloadPolicyManager;	// 24 = 0x18
    id <BLOSTransactionCoordinating> _transactionCoordinator;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_dispatchQueue;	// 40 = 0x28
    id <BLOperationQueueProtocol> _backgroundOperationQueue;	// 48 = 0x30
    NSMutableSet *_dirtyTaskStates;	// 56 = 0x38
    NSMutableOrderedSet *_preparationDownloadIDs;	// 64 = 0x40
    id <BLOperationQueueProtocol> _preparationOperationQueue;	// 72 = 0x48
    id <BLOperationQueueProtocol> _processingOperationQueue;	// 80 = 0x50
    NSObject<OS_dispatch_source> *_reconnectTimer;	// 88 = 0x58
    NSObject<OS_dispatch_source> *_progressTimer;	// 96 = 0x60
    NSMapTable *_taskStates;	// 104 = 0x68
    NSMutableSet *_activeTaskStates;	// 112 = 0x70
    NSMutableDictionary *_urlSessions;	// 120 = 0x78
    id <BLOperationQueueProtocol> _sampleDownloadOperationQueue;	// 128 = 0x80
    id <BLOperationQueueProtocol> _discretionaryDownloadOperationQueue;	// 136 = 0x88
    id <BLOperationQueueProtocol> _nonDiscretionaryDownloadOperationQueue;	// 144 = 0x90
    BLDownloadPipelineQueue *_downloadPipelineQueue;	// 152 = 0x98
}

- (void).cxx_destruct;	// IMP=0x0000000100036980
@property(readonly, nonatomic) BLDownloadPipelineQueue *downloadPipelineQueue; // @synthesize downloadPipelineQueue=_downloadPipelineQueue;
@property(retain, nonatomic) id <BLOperationQueueProtocol> nonDiscretionaryDownloadOperationQueue; // @synthesize nonDiscretionaryDownloadOperationQueue=_nonDiscretionaryDownloadOperationQueue;
@property(retain, nonatomic) id <BLOperationQueueProtocol> discretionaryDownloadOperationQueue; // @synthesize discretionaryDownloadOperationQueue=_discretionaryDownloadOperationQueue;
@property(retain, nonatomic) id <BLOperationQueueProtocol> sampleDownloadOperationQueue; // @synthesize sampleDownloadOperationQueue=_sampleDownloadOperationQueue;
@property(retain, nonatomic) NSMutableDictionary *urlSessions; // @synthesize urlSessions=_urlSessions;
@property(retain, nonatomic) NSMutableSet *activeTaskStates; // @synthesize activeTaskStates=_activeTaskStates;
@property(retain, nonatomic) NSMapTable *taskStates; // @synthesize taskStates=_taskStates;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *progressTimer; // @synthesize progressTimer=_progressTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *reconnectTimer; // @synthesize reconnectTimer=_reconnectTimer;
@property(retain, nonatomic) id <BLOperationQueueProtocol> processingOperationQueue; // @synthesize processingOperationQueue=_processingOperationQueue;
@property(retain, nonatomic) id <BLOperationQueueProtocol> preparationOperationQueue; // @synthesize preparationOperationQueue=_preparationOperationQueue;
@property(retain, nonatomic) NSMutableOrderedSet *preparationDownloadIDs; // @synthesize preparationDownloadIDs=_preparationDownloadIDs;
@property(retain, nonatomic) NSMutableSet *dirtyTaskStates; // @synthesize dirtyTaskStates=_dirtyTaskStates;
@property(retain, nonatomic) id <BLOperationQueueProtocol> backgroundOperationQueue; // @synthesize backgroundOperationQueue=_backgroundOperationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(nonatomic) __weak id <BLOSTransactionCoordinating> transactionCoordinator; // @synthesize transactionCoordinator=_transactionCoordinator;
@property(nonatomic) __weak BLDownloadPolicyManager *downloadPolicyManager; // @synthesize downloadPolicyManager=_downloadPolicyManager;
@property(nonatomic) __weak BLBookInstallManager *installManager; // @synthesize installManager=_installManager;
@property(nonatomic) __weak BLDatabaseManager *databaseManager; // @synthesize databaseManager=_databaseManager;
- (void)dq_setDownloadState:(long long)arg1 forDownloadIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100036678
- (void)dq_scheduleReconnect;	// IMP=0x00000001000363a0
- (void)dq_notifyServerOfDownloadCancelledWithTaskState:(id)arg1;	// IMP=0x0000000100036034
- (void)dq_processDownloadFailureWithTaskState:(id)arg1 task:(id)arg2 cancelReason:(long long)arg3;	// IMP=0x0000000100035d64
- (void)dq_processCompletedDownloadWithTaskState:(id)arg1 postProgress:(_Bool)arg2;	// IMP=0x0000000100035c68
- (void)dq_prepareDownloadsForDownloads:(id)arg1 filtersExistingTasks:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000356c4
- (void)dq_logDownloadEvent:(id)arg1 forTaskWithState:(id)arg2;	// IMP=0x0000000100035590
- (void)doq_performDownloadOperation:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100034ae0
- (void)dq_pumpDownloadsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100033984
- (_Bool)dq_setSessionTaskPriorityToHighForDownloadID:(id)arg1;	// IMP=0x000000010003361c
- (void)dq_clearIsLocalServerCacheForDownloadID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010003337c
- (void)dq_saveState:(long long)arg1 forDownloadID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000330f8
- (void)dq_cancelProgressTimer;	// IMP=0x0000000100033044
- (void)dq_commitProgress;	// IMP=0x0000000100031c90
- (void)dq_startProgressTimer;	// IMP=0x00000001000319e0
- (void)_addDownloads:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000314b0
- (void)URLSession:(id)arg1 task:(id)arg2 _willSendRequestForEstablishedConnection:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100030f28
- (void)URLSession:(id)arg1 _willRetryBackgroundDataTask:(id)arg2 withError:(id)arg3;	// IMP=0x0000000100030b98
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000010003096c
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;	// IMP=0x000000010002fe6c
- (void)URLSession:(id)arg1 task:(id)arg2 didFinishCollectingMetrics:(id)arg3;	// IMP=0x000000010002fce8
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000010002f624
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;	// IMP=0x000000010002f0e8
- (void)installManager:(id)arg1 didFinishInstallForOperation:(id)arg2;	// IMP=0x000000010002ed2c
- (void)installManager:(id)arg1 updatedProgress:(id)arg2 forInstallOperation:(id)arg3;	// IMP=0x000000010002eb54
- (void)installManager:(id)arg1 didStartInstallWithOperation:(id)arg2 forDownloadID:(id)arg3;	// IMP=0x000000010002e724
- (void)installManager:(id)arg1 willRestartInstallForDownload:(id)arg2;	// IMP=0x000000010002e550
- (id)dq_getTaskStateFromDownloadID:(id)arg1;	// IMP=0x000000010002e420
- (void)stopDownloadsWithIdentifiers:(id)arg1 reason:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010002dad0
- (void)restartDownloadsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010002d53c
- (void)startupDownloadsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010002d0ec
- (void)prioritizeDownloadWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010002ce18
- (void)reconnectWithURLSessionTasks;	// IMP=0x000000010002cb58
- (void)pumpDownloadsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010002ca90
- (void)dealloc;	// IMP=0x000000010002ca20
- (id)initWithDatabaseManager:(id)arg1 downloadPolicyManager:(id)arg2 transactionCoordinator:(id)arg3 installManager:(id)arg4;	// IMP=0x000000010002c674
- (id)newOperationQueue;	// IMP=0x000000010002c61c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

