//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "CPLPrequeliteStorage.h"

#import "CPLEngineScopeStorageImplementation-Protocol.h"

@class CPLPrequeliteTodoVar, CPLPrequeliteVariable, CPLPrequeliteVariableGroup, NSMutableSet, NSString, _CPLPrequeliteScopeBase, _CPLPrequeliteScopeSyncState;

@interface CPLPrequeliteScopeStorage : CPLPrequeliteStorage <CPLEngineScopeStorageImplementation>
{
    CPLPrequeliteVariable *_nextIndexVar;	// 8 = 0x8
    CPLPrequeliteVariable *_scopeListSyncAnchorVar;	// 16 = 0x10
    NSMutableSet *_modifiedVariables;	// 24 = 0x18
    _CPLPrequeliteScopeBase *_base;	// 32 = 0x20
    CPLPrequeliteVariable *_flagsVar;	// 40 = 0x28
    CPLPrequeliteVariable *_disabledDateVar;	// 48 = 0x30
    CPLPrequeliteVariable *_deleteDateVar;	// 56 = 0x38
    CPLPrequeliteVariable *_libraryInfoVar;	// 64 = 0x40
    CPLPrequeliteVariable *_scopeChangeVar;	// 72 = 0x48
    CPLPrequeliteVariable *_lastLibraryInfoUpdateVar;	// 80 = 0x50
    CPLPrequeliteVariable *_transportScopeVar;	// 88 = 0x58
    _CPLPrequeliteScopeSyncState *_syncState;	// 96 = 0x60
    CPLPrequeliteVariable *_estimatedSizeVar;	// 104 = 0x68
    CPLPrequeliteVariable *_estimatedAssetCountVar;	// 112 = 0x70
    CPLPrequeliteVariable *_initialSyncDateVar;	// 120 = 0x78
    CPLPrequeliteTodoVar *_pushToTransportTodoVar;	// 128 = 0x80
    CPLPrequeliteTodoVar *_pullFromTransportTodoVar;	// 136 = 0x88
    CPLPrequeliteTodoVar *_clientNeedsToPullTodoVar;	// 144 = 0x90
    CPLPrequeliteTodoVar *_updateTransportTodoVar;	// 152 = 0x98
    CPLPrequeliteVariableGroup *_all;	// 160 = 0xa0
    CPLPrequeliteVariableGroup *_libraryStateGroup;	// 168 = 0xa8
    Class _transportGroupClass;	// 176 = 0xb0
    _Bool _noteEndOfResetIfNecessary;	// 184 = 0xb8
}

+ (id)_supportedScopeTypesWithOptions:(unsigned long long)arg1;	// IMP=0x0000000100017bf0
+ (_Bool)_scopeType:(long long)arg1 supportsClientSyncWithOptions:(unsigned long long)arg2;	// IMP=0x0000000100017a38
- (void).cxx_destruct;	// IMP=0x0000000100023f90
- (void)writeTransactionDidFail;	// IMP=0x0000000100023e34
- (void)writeTransactionDidSucceed;	// IMP=0x0000000100023db8
- (_Bool)bumpPullFromTransportExpirationIntervalWithError:(id *)arg1;	// IMP=0x0000000100023b60
- (id)filterForExcludedScopeIdentifiers:(id)arg1;	// IMP=0x0000000100023a04
- (id)filterForIncludedScopeIdentifiers:(id)arg1;	// IMP=0x0000000100023860
- (id)_injectionForFilter:(id)arg1;	// IMP=0x0000000100023730
- (void)_getLocalIndexes:(id *)arg1 cloudIndexes:(id *)arg2 forScopeIdentifiers:(id)arg3;	// IMP=0x0000000100023554
- (void)_noteEndOfResetIfNecessary;	// IMP=0x00000001000233e0
- (unsigned long long)estimatedAssetCountForScope:(id)arg1;	// IMP=0x0000000100023384
- (unsigned long long)estimatedSizeForScope:(id)arg1;	// IMP=0x0000000100023328
- (_Bool)storeEstimatedSize:(unsigned long long)arg1 estimatedAssetCount:(unsigned long long)arg2 forScope:(id)arg3 error:(id *)arg4;	// IMP=0x0000000100023218
- (_Bool)storeSupportedFeatureVersionInLastSync:(unsigned long long)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100023148
- (unsigned long long)supportedFeatureVersionInLastSyncForScope:(id)arg1;	// IMP=0x0000000100023098
- (id)lastDateOfCompletedPullFromTransportForScope:(id)arg1;	// IMP=0x0000000100023080
- (_Bool)storeLastDateOfClearedPushRepository:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100022fc8
- (id)lastDateOfClearedPushRepositoryForScope:(id)arg1;	// IMP=0x0000000100022f34
- (_Bool)allActiveScopesHasFinishedSyncs;	// IMP=0x0000000100022e20
- (_Bool)hasFinishedAFullSyncForScope:(id)arg1;	// IMP=0x0000000100022d7c
- (id)initialSyncDateForScope:(id)arg1;	// IMP=0x0000000100022d60
- (id)initialSyncAnchorForScope:(id)arg1;	// IMP=0x0000000100022ccc
- (_Bool)setInitialSyncAnchor:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100022c14
- (_Bool)setHasFetchedInitialSyncAnchor:(_Bool)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100022b44
- (_Bool)hasScopeFetchedInitialSyncAnchor:(id)arg1;	// IMP=0x0000000100022a94
- (_Bool)setClassNameOfRecordsForInitialQuery:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000229dc
- (id)classNameOfRecordsForInitialQueryForScope:(id)arg1;	// IMP=0x0000000100022948
- (_Bool)storeTransientSyncAnchor:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100022890
- (id)transientSyncAnchorForScope:(id)arg1;	// IMP=0x00000001000227fc
- (_Bool)discardStagedSyncAnchorWithScopeFilter:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000226c0
- (_Bool)discardStagedSyncAnchorForScope:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100022620
@property(readonly, nonatomic) _Bool hasStagedSyncAnchors;
- (_Bool)hasStagedSyncAnchorForScope:(id)arg1;	// IMP=0x0000000100022480
- (_Bool)commitSyncAnchorForScope:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100021fac
- (void)_markFirstSyncOfPrimaryAsSuccessfulWithScope:(id)arg1;	// IMP=0x0000000100021cc8
- (_Bool)resetSyncAnchorForScope:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100021b34
- (_Bool)setSyncAnchor:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x000000010002177c
- (id)syncAnchorForScope:(id)arg1 isCommitted:(_Bool *)arg2;	// IMP=0x0000000100021680
- (_Bool)setDidDropSomeRecordsForScope:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000215e8
- (_Bool)didDropSomeRecordsForScope:(id)arg1;	// IMP=0x0000000100021538
- (_Bool)storeDownloadTransportGroup:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100021480
- (id)downloadTransportGroupForScope:(id)arg1;	// IMP=0x00000001000213ec
- (_Bool)storeUploadTransportGroup:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100021334
- (id)uploadTransportGroupForScope:(id)arg1;	// IMP=0x00000001000212a0
- (_Bool)resetSyncStateForScope:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100021078
- (void)_discardCachedValuesForGroup:(id)arg1;	// IMP=0x0000000100020f58
- (_Bool)_storeTransportGroup:(id)arg1 inColumnVariable:(id)arg2 forScope:(id)arg3 error:(id *)arg4;	// IMP=0x0000000100020d1c
- (id)_transportGroupForColumnVariable:(id)arg1 forScope:(id)arg2;	// IMP=0x0000000100020c38
- (Class)_transportGroupClass;	// IMP=0x0000000100020ab8
- (id)lastScopeChangeUpdateDateForScope:(id)arg1;	// IMP=0x0000000100020a9c
- (_Bool)storeScopeChange:(id)arg1 forScope:(id)arg2 scopeChangeHasBeenUpdated:(_Bool *)arg3 error:(id *)arg4;	// IMP=0x0000000100020800
- (_Bool)_storeLibraryInfo:(id)arg1 forScope:(id)arg2 libraryInfoHasBeenUpdated:(_Bool *)arg3 error:(id *)arg4;	// IMP=0x00000001000202f0
- (id)scopeChangeForScope:(id)arg1;	// IMP=0x000000010001ffb4
- (id)_libraryInfoForScope:(id)arg1;	// IMP=0x000000010001ff24
- (_Bool)setTransportScope:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x000000010001ff04
- (id)transportScopeForScope:(id)arg1;	// IMP=0x000000010001fee8
- (_Bool)setScopeNeedsUpdateFromTransport:(id)arg1 error:(id *)arg2;	// IMP=0x000000010001fec4
- (id)_librarySateForScope:(id)arg1;	// IMP=0x000000010001fbe0
- (_Bool)setDeleteDate:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x000000010001fbc0
- (id)deleteDateForScope:(id)arg1;	// IMP=0x000000010001fba4
- (_Bool)setDisabledDate:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x000000010001fb84
- (id)disabledDateForScope:(id)arg1;	// IMP=0x000000010001fb68
- (_Bool)updateFlags:(id)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x000000010001f9c8
- (id)flagsForScope:(id)arg1;	// IMP=0x000000010001f93c
- (id)_valueForColumnVariable:(id)arg1 scope:(id)arg2;	// IMP=0x000000010001f6f4
- (_Bool)_storeValue:(id)arg1 forColumnVariable:(id)arg2 scope:(id)arg3 error:(id *)arg4;	// IMP=0x000000010001f510
- (void)_cacheValue:(id)arg1 forColumnVariable:(id)arg2 scope:(id)arg3;	// IMP=0x000000010001f448
- (_Bool)storeScopeListSyncAnchor:(id)arg1 error:(id *)arg2;	// IMP=0x000000010001f244
- (id)scopeListSyncAnchor;	// IMP=0x000000010001f22c
- (id)primaryScope;	// IMP=0x000000010001f1bc
- (id)validCloudIndexes;	// IMP=0x000000010001efa8
- (id)validLocalIndexes;	// IMP=0x000000010001ed94
- (id)scopeWithStableIndex:(long long)arg1;	// IMP=0x000000010001ed18
- (id)scopeWithCloudIndex:(long long)arg1;	// IMP=0x000000010001ec9c
- (id)scopeWithLocalIndex:(long long)arg1;	// IMP=0x000000010001ec20
- (id)scopeWithIdentifier:(id)arg1;	// IMP=0x000000010001eb98
- (id)_scopeWithQuery:(id)arg1;	// IMP=0x000000010001e9b0
- (_Bool)bumpStableIndexForScopeWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010001e858
- (_Bool)bumpCloudIndexForScopeWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010001e700
- (_Bool)bumpLocalIndexForScopeWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010001e5a8
- (long long)_bumpIndexWithError:(id *)arg1;	// IMP=0x000000010001e4e4
- (_Bool)setScopeType:(long long)arg1 forScope:(id)arg2 error:(id *)arg3;	// IMP=0x000000010001e29c
- (_Bool)deleteScopeWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010001e168
- (id)addScopeWithIdentifier:(id)arg1 scopeType:(long long)arg2 error:(id *)arg3;	// IMP=0x000000010001dfdc
- (_Bool)doesScopeNeedToUpdateTransport:(id)arg1;	// IMP=0x000000010001de68
- (_Bool)setScope:(id)arg1 hasCompletedTransportUpdate:(long long)arg2 error:(id *)arg3;	// IMP=0x000000010001de4c
- (long long)transportUpdateTaskForScope:(id)arg1;	// IMP=0x000000010001de34
- (_Bool)setScopeNeedsToUpdateTransport:(id)arg1 error:(id *)arg2;	// IMP=0x000000010001de18
- (_Bool)hasScopesNeedingToUpdateTransport;	// IMP=0x000000010001dd1c
- (id)enumeratorForScopesNeedingToUpdateTransport;	// IMP=0x000000010001db00
- (_Bool)doesScopeSupportToBePulledByClient:(id)arg1;	// IMP=0x000000010001da08
- (_Bool)doesScopeNeedToBePulledByClient:(id)arg1;	// IMP=0x000000010001d83c
- (_Bool)setScopeNeedsToBePulledByClient:(id)arg1 error:(id *)arg2;	// IMP=0x000000010001d820
- (_Bool)setScope:(id)arg1 hasCompletedClientNeedsToPullTask:(long long)arg2 error:(id *)arg3;	// IMP=0x000000010001d804
- (long long)clientNeedsToPullTaskForScope:(id)arg1;	// IMP=0x000000010001d7ec
- (id)enumeratorForScopesNeedingToBePulledByClientWithMaximumCount:(unsigned long long)arg1;	// IMP=0x000000010001d568
- (_Bool)doScopesNeedMetadataSync:(id)arg1;	// IMP=0x000000010001d370
- (_Bool)setPullFromTransportExpirationInterval:(double)arg1 scope:(id)arg2 error:(id *)arg3;	// IMP=0x000000010001d298
- (_Bool)doesScopeNeedToPullChangesFromTransport:(id)arg1;	// IMP=0x000000010001d10c
- (_Bool)setScope:(id)arg1 hasCompletedPullFromTransportTask:(long long)arg2 error:(id *)arg3;	// IMP=0x000000010001d0f0
- (long long)pullFromTransportTaskForScope:(id)arg1;	// IMP=0x000000010001d0d8
- (_Bool)setAllScopesHasChangesToPullFromTransportWithError:(id *)arg1;	// IMP=0x000000010001cfc4
- (_Bool)setScopeHasChangesToPullFromTransport:(id)arg1 error:(id *)arg2;	// IMP=0x000000010001cfa8
- (_Bool)hasScopesNeedingToPullChangesFromTransport;	// IMP=0x000000010001ce94
- (id)enumeratorForScopesNeedingToPullChangesFromTransport;	// IMP=0x000000010001cc54
- (_Bool)doesScopeNeedToPushChangesToTransport:(id)arg1;	// IMP=0x000000010001cacc
- (_Bool)setScope:(id)arg1 hasCompletedPushToTransportTask:(long long)arg2 error:(id *)arg3;	// IMP=0x000000010001cab0
- (long long)pushToTransportTaskForScope:(id)arg1;	// IMP=0x000000010001ca98
- (_Bool)setScopeHasChangesToPushToTransport:(id)arg1 error:(id *)arg2;	// IMP=0x000000010001ca7c
- (_Bool)hasScopesNeedingToPushChangesToTransport;	// IMP=0x000000010001c968
- (id)enumeratorForScopesNeedingToPushChangesToTransport;	// IMP=0x000000010001c704
- (_Bool)hasScopesNeedingToPushHighPriorityChangesToTransport;	// IMP=0x000000010001c5ec
- (id)enumeratorForScopesNeedingToPushHighPriorityChangesToTransport;	// IMP=0x000000010001c384
- (_Bool)forcePushToTransportForActiveScopesWithError:(id *)arg1;	// IMP=0x000000010001c1ac
- (_Bool)forceIdentifyUknownScopesWithError:(id *)arg1;	// IMP=0x000000010001bfc8
- (id)enumeratorForScopesNeedingUpdateFromTransport;	// IMP=0x000000010001bcf4
- (id)enumeratorForScopesIncludeInactive:(_Bool)arg1;	// IMP=0x000000010001b9e8
- (_Bool)_setScope:(id)arg1 hasCompletedTaskItem:(long long)arg2 task:(id)arg3 error:(id *)arg4;	// IMP=0x000000010001b854
- (id)_taskItemCompletionDateForScope:(id)arg1 task:(id)arg2;	// IMP=0x000000010001b788
- (long long)_taskItemForScope:(id)arg1 task:(id)arg2;	// IMP=0x000000010001b5fc
- (_Bool)_setScope:(id)arg1 hasTaskTodo:(id)arg2 error:(id *)arg3;	// IMP=0x000000010001b45c
- (id)statusDictionary;	// IMP=0x000000010001b450
- (id)recordsDesignation;	// IMP=0x000000010001b444
- (_Bool)upgradeScopesWithNewLibraryOptions:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x000000010001ac78
- (_Bool)upgradeStorageToVersion:(long long)arg1;	// IMP=0x0000000100019208
- (_Bool)_transferValueFromVariable:(id)arg1 type:(id)arg2 ofStorage:(id)arg3 toColumnVariable:(id)arg4 transformer:(CDUnknownBlockType)arg5;	// IMP=0x0000000100018bf8
- (_Bool)initializeStorage;	// IMP=0x0000000100018a0c
- (_Bool)_createInitialPrimarySyncScope;	// IMP=0x000000010001889c
- (_Bool)_addScope:(id)arg1 error:(id *)arg2;	// IMP=0x000000010001861c
- (double)_minimalPullFromTranportExpirationInterval;	// IMP=0x00000001000185c4
- (_Bool)_scopeTypeSupportsClientSync:(long long)arg1;	// IMP=0x0000000100018554
- (id)initWithAbstractObject:(id)arg1;	// IMP=0x0000000100017d0c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly) Class superclass;

@end

