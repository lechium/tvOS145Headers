//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "AVVoiceControllerRecordDelegate-Protocol.h"
#import "CSAudioDecoderDelegate-Protocol.h"
#import "CSAudioFileReaderDelegate-Protocol.h"
#import "CSAudioServerCrashEventProviding-Protocol.h"
#import "CSAudioSessionEventProviding-Protocol.h"

@class AVVoiceController, CSAudioFileReader, CSRemoteRecordClient, NSDictionary, NSHashTable, NSMutableDictionary, NSString;
@protocol CSAudioServerCrashEventProvidingDelegate, CSAudioSessionEventProvidingDelegate, OS_dispatch_queue;

@interface CSAudioRecorder : NSObject <AVVoiceControllerRecordDelegate, CSAudioDecoderDelegate, CSAudioFileReaderDelegate, CSAudioServerCrashEventProviding, CSAudioSessionEventProviding>
{
    AVVoiceController *_voiceController;	// 8 = 0x8
    struct OpaqueAudioConverter *_deinterleaver;	// 16 = 0x10
    struct AudioBufferList _interleavedABL;	// 24 = 0x18
    struct AudioBufferList *_pNonInterleavedABL;	// 48 = 0x30
    CSRemoteRecordClient *_remoteRecordClient;	// 56 = 0x38
    NSDictionary *_latestContext;	// 64 = 0x40
    _Bool _shouldUseRemoteRecord;	// 72 = 0x48
    NSMutableDictionary *_opusDecoders;	// 80 = 0x50
    CSAudioFileReader *_audioFileReader;	// 88 = 0x58
    unsigned long long _audioFilePathIndex;	// 96 = 0x60
    _Bool _waitingForDidStart;	// 104 = 0x68
    unsigned long long _pendingTwoShotVTToken;	// 112 = 0x70
    NSObject<OS_dispatch_queue> *_queue;	// 120 = 0x78
    NSObject<OS_dispatch_queue> *_voiceControllerCreationQueue;	// 128 = 0x80
    NSHashTable *_observers;	// 136 = 0x88
    id <CSAudioServerCrashEventProvidingDelegate> _crashEventDelegate;	// 144 = 0x90
    id <CSAudioSessionEventProvidingDelegate> _sessionEventDelegate;	// 152 = 0x98
}

+ (void)createSharedAudioSession;	// IMP=0x000000010005a95c
+ (unsigned long long)_convertDeactivateOption:(unsigned long long)arg1;	// IMP=0x000000010005a950
- (void).cxx_destruct;	// IMP=0x000000010005f220
@property(nonatomic) __weak id <CSAudioSessionEventProvidingDelegate> sessionEventDelegate; // @synthesize sessionEventDelegate=_sessionEventDelegate;
@property(nonatomic) __weak id <CSAudioServerCrashEventProvidingDelegate> crashEventDelegate; // @synthesize crashEventDelegate=_crashEventDelegate;
@property(retain, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *voiceControllerCreationQueue; // @synthesize voiceControllerCreationQueue=_voiceControllerCreationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (id)_getRecordSettingsWithRequest:(id)arg1;	// IMP=0x000000010005ee4c
- (void)audioFileReaderDidStopRecording:(id)arg1 forReason:(long long)arg2;	// IMP=0x000000010005ee38
- (void)audioFileReaderDidStartRecording:(id)arg1 successfully:(_Bool)arg2 error:(id)arg3;	// IMP=0x000000010005ed98
- (void)audioFileReaderBufferAvailable:(id)arg1 buffer:(id)arg2 atTime:(unsigned long long)arg3;	// IMP=0x000000010005ed14
- (_Bool)_needResetAudioInjectionIndex:(id)arg1;	// IMP=0x000000010005ec44
- (void)_createDeInterleaverIfNeeded;	// IMP=0x000000010005eac4
- (id)_deinterleaveBufferIfNeeded:(id)arg1 force:(_Bool)arg2;	// IMP=0x000000010005e84c
- (void)voiceControllerMediaServicesWereReset:(id)arg1;	// IMP=0x000000010005e7a8
- (void)voiceControllerMediaServicesWereLost:(id)arg1;	// IMP=0x000000010005e540
- (void)voiceControllerDidSetAudioSessionActive:(id)arg1 isActivated:(_Bool)arg2;	// IMP=0x000000010005e2dc
- (void)voiceControllerWillSetAudioSessionActive:(id)arg1 willActivate:(_Bool)arg2;	// IMP=0x000000010005e078
- (void)voiceControllerEndRecordInterruption:(id)arg1;	// IMP=0x000000010005de5c
- (void)voiceControllerBeginRecordInterruption:(id)arg1 withContext:(id)arg2;	// IMP=0x000000010005dc00
- (void)voiceControllerBeginRecordInterruption:(id)arg1;	// IMP=0x000000010005d9e4
- (void)voiceControllerEncoderErrorDidOccur:(id)arg1 error:(id)arg2;	// IMP=0x000000010005d74c
- (void)voiceControllerDidFinishAlertPlayback:(id)arg1 ofType:(int)arg2 error:(id)arg3;	// IMP=0x000000010005d4d8
- (void)voiceControllerRecordHardwareConfigurationDidChange:(id)arg1 toConfiguration:(int)arg2;	// IMP=0x000000010005d29c
- (void)voiceControllerStreamInvalidated:(id)arg1 forStream:(unsigned long long)arg2;	// IMP=0x000000010005d068
- (void)voiceControllerDidStopRecording:(id)arg1 forStream:(unsigned long long)arg2 forReason:(long long)arg3;	// IMP=0x000000010005cf20
- (void)voiceControllerAudioCallback:(id)arg1 forStream:(unsigned long long)arg2 buffer:(id)arg3;	// IMP=0x000000010005cd90
- (void)voiceControllerDidStartRecording:(id)arg1 forStream:(unsigned long long)arg2 successfully:(_Bool)arg3 error:(id)arg4;	// IMP=0x000000010005cbbc
- (void)_audioRecorderDidStopRecordingForReason:(long long)arg1 streamHandleID:(unsigned long long)arg2;	// IMP=0x000000010005ca74
- (void)_audioRecorderDidStartRecordingSuccessfully:(_Bool)arg1 streamHandleID:(unsigned long long)arg2 error:(id)arg3;	// IMP=0x000000010005c914
- (id)metrics;	// IMP=0x000000010005c904
- (float)averagePowerForChannel:(unsigned long long)arg1;	// IMP=0x000000010005c8fc
- (float)peakPowerForChannel:(unsigned long long)arg1;	// IMP=0x000000010005c8f4
- (void)updateMeters;	// IMP=0x000000010005c8f0
- (void)setMeteringEnabled:(_Bool)arg1;	// IMP=0x000000010005c8ec
- (unsigned long long)alertStartTime;	// IMP=0x000000010005c8dc
- (_Bool)playAlertSoundForType:(long long)arg1;	// IMP=0x000000010005c804
- (_Bool)playRecordStartingAlertAndResetEndpointerFromStream:(unsigned long long)arg1;	// IMP=0x000000010005c6fc
- (_Bool)setAlertSoundFromURL:(id)arg1 forType:(long long)arg2;	// IMP=0x000000010005c6ec
- (void)audioDecoderDidDecodePackets:(id)arg1 audioStreamHandleId:(unsigned long long)arg2 buffer:(id)arg3 remoteVAD:(id)arg4 timestamp:(unsigned long long)arg5 arrivalTimestampToAudioRecorder:(unsigned long long)arg6 wasBuffered:(_Bool)arg7 receivedNumChannels:(unsigned int)arg8;	// IMP=0x000000010005c464
- (id)_compensateChannelDataIfNeeded:(id)arg1 receivedNumChannels:(unsigned int)arg2;	// IMP=0x000000010005c264
- (void)_processAudioBuffer:(id)arg1 audioStreamHandleId:(unsigned long long)arg2 arrivalTimestampToAudioRecorder:(unsigned long long)arg3;	// IMP=0x000000010005b760
- (void)_processAudioChain:(id)arg1 audioStreamHandleId:(unsigned long long)arg2 remoteVAD:(id)arg3 atTime:(unsigned long long)arg4 arrivalTimestampToAudioRecorder:(unsigned long long)arg5 numberOfChannels:(int)arg6;	// IMP=0x000000010005b548
- (_Bool)_shouldUseRemoteBuiltInMic:(id)arg1;	// IMP=0x000000010005b4e0
- (_Bool)_shouldUseRemoteRecordForContext:(id)arg1;	// IMP=0x000000010005b4d8
- (id)_updateLanguageCodeForRemoteVTEIResult:(id)arg1;	// IMP=0x000000010005b368
- (id)voiceTriggerInfo;	// IMP=0x000000010005b29c
- (id)playbackRoute;	// IMP=0x000000010005b28c
- (void)configureAlertBehavior:(id)arg1 audioStreamHandleId:(unsigned long long)arg2;	// IMP=0x000000010005aef8
- (void)enableMiniDucking:(_Bool)arg1;	// IMP=0x000000010005adc8
@property(nonatomic) _Bool duckOthersOption;
- (void)enableSmartRoutingConsiderationForStream:(unsigned long long)arg1 enable:(_Bool)arg2;	// IMP=0x000000010005ab0c
- (_Bool)deactivateAudioSession:(unsigned long long)arg1 streamHandleId:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000010005a758
- (_Bool)deactivateAudioSession:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x000000010005a584
- (_Bool)activateAudioSessionWithReason:(unsigned long long)arg1 streamHandleId:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000010005a228
- (_Bool)setRecordMode:(long long)arg1 streamHandleId:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000100059fb8
- (void)_logResourceNotAvailableErrorIfNeeded:(id)arg1;	// IMP=0x0000000100059ec0
- (_Bool)_shouldLogResourceNotAvailableError;	// IMP=0x0000000100059e80
- (_Bool)prewarmAudioSessionWithStreamHandleId:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x0000000100059d10
- (_Bool)isNarrowBandWithStreamHandleId:(unsigned long long)arg1;	// IMP=0x0000000100059b78
- (id)recordSettingsWithStreamHandleId:(unsigned long long)arg1;	// IMP=0x0000000100059b68
- (float)recordingSampleRateWithStreamHandleId:(unsigned long long)arg1;	// IMP=0x00000001000599a0
- (id)audioDeviceInfoWithStreamHandleId:(unsigned long long)arg1;	// IMP=0x00000001000595e8
- (id)recordDeviceInfoWithStreamHandleId:(unsigned long long)arg1;	// IMP=0x000000010005944c
- (id)recordRouteWithStreamHandleId:(unsigned long long)arg1;	// IMP=0x00000001000593bc
- (_Bool)isRecordingWithStreamHandleId:(unsigned long long)arg1;	// IMP=0x0000000100059348
- (_Bool)isSessionCurrentlyActivated;	// IMP=0x00000001000591c8
- (_Bool)stopAudioStreamWithStreamHandleId:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x0000000100058f98
- (_Bool)startAudioStreamWithOption:(id)arg1 streamHandleId:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000100058c3c
- (_Bool)_startAudioStreamForAudioInjection;	// IMP=0x000000010005876c
- (_Bool)_shouldInjectAudio;	// IMP=0x0000000100058718
- (_Bool)prepareAudioStreamRecord:(id)arg1 streamHandleId:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00000001000583d4
- (_Bool)setCurrentContext:(id)arg1 streamHandleId:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000100058068
- (unsigned long long)setContext:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100057c38
- (id)_voiceControllerWithError:(id *)arg1;	// IMP=0x0000000100057884
- (void)_destroyVoiceController;	// IMP=0x00000001000577a4
- (void)dealloc;	// IMP=0x00000001000576b0
- (void)willDestroy;	// IMP=0x00000001000573b4
- (void)setAudioSessionEventDelegate:(id)arg1;	// IMP=0x0000000100057324
- (void)setAudioServerCrashEventDelegate:(id)arg1;	// IMP=0x0000000100057294
- (void)unregisterObserver:(id)arg1;	// IMP=0x00000001000571fc
- (void)registerObserver:(id)arg1;	// IMP=0x0000000100057164
- (id)initWithQueue:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100056e9c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

