//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "CSAudioStreamProvidingDelegate-Protocol.h"
#import "CSKeywordAnalyzerNDAPIScoreDelegate-Protocol.h"
#import "CSOpportuneSpeakEventMonitorDelegate-Protocol.h"
#import "CSSiriClientBehaviorMonitorDelegate-Protocol.h"
#import "CSVoiceTriggerEnabledMonitorDelegate-Protocol.h"

@class CSAsset, CSAudioProvider, CSAudioStream, CSKeywordAnalyzerNDAPI, CSOSTransaction, CSVoiceTriggerSecondPass, NSMutableArray, NSString;
@protocol CSVoiceTriggerDelegate, OS_dispatch_group, OS_dispatch_queue;

@interface CSVoiceTriggerFirstPassHearstAP : NSObject <CSAudioStreamProvidingDelegate, CSKeywordAnalyzerNDAPIScoreDelegate, CSVoiceTriggerEnabledMonitorDelegate, CSSiriClientBehaviorMonitorDelegate, CSOpportuneSpeakEventMonitorDelegate>
{
    _Bool _isAPHearstFirstPassEnabled;	// 8 = 0x8
    _Bool _isSiriClientListening;	// 9 = 0x9
    _Bool _isSecondPassRunning;	// 10 = 0xa
    _Bool _isVoiceTriggerEnabled;	// 11 = 0xb
    float _keywordThreshold;	// 12 = 0xc
    id <CSVoiceTriggerDelegate> _delegate;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_queue;	// 24 = 0x18
    CSAsset *_currentAsset;	// 32 = 0x20
    CSKeywordAnalyzerNDAPI *_keywordAnalyzerNDAPI;	// 40 = 0x28
    CSAudioStream *_audioStream;	// 48 = 0x30
    NSObject<OS_dispatch_group> *_recordingWillStartGroup;	// 56 = 0x38
    CSVoiceTriggerSecondPass *_voiceTriggerSecondPass;	// 64 = 0x40
    CSOSTransaction *_secondPassTransaction;	// 72 = 0x48
    unsigned long long _secondChanceHotTillMachTime;	// 80 = 0x50
    NSString *_deviceId;	// 88 = 0x58
    CSAudioProvider *_audioProvider;	// 96 = 0x60
    NSString *_opportuneSpeakAudioProviderUUID;	// 104 = 0x68
    NSMutableArray *_audioStreamHoldings;	// 112 = 0x70
}

- (void).cxx_destruct;	// IMP=0x000000010004e458
@property(nonatomic) _Bool isVoiceTriggerEnabled; // @synthesize isVoiceTriggerEnabled=_isVoiceTriggerEnabled;
@property(retain, nonatomic) NSMutableArray *audioStreamHoldings; // @synthesize audioStreamHoldings=_audioStreamHoldings;
@property(retain, nonatomic) NSString *opportuneSpeakAudioProviderUUID; // @synthesize opportuneSpeakAudioProviderUUID=_opportuneSpeakAudioProviderUUID;
@property(retain, nonatomic) CSAudioProvider *audioProvider; // @synthesize audioProvider=_audioProvider;
@property(retain, nonatomic) NSString *deviceId; // @synthesize deviceId=_deviceId;
@property(nonatomic) unsigned long long secondChanceHotTillMachTime; // @synthesize secondChanceHotTillMachTime=_secondChanceHotTillMachTime;
@property(nonatomic) _Bool isSecondPassRunning; // @synthesize isSecondPassRunning=_isSecondPassRunning;
@property(nonatomic) _Bool isSiriClientListening; // @synthesize isSiriClientListening=_isSiriClientListening;
@property(retain, nonatomic) CSOSTransaction *secondPassTransaction; // @synthesize secondPassTransaction=_secondPassTransaction;
@property(retain, nonatomic) CSVoiceTriggerSecondPass *voiceTriggerSecondPass; // @synthesize voiceTriggerSecondPass=_voiceTriggerSecondPass;
@property(nonatomic) float keywordThreshold; // @synthesize keywordThreshold=_keywordThreshold;
@property(nonatomic) _Bool isAPHearstFirstPassEnabled; // @synthesize isAPHearstFirstPassEnabled=_isAPHearstFirstPassEnabled;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *recordingWillStartGroup; // @synthesize recordingWillStartGroup=_recordingWillStartGroup;
@property(retain, nonatomic) CSAudioStream *audioStream; // @synthesize audioStream=_audioStream;
@property(retain, nonatomic) CSKeywordAnalyzerNDAPI *keywordAnalyzerNDAPI; // @synthesize keywordAnalyzerNDAPI=_keywordAnalyzerNDAPI;
@property(retain, nonatomic) CSAsset *currentAsset; // @synthesize currentAsset=_currentAsset;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) __weak id <CSVoiceTriggerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)siriClientBehaviorMonitor:(id)arg1 willStopStream:(id)arg2;	// IMP=0x000000010004e1f0
- (void)siriClientBehaviorMonitor:(id)arg1 willStartStreamWithContext:(id)arg2 option:(id)arg3;	// IMP=0x000000010004e1ec
- (void)siriClientBehaviorMonitor:(id)arg1 didStopStream:(id)arg2 withEventUUID:(id)arg3;	// IMP=0x000000010004e0d4
- (void)siriClientBehaviorMonitor:(id)arg1 didStartStreamWithContext:(id)arg2 successfully:(_Bool)arg3 option:(id)arg4 withEventUUID:(id)arg5;	// IMP=0x000000010004dec0
- (void)opportuneSpeakEventMonitor:(id)arg1 didStreamStateChanged:(_Bool)arg2;	// IMP=0x000000010004ddac
- (void)CSVoiceTriggerEnabledMonitor:(id)arg1 didReceiveEnabled:(_Bool)arg2;	// IMP=0x000000010004dd20
- (void)_transitHearstAPEnable:(_Bool)arg1;	// IMP=0x000000010004dce8
- (_Bool)_shouldHearstAPModeEnabled;	// IMP=0x000000010004db38
- (void)_teardownSecondPass;	// IMP=0x000000010004daf8
- (void)_createSecondPass;	// IMP=0x000000010004da00
- (void)_cancelLastAudioStreamHold;	// IMP=0x000000010004d954
- (void)_addAudioStreamHold:(id)arg1;	// IMP=0x000000010004d900
- (void)_handleSecondPassResult:(unsigned long long)arg1 voiceTriggerInfo:(id)arg2 deviceId:(id)arg3 secondChanceCandidate:(_Bool)arg4 error:(id)arg5;	// IMP=0x000000010004d634
- (void)keywordAnalyzerNDAPI:(id)arg1 hasResultAvailable:(id)arg2 forChannel:(unsigned long long)arg3;	// IMP=0x000000010004d014
- (void)audioStreamProvider:(id)arg1 audioChunkForTVAvailable:(id)arg2;	// IMP=0x000000010004d010
- (void)audioStreamProvider:(id)arg1 audioBufferAvailable:(id)arg2;	// IMP=0x000000010004cdc8
- (void)audioStreamProvider:(id)arg1 didStopStreamUnexpectly:(long long)arg2;	// IMP=0x000000010004cd28
- (void)_stopListening;	// IMP=0x000000010004cac0
- (void)_startListenWithAudioProviderUUID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010004c2d4
- (void)_reset;	// IMP=0x000000010004c2c4
- (void)_setAsset:(id)arg1;	// IMP=0x000000010004c1e8
- (void)setAsset:(id)arg1;	// IMP=0x000000010004c150
- (void)start;	// IMP=0x000000010004c060
- (id)init;	// IMP=0x000000010004bfb8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

