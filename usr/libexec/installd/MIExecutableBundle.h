//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "MIBundle.h"

@class MIBundleContainer, MICodeSigningInfo, MIEmbeddedWatchBundle, MIInstallationIdentity, MIPluginKitPluginBundle, NSArray, NSError, NSString, NSURL;

@interface MIExecutableBundle : MIBundle
{
    struct __CFBundle *_cfBundle;	// 8 = 0x8
    MIBundleContainer *_bundleContainer;	// 16 = 0x10
    unsigned long long _codeSignatureVerificationState;	// 24 = 0x18
    MIInstallationIdentity *_installationIdentity;	// 32 = 0x20
    NSError *_wk1AppBundleError;	// 40 = 0x28
    MIEmbeddedWatchBundle *_wk1AppBundle;	// 48 = 0x30
    NSError *_wk2AppBundleError;	// 56 = 0x38
    MIEmbeddedWatchBundle *_wk2AppBundle;	// 64 = 0x40
    MICodeSigningInfo *_codeSigningInfo;	// 72 = 0x48
    NSError *_codeSigningInfoError;	// 80 = 0x50
    NSString *_watchKitAppExecutableHash;	// 88 = 0x58
    MIPluginKitPluginBundle *_watchKitPlugin;	// 96 = 0x60
    unsigned long long _lsInstallType;	// 104 = 0x68
}

+ (id)bundlesInParentBundle:(id)arg1 subDirectory:(id)arg2 matchingPredicate:(CDUnknownBlockType)arg3 error:(id *)arg4;	// IMP=0x000000010002c4a4
- (void).cxx_destruct;	// IMP=0x0000000100033dfc
@property(nonatomic) unsigned long long lsInstallType; // @synthesize lsInstallType=_lsInstallType;
@property(retain, nonatomic) MIPluginKitPluginBundle *watchKitPlugin; // @synthesize watchKitPlugin=_watchKitPlugin;
@property(retain, nonatomic) NSString *watchKitAppExecutableHash; // @synthesize watchKitAppExecutableHash=_watchKitAppExecutableHash;
@property(retain, nonatomic) NSError *codeSigningInfoError; // @synthesize codeSigningInfoError=_codeSigningInfoError;
@property(retain, nonatomic) MICodeSigningInfo *codeSigningInfo; // @synthesize codeSigningInfo=_codeSigningInfo;
@property(retain, nonatomic) MIEmbeddedWatchBundle *wk2AppBundle; // @synthesize wk2AppBundle=_wk2AppBundle;
@property(retain, nonatomic) NSError *wk2AppBundleError; // @synthesize wk2AppBundleError=_wk2AppBundleError;
@property(retain, nonatomic) MIEmbeddedWatchBundle *wk1AppBundle; // @synthesize wk1AppBundle=_wk1AppBundle;
@property(retain, nonatomic) NSError *wk1AppBundleError; // @synthesize wk1AppBundleError=_wk1AppBundleError;
@property(copy, nonatomic) MIInstallationIdentity *installationIdentity; // @synthesize installationIdentity=_installationIdentity;
@property(readonly, nonatomic) unsigned long long codeSignatureVerificationState; // @synthesize codeSignatureVerificationState=_codeSignatureVerificationState;
@property(nonatomic) __weak MIBundleContainer *bundleContainer; // @synthesize bundleContainer=_bundleContainer;
- (_Bool)hasOnlyAllowedWatchKitAppInfoPlistKeysForWatchKitVersion:(unsigned char)arg1 error:(id *)arg2;	// IMP=0x0000000100033894
- (id)bundleSignatureVersionWithError:(id *)arg1;	// IMP=0x0000000100033758
- (id)watchKitV2AppBundleWithError:(id *)arg1;	// IMP=0x0000000100033060
- (id)_discoverWatchAppBundleAsPlaceholder:(_Bool)arg1 error:(id *)arg2;	// IMP=0x0000000100032980
- (id)watchKitV1AppBundleWithError:(id *)arg1;	// IMP=0x0000000100032630
- (id)watchKitAppBundleForWKVersionOrEarlier:(unsigned char)arg1 error:(id *)arg2;	// IMP=0x0000000100032460
- (unsigned char)watchKitVersionWithError:(id *)arg1;	// IMP=0x00000001000322bc
- (id)watchKitPluginWithError:(id *)arg1;	// IMP=0x00000001000320a4
@property(readonly, nonatomic) _Bool isWatchOnlyApp;
@property(readonly, nonatomic) _Bool watchKitAppRunsIndependentlyOfCompanion;
@property(readonly, nonatomic) _Bool minimumWatchOSVersionIsV6OrLater;
@property(readonly, nonatomic) _Bool minimumWatchOSVersionIsPreV6;
@property(readonly, copy, nonatomic) NSArray *counterpartIdentifiers; // @dynamic counterpartIdentifiers;
@property(readonly, copy, nonatomic) NSString *companionAppIdentifier;
@property(readonly, nonatomic) _Bool isExtensionlessWatchKitApp;
@property(readonly, nonatomic) _Bool isExtensionBasedWatchKitApp;
@property(readonly, nonatomic) _Bool hasWatchGlance;
@property(readonly, nonatomic) _Bool hasWatchCustomNotification;
- (_Bool)_hasResource:(id)arg1 withExtension:(id)arg2;	// IMP=0x00000001000316c8
- (_Bool)validateSinfWithError:(id *)arg1;	// IMP=0x00000001000314c0
- (id)fairPlaySinfInfoWithError:(id *)arg1;	// IMP=0x0000000100030e80
@property(readonly, nonatomic) _Bool hasSinf;
@property(readonly, nonatomic) _Bool needsSinf;
- (void)removeSinf;	// IMP=0x0000000100030c90
- (_Bool)replicateRootSinfWithError:(id *)arg1;	// IMP=0x0000000100030b8c
- (id)updateAndValidateSinf:(id)arg1 withRollback:(_Bool)arg2 error:(id *)arg3;	// IMP=0x00000001000308a8
- (id)updateAndValidateSinf:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100030894
- (void)bestEffortRollbackSinfData:(id)arg1;	// IMP=0x0000000100030740
- (_Bool)updateSinfWithData:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000305e4
@property(readonly, nonatomic) NSURL *rootSupfURL;
@property(readonly, nonatomic) NSURL *rootSuppURL;
@property(readonly, nonatomic) NSURL *rootSinfURL;
- (_Bool)validatePluginMetadataWithError:(id *)arg1;	// IMP=0x0000000100030070
- (_Bool)makeExecutableWithError:(id *)arg1;	// IMP=0x000000010002feb4
@property(readonly, copy, nonatomic) NSArray *vpnPluginIdentifiers;
- (id)_dataContainerCreatingIfNeeded:(_Bool)arg1 makeLive:(_Bool)arg2 checkIfNeeded:(_Bool)arg3 created:(_Bool *)arg4 error:(id *)arg5;	// IMP=0x000000010002f980
- (id)dataContainerCreatingIfNeeded:(_Bool)arg1 makeLive:(_Bool)arg2 created:(_Bool *)arg3 error:(id *)arg4;	// IMP=0x000000010002f968
- (id)dataContainerWithError:(id *)arg1;	// IMP=0x000000010002f948
@property(readonly, nonatomic) Class dataContainerClass;
@property(readonly, nonatomic) long long dataContainerContentClass;
- (_Bool)hasNoConflictsWithOtherInstalledEntitiesForSigningInfo:(id)arg1 error:(id *)arg2;	// IMP=0x000000010002f024
- (_Bool)_hasNoConflictWithSystemAppsForSigningInfo:(id)arg1 error:(id *)arg2;	// IMP=0x000000010002ea18
- (int)installEmbeddedProvisioningProfileWithProgress:(CDUnknownBlockType)arg1;	// IMP=0x000000010002e8bc
- (id)codeSigningInfoByValidatingResources:(_Bool)arg1 performingOnlineAuthorization:(_Bool)arg2 ignoringCachedSigningInfo:(_Bool)arg3 checkingTrustCacheIfApplicable:(_Bool)arg4 skippingProfileIDValidation:(_Bool)arg5 error:(id *)arg6;	// IMP=0x000000010002dbc0
- (id)_codeSigningInfoFromMCM;	// IMP=0x000000010002d9d0
- (_Bool)updateMCMWithCodeSigningInfoAsAdvanceCopy:(_Bool)arg1 withError:(id *)arg2;	// IMP=0x000000010002d5c4
- (_Bool)needsDataContainer;	// IMP=0x000000010002d2d8
- (_Bool)_hasNonContainerizingEntitlement:(id)arg1 checkSeatbeltProfiles:(_Bool)arg2;	// IMP=0x000000010002d0a8
- (_Bool)_isGrandfatheredNonContainerized:(id)arg1;	// IMP=0x000000010002cfc0
@property(readonly, nonatomic) unsigned int maxLinkedSDKVersion;
- (_Bool)makeAndSetNewInstallationIdentityWithError:(id *)arg1;	// IMP=0x000000010002ceec
- (_Bool)transferInstallationIdentityFromBundle:(id)arg1 error:(id *)arg2;	// IMP=0x000000010002cde8
- (id)installationIdentitySettingIfNotSet:(_Bool)arg1 withError:(id *)arg2;	// IMP=0x000000010002cd30
- (id)watchKitAppExecutableHashWithError:(id *)arg1;	// IMP=0x000000010002ca2c
- (void)setBundleParentDirectoryURL:(id)arg1;	// IMP=0x000000010002c930
- (id)lsInstallTypeWithError:(id *)arg1;	// IMP=0x000000010002c6ac
@property(readonly, nonatomic) struct __CFBundle *cfBundle; // @synthesize cfBundle=_cfBundle;
@property(readonly, nonatomic) NSURL *executableURL;
@property(readonly, copy, nonatomic) NSString *executableName;
- (id)initWithBundleInContainer:(id)arg1 withExtension:(id)arg2 error:(id *)arg3;	// IMP=0x000000010002c3d0
- (_Bool)_validateWithError:(id *)arg1;	// IMP=0x000000010002c0e4
- (void)dealloc;	// IMP=0x000000010002c08c

@end

