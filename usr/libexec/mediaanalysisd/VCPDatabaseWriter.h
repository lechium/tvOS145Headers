//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSString;
@protocol OS_dispatch_queue;

@interface VCPDatabaseWriter : NSObject
{
    NSString *_filepath;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_sqlSerialQueue;	// 16 = 0x10
    struct sqlite3 *_database;	// 24 = 0x18
    _Bool _transaction;	// 32 = 0x20
}

+ (id)initializationCommand:(int)arg1;	// IMP=0x0000000100015458
+ (id)databaseForPhotoLibrary:(id)arg1;	// IMP=0x0000000100015198
+ (id)databaseWithFilepath:(id)arg1;	// IMP=0x0000000100020ee0
- (void).cxx_destruct;	// IMP=0x0000000100016c4c
- (_Bool)exists;	// IMP=0x0000000100016b48
- (id)creationDate;	// IMP=0x0000000100016a84
- (unsigned long long)sizeBytes;	// IMP=0x00000001000169d4
- (void)flush;	// IMP=0x000000010001696c
- (int)commit;	// IMP=0x00000001000168d8
- (int)executeDatabaseBlock:(CDUnknownBlockType)arg1 fallbackBlock:(CDUnknownBlockType)arg2 write:(_Bool)arg3;	// IMP=0x0000000100016330
- (_Bool)shouldPropagateError:(int *)arg1 finalAttempt:(_Bool)arg2;	// IMP=0x0000000100016000
- (int)_setValue:(long long)arg1 forKey:(id)arg2;	// IMP=0x0000000100015e6c
- (int)_queryValue:(long long *)arg1 forKey:(id)arg2;	// IMP=0x0000000100015cc4
- (int)openDatabase;	// IMP=0x000000010001557c
- (int)getUserVersion:(int *)arg1;	// IMP=0x00000001000153d8
- (void)closeDatabase;	// IMP=0x0000000100015398
- (int)commitTransaction;	// IMP=0x00000001000152f4
- (int)beginTransaction;	// IMP=0x0000000100015248
- (void)dealloc;	// IMP=0x000000010001511c
- (id)initWithFilepath:(id)arg1;	// IMP=0x0000000100015054
- (int)removeChangeTokenForTaskID:(unsigned long long)arg1;	// IMP=0x0000000100017618
- (int)queryChangeToken:(id *)arg1 forTaskID:(unsigned long long)arg2;	// IMP=0x0000000100017290
- (int)updateChangeToken:(id)arg1 forTaskID:(unsigned long long)arg2;	// IMP=0x0000000100017014
- (int)setChangeToken:(id)arg1 forTaskID:(unsigned long long)arg2;	// IMP=0x0000000100016c7c
- (int)containsAsset:(id)arg1 result:(_Bool *)arg2;	// IMP=0x0000000100018330
- (int)updateDateModifiedForAsset:(id)arg1;	// IMP=0x0000000100018010
- (int)updateLocalIdentifer:(id)arg1 to:(id)arg2;	// IMP=0x0000000100017ce8
- (int)updateFingerprint:(id)arg1 forAsset:(id)arg2;	// IMP=0x000000010001796c
- (int)setDeletePendingFlag:(_Bool)arg1 localIdentifier:(id)arg2;	// IMP=0x0000000100017704
- (int)deleteAnalysisForAsset:(id)arg1;	// IMP=0x000000010001b9b4
- (int)analysisForAsset:(id)arg1 analysis:(id *)arg2;	// IMP=0x000000010001b7c0
- (int)_queryResultsForAssetId:(long long)arg1 analysis:(id)arg2;	// IMP=0x000000010001b33c
- (int)_queryPropertiesForAsset:(id)arg1 assetId:(long long *)arg2 analysis:(id *)arg3;	// IMP=0x000000010001ac20
- (int)bumpAnalysisVersionForAsset:(id)arg1;	// IMP=0x000000010001a9a8
- (int)storeAnalysisForAsset:(id)arg1 analysis:(id)arg2;	// IMP=0x000000010001a3d4
- (int)_updateAnalysis:(id)arg1 withAnalysis:(id)arg2 forAsset:(id)arg3 withAssetId:(long long)arg4;	// IMP=0x00000001000198d8
- (int)_updateProperties:(id)arg1 forAssetId:(long long)arg2;	// IMP=0x000000010001962c
- (int)_deleteResult:(id)arg1 forAssetId:(long long)arg2;	// IMP=0x00000001000194a4
- (int)_storeAnalysis:(id)arg1 forLocalIdentifier:(id)arg2;	// IMP=0x00000001000191c4
- (int)_storeResult:(id)arg1 withKey:(id)arg2 forAssetId:(long long)arg3;	// IMP=0x0000000100018e68
- (int)_storeProperties:(id)arg1 forLocalIdentifier:(id)arg2 assetId:(long long *)arg3;	// IMP=0x00000001000189ec
- (int)_deleteAsset:(id)arg1;	// IMP=0x00000001000188d8
- (long long)compareExistingAnalysis:(id)arg1 toNewAnalysis:(id)arg2 forAsset:(id)arg3;	// IMP=0x0000000100018544
- (int)getBlacklistedAssetsWithCount:(int)arg1 localIdentifiers:(id *)arg2;	// IMP=0x000000010001c968
- (int)getBlacklistSizeForThreshold:(int)arg1 size:(unsigned long long *)arg2;	// IMP=0x000000010001c84c
- (int)removeLocalIdentifierFromBlacklist:(id)arg1;	// IMP=0x000000010001c6a4
- (int)decrementBlacklistCountForLocalIdentifier:(id)arg1;	// IMP=0x000000010001c388
- (int)incrementBlacklistCountForMemory:(id)arg1;	// IMP=0x000000010001c36c
- (int)addAssetToBlacklist:(id)arg1;	// IMP=0x000000010001c0b4
- (int)getBlacklistCountForLocalIdentifier:(id)arg1;	// IMP=0x000000010001bf98
- (int)_getBlacklistCountForLocalIdentifier:(id)arg1 count:(int *)arg2;	// IMP=0x000000010001be48
- (int)ageOutBlacklistBefore:(id)arg1 count:(int *)arg2;	// IMP=0x000000010001bc78
- (int)_getBlacklistExpiredCount:(id)arg1 count:(int *)arg2;	// IMP=0x000000010001bb58
- (int)hardFailAllRunningProcessingStatusForTaskID:(unsigned long long)arg1;	// IMP=0x000000010001f470
- (int)updateUnknownProcessingStatusWithProcessingStatus:(unsigned long long)arg1 forLocalIdentifier:(id)arg2 andTaskID:(unsigned long long)arg3;	// IMP=0x000000010001f258
- (int)updateProcessingStatus:(unsigned long long)arg1 forLocalIdentifier:(id)arg2 andTaskID:(unsigned long long)arg3;	// IMP=0x000000010001f058
- (int)removeAllProcessingStatusForTaskID:(unsigned long long)arg1;	// IMP=0x000000010001ef6c
- (int)removeProcessingStatusForLocalIdentifier:(id)arg1 andTaskID:(unsigned long long)arg2;	// IMP=0x000000010001eda4
- (int)decrementAttemptsForLocaldentifier:(id)arg1 andTaskID:(unsigned long long)arg2;	// IMP=0x000000010001ed80
- (int)decrementAttemptsForLocaldentifier:(id)arg1 withPreviousProcessingStatus:(unsigned long long)arg2 andTaskID:(unsigned long long)arg3;	// IMP=0x000000010001eb34
- (int)incrementAttemptsForLocaldentifier:(id)arg1 andTaskID:(unsigned long long)arg2;	// IMP=0x000000010001e82c
- (int)fetchLocalIdentifiers:(id *)arg1 withTaskID:(unsigned long long)arg2 andProcessingStatus:(unsigned long long)arg3;	// IMP=0x000000010001e594
- (int)fetchLocalIdentifiers:(id *)arg1 withProcessingStatus:(unsigned long long)arg2 andTaskID:(unsigned long long)arg3 andAttempts:(int)arg4 andFetchLimit:(unsigned long long)arg5;	// IMP=0x000000010001e2bc
- (int)fetchLocalIdentifiersEligibleForRetry:(id *)arg1 withTaskID:(unsigned long long)arg2 andFetchLimit:(unsigned long long)arg3;	// IMP=0x000000010001df38
- (int)fetchEligibleToRetryLocalIdentifiers:(id *)arg1 withProcessingStatus:(unsigned long long)arg2 andTaskID:(unsigned long long)arg3 andFetchLimit:(unsigned long long)arg4;	// IMP=0x000000010001db94
- (unsigned long long)queryEligibleToRetryAssetCountWithProcessingStatus:(unsigned long long)arg1 andTaskID:(unsigned long long)arg2;	// IMP=0x000000010001d8fc
- (unsigned long long)queryEligibleToRetryAssetCountWithTaskID:(unsigned long long)arg1;	// IMP=0x000000010001d680
- (int)queryProcessingStatus:(unsigned long long *)arg1 andAttempts:(int *)arg2 andRevisitDate:(id *)arg3 forLocalIdentifier:(id)arg4 andTaskID:(unsigned long long)arg5;	// IMP=0x000000010001d334
- (int)queryAttemptsForLocalIdentifier:(id)arg1 andTaskID:(unsigned long long)arg2;	// IMP=0x000000010001d0e4
- (int)queryAssetCountForTaskID:(unsigned long long)arg1 withStatus:(unsigned long long)arg2 andAttempts:(int)arg3;	// IMP=0x000000010001cf4c
- (int)queryAssetCountForTaskID:(unsigned long long)arg1 withStatus:(unsigned long long)arg2;	// IMP=0x000000010001cdd0
- (int)queryAssetCountForTaskID:(unsigned long long)arg1;	// IMP=0x000000010001cc6c
- (unsigned long long)getAssetCountMatchingStatsFlags:(unsigned long long)arg1 andAnalysisTypes:(unsigned long long)arg2;	// IMP=0x0000000100020d38
- (unsigned long long)getAssetCountMatchingAllFlags:(unsigned long long)arg1 andAnyFlags:(unsigned long long)arg2;	// IMP=0x0000000100020ba8
- (unsigned long long)getAssetCountMatchingAllFlags:(unsigned long long)arg1;	// IMP=0x0000000100020a30
- (int)storeStatsFlags:(unsigned long long)arg1 forLocalIdentifier:(id)arg2;	// IMP=0x0000000100020854
- (int)setValue:(long long)arg1 forKey:(id)arg2;	// IMP=0x000000010002075c
- (long long)valueForKey:(id)arg1;	// IMP=0x000000010002062c
- (int)loadAllKeyValuePairs:(id)arg1;	// IMP=0x0000000100020308
- (int)queryAnalysisResultWithType:(unsigned long long)arg1 forAsset:(id)arg2 result:(id *)arg3;	// IMP=0x0000000100020044
- (int)queryHeadersForAssets:(id)arg1 analyses:(id)arg2;	// IMP=0x000000010001fae4
- (int)parseHeader:(struct sqlite3_stmt *)arg1 startColumn:(int)arg2 analysis:(id)arg3;	// IMP=0x000000010001f5c8
- (unsigned long long)analysisRecordsModifiedSinceDate:(id)arg1;	// IMP=0x0000000100021190
- (int)flushWAL;	// IMP=0x000000010002107c
- (int)restoreAnalysis:(id)arg1 forLocalIdentifier:(id)arg2;	// IMP=0x0000000100020f4c

@end

