//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "ML3MediaLibraryWriterDelegate-Protocol.h"
#import "ML3MusicLibraryDelegate-Protocol.h"
#import "MLDDiagnosticCollection-Protocol.h"
#import "MLMediaLibraryServiceProtocol-Protocol.h"
#import "NSXPCConnectionDelegate-Protocol.h"
#import "NSXPCListenerDelegate-Protocol.h"

@class ML3DatabaseImportManager, ML3MediaLibraryWriter, MLDCacheDeleteController, MLDDatabaseValidationController, NSMutableArray, NSMutableDictionary, NSOperationQueue, NSString, NSTimer;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface MLDMediaLibraryService : NSObject <NSXPCConnectionDelegate, NSXPCListenerDelegate, ML3MediaLibraryWriterDelegate, ML3MusicLibraryDelegate, MLMediaLibraryServiceProtocol, MLDDiagnosticCollection>
{
    NSObject<OS_dispatch_queue> *_serialQueue;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_spotlightIndexQueue;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_writerBeginTransactionQueue;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_writerUpdateQueue;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_callbackQueue;	// 40 = 0x28
    NSMutableDictionary *_xpcListeners;	// 48 = 0x30
    NSMutableDictionary *_xpcClients;	// 56 = 0x38
    ML3MediaLibraryWriter *_writer;	// 64 = 0x40
    ML3DatabaseImportManager *_importManager;	// 72 = 0x48
    MLDCacheDeleteController *_cacheDeleteController;	// 80 = 0x50
    MLDDatabaseValidationController *_validationController;	// 88 = 0x58
    NSOperationQueue *_maintenanceTasksOperationQueue;	// 96 = 0x60
    NSOperationQueue *_databaseRecoveryOperationQueue;	// 104 = 0x68
    NSMutableArray *_databaseRecoveryCompletionHandlers;	// 112 = 0x70
    NSObject<OS_dispatch_source> *_signalDispatchSource;	// 120 = 0x78
    NSObject<OS_dispatch_source> *_spotlightIndexCoalescingTimer;	// 128 = 0x80
    NSTimer *_idleTimer;	// 136 = 0x88
    NSMutableDictionary *_mediaLibraries;	// 144 = 0x90
    NSString *_deviceSharedLibraryPath;	// 152 = 0x98
    NSMutableDictionary *_transactionInfoForID;	// 160 = 0xa0
    unsigned long long _stateHandle;	// 168 = 0xa8
    _Bool _databaseLocked;	// 176 = 0xb0
    long long _currentLockReason;	// 184 = 0xb8
}

+ (id)sharedInstance;	// IMP=0x00000001000085e4
- (void).cxx_destruct;	// IMP=0x0000000100012ec8
- (void)faultForQuery:(id)arg1 fromClientBundleID:(id)arg2 onTrustError:(id)arg3;	// IMP=0x0000000100012968
- (_Bool)_isMediaPath:(id)arg1 selector:(SEL)arg2 resolvedPath:(id *)arg3;	// IMP=0x000000010001250c
- (_Bool)_platformSupportsSpotlightIndexing;	// IMP=0x0000000100012504
- (void)_unregisterServiceOriginatedTransactionWithConnection:(id)arg1;	// IMP=0x000000010001245c
- (void)_validateDatabaseAtPath:(id)arg1 byTruncatingFirst:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000121d4
- (_Bool)_validateTransactionIdentifier:(id)arg1 forClient:(id)arg2;	// IMP=0x0000000100011e60
- (void)_unregisterTransactionInfoForIdentifier:(id)arg1;	// IMP=0x0000000100011cc8
- (void)_registerTransactionInfo:(id)arg1 forIdentitifer:(id)arg2;	// IMP=0x0000000100011b34
- (void)_performMaintenanceOnDatabaseAtPath:(id)arg1 withActivity:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100011954
- (void)_stopIdleTimer;	// IMP=0x00000001000118c0
- (void)_resetIdleTimer;	// IMP=0x0000000100011804
- (void)_idleTimerFired:(id)arg1;	// IMP=0x00000001000116ec
- (void)_startIdleTimer;	// IMP=0x0000000100011594
- (void)_tearDownLibraryDidChangeNotifications;	// IMP=0x00000001000114bc
- (void)_handleLibraryDidChangeNotification:(id)arg1;	// IMP=0x0000000100010ec4
- (void)_registerForLibraryDidChangeNotifications;	// IMP=0x0000000100010ddc
- (void)_writeDiagnosticToDisk:(id)arg1;	// IMP=0x0000000100010bc4
- (void)_performDiagnosticWithReason:(id)arg1;	// IMP=0x0000000100010a40
- (void)_handleDebugSignal;	// IMP=0x00000001000109b8
- (void)_tearDownSignalHandler;	// IMP=0x00000001000109b0
- (void)_setupSignalHandler;	// IMP=0x0000000100010844
- (id)_clientForConnection:(id)arg1;	// IMP=0x0000000100010628
- (id)_currentXPCClient;	// IMP=0x00000001000105a4
- (void)_handleXPCDisconnect:(id)arg1;	// IMP=0x0000000100010334
- (id)_deviceSharedLibraryPath;	// IMP=0x00000001000102d4
- (id)_allMediaLibraries;	// IMP=0x00000001000101bc
- (id)_mediaLibraryForPath:(id)arg1;	// IMP=0x000000010000ff20
- (long long)_MLDSupportedServiceForXPCListener:(id)arg1;	// IMP=0x000000010000fd74
- (id)_XPCListenerForService:(long long)arg1;	// IMP=0x000000010000f974
- (void)_setupCacheDeleteController;	// IMP=0x000000010000f8f8
- (void)_setupActivityHandlers;	// IMP=0x000000010000f7ec
- (void)_setupNotifyEventHandlers;	// IMP=0x000000010000f738
- (void)_reconnectLibraries:(id)arg1;	// IMP=0x000000010000f4f4
- (void)_disconnectLibraries:(id)arg1;	// IMP=0x000000010000f290
@property(nonatomic) long long currentLockReason; // @synthesize currentLockReason=_currentLockReason;
@property(nonatomic, getter=isDatabaseLocked) _Bool databaseLocked; // @synthesize databaseLocked=_databaseLocked;
- (void)start;	// IMP=0x000000010000ef78
- (void)collectDiagnostic:(id)arg1;	// IMP=0x000000010000eba0
- (void)mediaLibraryWriter:(id)arg1 terminatedTransaction:(id)arg2 withError:(id)arg3;	// IMP=0x000000010000ea94
- (void)library:(id)arg1 didRollbackDatabaseTransactionWithConnection:(id)arg2;	// IMP=0x000000010000ea84
- (void)library:(id)arg1 didCommitDatabaseTransactionWithConnection:(id)arg2;	// IMP=0x000000010000ea74
- (void)library:(id)arg1 didBeginDatabaseTransactionWithConnection:(id)arg2;	// IMP=0x000000010000e978
- (_Bool)_shouldAcceptConnectionForMediaLibraryService:(id)arg1;	// IMP=0x000000010000e2bc
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x000000010000e080
- (void)getClientImportServiceListenerEndpointWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010000df10
- (void)getMediaLibraryResourcesServiceListenerEndpointWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010000dda0
- (void)performMaintenanceTasksForDatabaseAtPath:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000010000dc90
- (void)updateSpotlightIndexMetadataForItemsWithIdentifiers:(id)arg1 bundleID:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x000000010000d7a0
- (void)updateSpotlightIndexForBundleID:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010000d788
- (void)getLanguageResourcesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010000d5a4
- (void)unlockDatabaseWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010000d1ac
- (void)lockDatabaseForReason:(long long)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010000cbd0
- (void)cancelImportOperation:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000010000ca80
- (void)performImport:(id)arg1 fromSource:(unsigned long long)arg2 withUUID:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000010000c3e4
- (void)setOptions:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000010000c13c
- (void)performDatabaseOperation:(unsigned long long)arg1 withAttributes:(id)arg2 options:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000010000b774
- (_Bool)endTransaction:(id)arg1 shouldCommit:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000010000b638
- (void)endTransaction:(id)arg1 shouldCommit:(_Bool)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000010000b4c4
- (void)executeQuery:(id)arg1 withParameters:(id)arg2 options:(id)arg3 onTransaction:(id)arg4 withCompletionHandler:(CDUnknownBlockType)arg5;	// IMP=0x000000010000af70
- (void)executeUpdate:(id)arg1 withParameters:(id)arg2 onTransaction:(id)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000010000ab48
- (id)beginTransactionForDatabaseAtPath:(id)arg1 withPriorityLevel:(unsigned long long)arg2 options:(unsigned long long)arg3 error:(id *)arg4;	// IMP=0x000000010000a86c
- (void)beginTransactionForDatabaseAtPath:(id)arg1 withPriorityLevel:(unsigned long long)arg2 options:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100009e0c
- (void)recreateDatabaseAtPath:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100009bd0
- (void)performDiagnosticWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100009a0c
- (void)checkIntegrityOfDatabaseAtPath:(id)arg1 repairFaults:(_Bool)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100009558
- (void)attemptDatabaseFileRecoveryAtPath:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100008df8
- (void)validateDatabaseAtPath:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100008c14
- (void)dealloc;	// IMP=0x0000000100008ac4
- (id)_init;	// IMP=0x00000001000086ac
- (id)init;	// IMP=0x000000010000865c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

