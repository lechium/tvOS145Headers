//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

@class NSArray, NSObject, RBSProcessState;

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AOAHypothesis;

struct AlishaConfigProvider;

struct AlishaManager;

struct AlishaPassthroughParameters {
    _Bool isPassthroughSession;
    _Bool bypassBluetoothTimesync;
    _Bool anchorSimulation;
    struct optional<rose::alisha::BluetoothEvent> lastBluetoothClockSyncEvent;
    struct optional<unsigned int> passthroughUwbSessionId;
    optional_78373086 passthroughUwbTime0;
};

struct AlishaSession;

struct AlishaSubsystem;

struct AnalyticsManager;

struct AoARad {
    float _field1;
    float _field2;
};

struct AuthorizationState {
    long long _field1;
    struct optional<double> _field2;
};

struct BluetoothEvent {
    int eventType;
    int timebase;
    struct optional<std::__1::chrono::duration<unsigned long long, std::__1::ratio<3125, 10000000>>> bluetoothTicks;
    struct optional<std::__1::chrono::duration<unsigned long long, std::__1::ratio<1, 24000000>>> gtbTicks;
    double monotonicTimeSec;
};

struct Capabilities {
    struct vector<unsigned short, std::__1::allocator<unsigned short>> uwbConfigIds;
    unsigned char slotBitmask;
    unsigned int syncCodeIndexBitmask;
    unsigned char rfChannelBitmask;
    unsigned char hopConfigBitmask;
    vector_aab22ae2 pulseShapeCombos;
};

struct CarKeyTimeoutManager;

struct Coder;

struct ConnectionEventTriggerDescriptor {
    unsigned int _field1;
};

struct DaisyChainServiceRequest;

struct FilteredSolution {
    double _field1;
    unsigned long long _field2;
    struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    int _field16;
};

struct GRSession;

struct HealthMonitor;

struct HostConfig {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
};

struct Internals {
    unsigned long long _field1;
    _Bool _field2;
    struct optional<double> _field3;
    struct optional<double> _field4;
};

struct Logger;

struct NICachedBluetoothEvent;

struct NIServerDataResponse {
    id _field1;
    id _field2;
};

struct NIServerHandoffPerSessionCAManager {
    struct map<int, double, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, double>>> fTimeSpentInSecondsRangingWithkDevices;
    struct map<unsigned long long, NIServerHandoffCoreAnalytics::NIServerHandoffPerDeviceCAManager, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, NIServerHandoffCoreAnalytics::NIServerHandoffPerDeviceCAManager>>> fHandoffCADeviceManagerMap;
    NSArray *fRegions;
    double fSessionStartTime;
    double fSessionDuration;
    double fResidualEnergyContributionsFromAllObjects;
    double fPrevTimerValueAtObjectAddRemove;
    double fEnergyExpended;
    struct optional<int> fNominalRangingIntervalMilliseconds;
};

struct PRConfigurationManager;

struct PRNearbyInteractionClientInfo {
    id _field1;
    int _field2;
};

struct PRRangingManagerClient;

struct PRUWBDeviceCapabilities {
    _Bool _field1;
    _Bool _field2;
};

struct PRUnifiedAppState {
    RBSProcessState *processState;
    int appState;
};

struct PRVoucherWrapper {
    NSObject *voucher;
};

struct ParameterNegotiator;

struct RangeEnableParameters {
    struct optional<unsigned char> _field1;
    struct optional<unsigned char> _field2;
    struct optional<unsigned char> _field3;
    struct optional<unsigned char> _field4;
    struct optional<unsigned char> _field5;
    struct optional<unsigned char> _field6;
    struct optional<unsigned char> _field7;
    struct optional<unsigned char> _field8;
    struct optional<unsigned char> _field9;
    struct optional<unsigned char> _field10;
    struct optional<unsigned short> _field11;
    optional_78373086 _field12;
    struct optional<unsigned int> _field13;
    struct optional<unsigned char> _field14;
    struct optional<unsigned char> _field15;
    struct optional<unsigned char> _field16;
    struct optional<unsigned char> _field17;
    struct optional<unsigned char> _field18;
    struct optional<short> _field19;
    struct optional<unsigned short> _field20;
    optional_78373086 _field21;
    struct optional<unsigned short> _field22;
    struct optional<unsigned short> _field23;
    struct optional<unsigned char> _field24;
    struct optional<unsigned char> _field25;
    optional_78373086 _field26;
    struct optional<unsigned char> _field27;
    struct optional<unsigned char> _field28;
    struct optional<unsigned char> _field29;
    struct optional<unsigned char> _field30;
    struct optional<unsigned short> _field31;
    struct optional<unsigned char> _field32;
    struct optional<std::__1::array<unsigned char, 16>> _field33;
    optional_78373086 _field34;
    struct optional<rose::GR::HostConfig> _field35;
    struct {
        struct optional<unsigned char> _field1;
        struct optional<unsigned int> _field2;
        struct optional<unsigned char> _field3;
        struct optional<unsigned char> _field4;
        struct optional<unsigned short> _field5;
        struct optional<unsigned short> _field6;
        struct optional<unsigned char> _field7;
        struct optional<unsigned char> _field8;
        struct optional<unsigned char> _field9;
        struct optional<unsigned char> _field10;
        struct optional<unsigned int> _field11;
        struct optional<unsigned int> _field12;
        struct optional<unsigned char> _field13;
        struct optional<unsigned char> _field14;
        struct optional<unsigned char> _field15;
    } _field36;
};

struct RangeResult {
    struct optional<unsigned char> _field1;
    _Bool _field2;
    struct optional<double> _field3;
    int _field4;
    double _field5;
    unsigned short _field6;
    unsigned long long _field7;
    struct vector<double, std::__1::allocator<double>> _field8;
    struct RangeResultEvent _field9;
};

struct RangeResultEvent {
    unsigned short _field1;
    unsigned short _field2;
    unsigned char _field3;
    double _field4;
    unsigned short _field5;
    unsigned char _field6;
    struct array<unsigned char, 8> _field7;
    double _field8;
    struct vector<Rose::AOAHypothesis, std::__1::allocator<Rose::AOAHypothesis>> _field9;
    double _field10;
    double _field11;
    struct optional<double> _field12;
    struct optional<double> _field13;
    struct optional<double> _field14;
    double _field15;
    double _field16;
    struct optional<double> _field17;
    struct optional<double> _field18;
    unsigned short _field19;
    unsigned int _field20;
    double _field21;
    double _field22;
    unsigned char _field23;
    struct optional<double> _field24;
    struct optional<double> _field25;
    struct optional<double> _field26;
    unsigned char _field27;
    unsigned short _field28;
    unsigned short _field29;
    unsigned short _field30;
    struct optional<double> _field31;
    struct optional<double> _field32;
};

struct RangingBlockSummary {
    unsigned short _field1;
    unsigned short _field2;
    unsigned int _field3;
    unsigned long long _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned int _field7;
    unsigned short _field8;
    unsigned short _field9;
    unsigned char _field10;
    unsigned char _field11;
    struct vector<rose::alisha::hsi::RxSkipReason, std::__1::allocator<rose::alisha::hsi::RxSkipReason>> _field12;
    unsigned char _field13;
    unsigned short _field14;
    unsigned char _field15;
    struct vector<rose::alisha::hsi::RangingBlockSummary::ResponderInfo, std::__1::allocator<rose::alisha::hsi::RangingBlockSummary::ResponderInfo>> _field16;
};

struct Region {
    basic_string_90719d97 _field1;
    float _field2;
    int _field3;
};

struct RegionMonitor;

struct RemoteSessionData {
    double _field1;
    unsigned short _field2;
    unsigned long long _field3;
    struct SessionState _field4;
};

struct RequestConstructionDebugParams {
    _Bool _field1;
    struct optional<unsigned char> _field2;
    _Bool _field3;
    struct optional<unsigned int> _field4;
    struct optional<unsigned int> _field5;
    _Bool _field6;
    _Bool _field7;
};

struct ResponderInfo;

struct ResponderSuperframeStats {
    double _field1;
    unsigned short _field2;
    struct SlaveSFCompleteEvent _field3;
    struct optional<double> _field4;
};

struct Result<rose::RoseServiceRequest> {
    int _field1;
    struct optional<rose::RoseServiceRequest> _field2;
};

struct RoseBaseSession;

struct RoseDeviceDescriptor {
    int type;
    struct optional<std::__1::array<unsigned char, 16>> uuid;
    struct optional<std::__1::array<unsigned char, 8>> rose_mac_address;
    struct optional<std::__1::array<unsigned char, 6>> bt_adv_address;
};

struct RoseServiceRequest {
    unsigned char _field1;
    int _field2;
    optional_70f095c2 _field3;
    int _field4;
    int _field5;
    int _field6;
    struct RangeEnableParameters _field7;
    struct vector<rose::DaisyChainServiceRequest, std::__1::allocator<rose::DaisyChainServiceRequest>> _field8;
};

struct RoseSolution {
    double _field1;
    struct optional<double> _field2;
    int _field3;
    unsigned short _field4;
    unsigned long long _field5;
    struct optional<rose::RangeResult> _field6;
    struct optional<RoseSensorFusion::FilteredSolution> _field7;
    struct optional<rose::ResponderSuperframeStats> _field8;
    struct optional<RoseSensorFusion::Internals> _field9;
};

struct RoseStartRangingOptions {
    optional_70f095c2 _field1;
    unsigned long long _field2;
    unsigned int _field3;
    int _field4;
    struct optional<rose::ConnectionEventTriggerDescriptor> _field5;
};

struct RoseSystemAssertion;

struct ServiceRequestStatusUpdate {
    unsigned short _field1;
    int _field2;
    int _field3;
};

struct Session;

struct SessionStartNotification {
    int _field1;
    unsigned short _field2;
    optional_78373086 _field3;
    double _field4;
    struct optional<double> _field5;
};

struct SessionState {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3[14];
};

struct SlaveSFCompleteEvent {
    unsigned short _field1;
    unsigned short _field2;
    unsigned char _field3;
    double _field4;
    struct array<unsigned char, 8> _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned char _field9;
    unsigned char _field10;
    unsigned char _field11;
    unsigned char _field12;
    unsigned char _field13;
    unsigned char _field14;
    double _field15;
    unsigned char _field16;
    unsigned char _field17;
    unsigned char _field18;
    unsigned char _field19;
    struct vector<Rose::SlaveSFRxPacketInfo, std::__1::allocator<Rose::SlaveSFRxPacketInfo>> _field20;
};

struct SlaveSFRxPacketInfo;

struct UWBSessionInterruptionBookkeeping;

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, AuthorizationState>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, AuthorizationState>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, void *>*> *__next_;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct array<unsigned char, 16> {
    unsigned char __elems_[16];
};

struct array<unsigned char, 6> {
    unsigned char __elems_[6];
};

struct array<unsigned char, 8> {
    unsigned char __elems_[8];
};

struct atomic<bool> {
    struct __cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool>> {
        _Atomic _Bool __a_value;
    } __a_;
};

struct atomic<unsigned long> {
    struct __cxx_atomic_impl<unsigned long, std::__1::__cxx_atomic_base_impl<unsigned long>> {
        _Atomic unsigned long long __a_value;
    } __a_;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct deque<NICachedBluetoothEvent, std::__1::allocator<NICachedBluetoothEvent>> {
    struct __split_buffer<NICachedBluetoothEvent *, std::__1::allocator<NICachedBluetoothEvent *>> {
        struct NICachedBluetoothEvent **__first_;
        struct NICachedBluetoothEvent **__begin_;
        struct NICachedBluetoothEvent **__end_;
        struct __compressed_pair<NICachedBluetoothEvent **, std::__1::allocator<NICachedBluetoothEvent *>> {
            struct NICachedBluetoothEvent **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<NICachedBluetoothEvent>> {
        unsigned long long __value_;
    } __size_;
};

struct duration<long long, std::__1::ratio<1, 1000>> {
    long long __rep_;
};

struct duration<unsigned long long, std::__1::ratio<1, 24000000>> {
    unsigned long long __rep_;
};

struct duration<unsigned long long, std::__1::ratio<3125, 10000000>> {
    unsigned long long __rep_;
};

struct map<float, int, std::__1::less<float>, std::__1::allocator<std::__1::pair<const float, int>>> {
    struct __tree<std::__1::__value_type<float, int>, std::__1::__map_value_compare<float, std::__1::__value_type<float, int>, std::__1::less<float>, true>, std::__1::allocator<std::__1::__value_type<float, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<float, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<float, std::__1::__value_type<float, int>, std::__1::less<float>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, double, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, double>>> {
    struct __tree<std::__1::__value_type<int, double>, std::__1::__map_value_compare<int, std::__1::__value_type<int, double>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, double>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, double>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, double>, std::__1::less<int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long long, NIServerHandoffCoreAnalytics::NIServerHandoffPerDeviceCAManager, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, NIServerHandoffCoreAnalytics::NIServerHandoffPerDeviceCAManager>>> {
    struct __tree<std::__1::__value_type<unsigned long long, NIServerHandoffCoreAnalytics::NIServerHandoffPerDeviceCAManager>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, NIServerHandoffCoreAnalytics::NIServerHandoffPerDeviceCAManager>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, NIServerHandoffCoreAnalytics::NIServerHandoffPerDeviceCAManager>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, NIServerHandoffCoreAnalytics::NIServerHandoffPerDeviceCAManager>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, NIServerHandoffCoreAnalytics::NIServerHandoffPerDeviceCAManager>, std::__1::less<unsigned long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long long, double, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, double>>> {
    struct __tree<std::__1::__value_type<unsigned long long, double>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, double>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, double>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, double>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, double>, std::__1::less<unsigned long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct mutex {
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } __m_;
};

struct optional<PRUnifiedAppState> {
    union {
        char __null_state_;
        struct PRUnifiedAppState __val_;
    } ;
    _Bool __engaged_;
};

struct optional<RoseSensorFusion::FilteredSolution> {
    union {
        char _field1;
        struct FilteredSolution _field2;
    } _field1;
    _Bool _field2;
};

struct optional<RoseSensorFusion::Internals> {
    union {
        char _field1;
        struct Internals _field2;
    } _field1;
    _Bool _field2;
};

struct optional<double> {
    union {
        char _field1;
        double _field2;
    } _field1;
    _Bool _field2;
};

struct optional<int> {
    union {
        char __null_state_;
        int __val_;
    } ;
    _Bool __engaged_;
};

struct optional<nearby::algorithms::region_monitoring::Region> {
    union {
        char _field1;
        struct Region _field2;
    } _field1;
    _Bool _field2;
};

struct optional<rose::ConnectionEventTriggerDescriptor> {
    union {
        char _field1;
        struct ConnectionEventTriggerDescriptor _field2;
    } _field1;
    _Bool _field2;
};

struct optional<rose::GR::HostConfig> {
    union {
        char _field1;
        struct HostConfig _field2;
    } _field1;
    _Bool _field2;
};

struct optional<rose::RangeResult> {
    union {
        char _field1;
        struct RangeResult _field2;
    } _field1;
    _Bool _field2;
};

struct optional<rose::ResponderSuperframeStats> {
    union {
        char _field1;
        struct ResponderSuperframeStats _field2;
    } _field1;
    _Bool _field2;
};

struct optional<rose::RoseDeviceDescriptor> {
    union {
        char __null_state_;
        struct RoseDeviceDescriptor __val_;
    } ;
    _Bool __engaged_;
};

struct optional<rose::RoseServiceRequest> {
    union {
        char _field1;
        struct RoseServiceRequest _field2;
    } _field1;
    _Bool _field2;
};

struct optional<rose::alisha::BluetoothEvent> {
    union {
        char __null_state_;
        struct BluetoothEvent __val_;
    } ;
    _Bool __engaged_;
};

struct optional<rose::alisha::hsi::Capabilities> {
    union {
        char __null_state_;
        struct Capabilities __val_;
    } ;
    _Bool __engaged_;
};

struct optional<short> {
    union {
        char _field1;
        short _field2;
    } _field1;
    _Bool _field2;
};

struct optional<std::__1::array<unsigned char, 16>> {
    union {
        char __null_state_;
        struct array<unsigned char, 16> __val_;
    } ;
    _Bool __engaged_;
};

struct optional<std::__1::array<unsigned char, 6>> {
    union {
        char __null_state_;
        array_39163e03 __val_;
    } ;
    _Bool __engaged_;
};

struct optional<std::__1::array<unsigned char, 8>> {
    union {
        char __null_state_;
        struct array<unsigned char, 8> __val_;
    } ;
    _Bool __engaged_;
};

struct optional<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000>>> {
    union {
        char __null_state_;
        duration_6174cf92 __val_;
    } ;
    _Bool __engaged_;
};

struct optional<std::__1::chrono::duration<unsigned long long, std::__1::ratio<1, 24000000>>> {
    union {
        char __null_state_;
        struct duration<unsigned long long, std::__1::ratio<1, 24000000>> __val_;
    } ;
    _Bool __engaged_;
};

struct optional<std::__1::chrono::duration<unsigned long long, std::__1::ratio<3125, 10000000>>> {
    union {
        char __null_state_;
        struct duration<unsigned long long, std::__1::ratio<3125, 10000000>> __val_;
    } ;
    _Bool __engaged_;
};

struct optional<unsigned char> {
    union {
        char _field1;
        unsigned char _field2;
    } _field1;
    _Bool _field2;
};

struct optional<unsigned int> {
    union {
        char __null_state_;
        unsigned int __val_;
    } ;
    _Bool __engaged_;
};

struct optional<unsigned long long> {
    union {
        char __null_state_;
        unsigned long long __val_;
    } ;
    _Bool __engaged_;
};

struct optional<unsigned short> {
    union {
        char _field1;
        unsigned short _field2;
    } _field1;
    _Bool _field2;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct queue<NICachedBluetoothEvent, std::__1::deque<NICachedBluetoothEvent, std::__1::allocator<NICachedBluetoothEvent>>> {
    struct deque<NICachedBluetoothEvent, std::__1::allocator<NICachedBluetoothEvent>> c;
};

struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
    struct __tree<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned short, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned short>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<AlishaConfigProvider> {
    struct AlishaConfigProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<PRConfigurationManager> {
    struct PRConfigurationManager *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<PRRangingManagerClient> {
    struct PRRangingManagerClient *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<rose::alisha::AlishaManager> {
    struct AlishaManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<rose::alisha::analytics::AnalyticsManager> {
    struct AnalyticsManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<rose::alisha::dck::Coder> {
    struct Coder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<rose::alisha::health_monitoring::HealthMonitor> {
    struct HealthMonitor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<rose::alisha::negotiation::ParameterNegotiator> {
    struct ParameterNegotiator *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<rose::objects::AlishaSession> {
    struct AlishaSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<rose::objects::AlishaSubsystem> {
    struct AlishaSubsystem *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<rose::objects::GRSession> {
    struct GRSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<rose::objects::RoseBaseSession> {
    struct RoseBaseSession *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<rose::protobuf::Logger> {
    struct Logger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<rose::timeout_management::CarKeyTimeoutManager> {
    struct CarKeyTimeoutManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct unique_ptr<Rose::RoseSystemAssertion, std::__1::default_delete<Rose::RoseSystemAssertion>> {
    struct __compressed_pair<Rose::RoseSystemAssertion *, std::__1::default_delete<Rose::RoseSystemAssertion>> {
        struct RoseSystemAssertion *__value_;
    } __ptr_;
};

struct unique_ptr<WiFiRanging::Session, std::__1::default_delete<WiFiRanging::Session>> {
    struct __compressed_pair<WiFiRanging::Session *, std::__1::default_delete<WiFiRanging::Session>> {
        struct Session *__value_;
    } __ptr_;
};

struct unique_ptr<nearby::algorithms::region_monitoring::RegionMonitor, std::__1::default_delete<nearby::algorithms::region_monitoring::RegionMonitor>> {
    struct __compressed_pair<nearby::algorithms::region_monitoring::RegionMonitor *, std::__1::default_delete<nearby::algorithms::region_monitoring::RegionMonitor>> {
        struct RegionMonitor *__value_;
    } __ptr_;
};

struct unique_ptr<rose::RoseServiceRequest, std::__1::default_delete<rose::RoseServiceRequest>> {
    struct __compressed_pair<rose::RoseServiceRequest *, std::__1::default_delete<rose::RoseServiceRequest>> {
        struct RoseServiceRequest *__value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, AuthorizationState>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, AuthorizationState>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, AuthorizationState>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, AuthorizationState>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, AuthorizationState>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, AuthorizationState>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, AuthorizationState>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unordered_map<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping, std::__1::hash<UWBSessionInterruptionReasonInternal>, std::__1::equal_to<UWBSessionInterruptionReasonInternal>, std::__1::allocator<std::__1::pair<const UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>>> {
    struct __hash_table<std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, std::__1::__unordered_map_hasher<UWBSessionInterruptionReasonInternal, std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, std::__1::hash<UWBSessionInterruptionReasonInternal>, true>, std::__1::__unordered_map_equal<UWBSessionInterruptionReasonInternal, std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, std::__1::equal_to<UWBSessionInterruptionReasonInternal>, true>, std::__1::allocator<std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<UWBSessionInterruptionReasonInternal, std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, std::__1::hash<UWBSessionInterruptionReasonInternal>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<UWBSessionInterruptionReasonInternal, std::__1::__hash_value_type<UWBSessionInterruptionReasonInternal, UWBSessionInterruptionBookkeeping>, std::__1::equal_to<UWBSessionInterruptionReasonInternal>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, AuthorizationState, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, AuthorizationState>>> {
    struct __hash_table<std::__1::__hash_value_type<int, AuthorizationState>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, AuthorizationState>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, AuthorizationState>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, AuthorizationState>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, AuthorizationState>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, AuthorizationState>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, AuthorizationState>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, AuthorizationState>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, AuthorizationState>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, AuthorizationState>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, AuthorizationState>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long long>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, NIDiscoveryToken *, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, NIDiscoveryToken *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, NIDiscoveryToken *>, std::__1::equal_to<unsigned long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<rose::objects::GRSession>>, std::__1::equal_to<unsigned long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct vector<Rose::AOAHypothesis, std::__1::allocator<Rose::AOAHypothesis>> {
    struct AOAHypothesis *_field1;
    struct AOAHypothesis *_field2;
    struct __compressed_pair<Rose::AOAHypothesis *, std::__1::allocator<Rose::AOAHypothesis>> {
        struct AOAHypothesis *_field1;
    } _field3;
};

struct vector<Rose::SlaveSFRxPacketInfo, std::__1::allocator<Rose::SlaveSFRxPacketInfo>> {
    struct SlaveSFRxPacketInfo *_field1;
    struct SlaveSFRxPacketInfo *_field2;
    struct __compressed_pair<Rose::SlaveSFRxPacketInfo *, std::__1::allocator<Rose::SlaveSFRxPacketInfo>> {
        struct SlaveSFRxPacketInfo *_field1;
    } _field3;
};

struct vector<UWBSessionInterruptionBookkeeping, std::__1::allocator<UWBSessionInterruptionBookkeeping>> {
    struct UWBSessionInterruptionBookkeeping *__begin_;
    struct UWBSessionInterruptionBookkeeping *__end_;
    struct __compressed_pair<UWBSessionInterruptionBookkeeping *, std::__1::allocator<UWBSessionInterruptionBookkeeping>> {
        struct UWBSessionInterruptionBookkeeping *__value_;
    } __end_cap_;
};

struct vector<WiFiRanging::RangeResult, std::__1::allocator<WiFiRanging::RangeResult>> {
    struct RangeResult *_field1;
    struct RangeResult *_field2;
    struct __compressed_pair<WiFiRanging::RangeResult *, std::__1::allocator<WiFiRanging::RangeResult>> {
        struct RangeResult *_field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>> {
    double *_field1;
    double *_field2;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *_field1;
    } _field3;
};

struct vector<rose::DaisyChainServiceRequest, std::__1::allocator<rose::DaisyChainServiceRequest>> {
    struct DaisyChainServiceRequest *_field1;
    struct DaisyChainServiceRequest *_field2;
    struct __compressed_pair<rose::DaisyChainServiceRequest *, std::__1::allocator<rose::DaisyChainServiceRequest>> {
        struct DaisyChainServiceRequest *_field1;
    } _field3;
};

struct vector<rose::alisha::hsi::RangingBlockSummary::ResponderInfo, std::__1::allocator<rose::alisha::hsi::RangingBlockSummary::ResponderInfo>> {
    struct ResponderInfo *_field1;
    struct ResponderInfo *_field2;
    struct __compressed_pair<rose::alisha::hsi::RangingBlockSummary::ResponderInfo *, std::__1::allocator<rose::alisha::hsi::RangingBlockSummary::ResponderInfo>> {
        struct ResponderInfo *_field1;
    } _field3;
};

struct vector<rose::alisha::hsi::RxSkipReason, std::__1::allocator<rose::alisha::hsi::RxSkipReason>> {
    unsigned char *_field1;
    unsigned char *_field2;
    struct __compressed_pair<rose::alisha::hsi::RxSkipReason *, std::__1::allocator<rose::alisha::hsi::RxSkipReason>> {
        unsigned char *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__value_;
    } __end_cap_;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *__value_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int _field1[8];
} CDStruct_6ad76789;

// Template types
typedef struct Result<rose::RoseServiceRequest> {
    int _field1;
    struct optional<rose::RoseServiceRequest> _field2;
} Result_eb71acd8;

typedef struct array<unsigned char, 6> {
    unsigned char __elems_[6];
} array_39163e03;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
} basic_string_90719d97;

typedef struct duration<long long, std::__1::ratio<1, 1000>> {
    long long __rep_;
} duration_6174cf92;

typedef struct optional<nearby::algorithms::region_monitoring::Region> {
    union {
        char _field1;
        struct Region _field2;
    } _field1;
    _Bool _field2;
} optional_9014402b;

typedef struct optional<rose::RoseDeviceDescriptor> {
    union {
        char __null_state_;
        struct RoseDeviceDescriptor __val_;
    } ;
    _Bool __engaged_;
} optional_70f095c2;

typedef struct optional<unsigned long long> {
    union {
        char __null_state_;
        unsigned long long __val_;
    } ;
    _Bool __engaged_;
} optional_78373086;

typedef struct shared_ptr<PRConfigurationManager> {
    struct PRConfigurationManager *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_3baa22f1;

typedef struct shared_ptr<PRRangingManagerClient> {
    struct PRRangingManagerClient *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_55175bc8;

typedef struct shared_ptr<rose::objects::AlishaSession> {
    struct AlishaSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_31410e9d;

typedef struct shared_ptr<rose::objects::GRSession> {
    struct GRSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_359d0959;

typedef struct shared_ptr<rose::objects::RoseBaseSession> {
    struct RoseBaseSession *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_c883cf7f;

typedef struct shared_ptr<rose::protobuf::Logger> {
    struct Logger *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_7f363ebc;

typedef struct vector<WiFiRanging::RangeResult, std::__1::allocator<WiFiRanging::RangeResult>> {
    struct RangeResult *_field1;
    struct RangeResult *_field2;
    struct __compressed_pair<WiFiRanging::RangeResult *, std::__1::allocator<WiFiRanging::RangeResult>> {
        struct RangeResult *_field1;
    } _field3;
} vector_7b261d6f;

typedef struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__value_;
    } __end_cap_;
} vector_aab22ae2;

