//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <PassKitCore/PDXPCService.h>

#import "PDApplyManagerObserver-Protocol.h"
#import "PDFamilyCircleManagerObserver-Protocol.h"
#import "PDPaymentServiceExportedInterface-Protocol.h"
#import "PDPaymentWebServiceCoordinatorDelegate-Protocol.h"
#import "PDRemoteInterfaceBannerPresenterObserver-Protocol.h"
#import "PKFieldDetectorObserver-Protocol.h"
#import "PKSharingIDSManagerDelegate-Protocol.h"

@class NSString, PDAccountManager, PDAppletSubcredentialManager, PDApplyManager, PDAuxiliaryCapabilityManager, PDCardFileManager, PDCloudStoreNotificationCoordinator, PDDatabaseManager, PDDefaultPassManager, PDDevicePasscodeManager, PDExpressPassManager, PDFamilyCircleManager, PDMapsBrandAndMerchantUpdater, PDNotificationServiceCoordinator, PDPaymentTransactionProcessor, PDPaymentWebServiceCoordinator, PDPeerPaymentWebServiceCoordinator, PDPushNotificationManager, PDPushProvisioningManager, PDRemoteInterfacePresenter, PDTransactionAuthenticationManager, PDTransactionReceiptFileManager, PDTransitStateManager, PDUserNotificationManager, PKEntitlementWhitelist, PKFieldDetector, PKSecureElement, PKSharingIDSManager;
@protocol PKTapToRadarDelegate;

@interface PDPaymentService : PDXPCService <PKFieldDetectorObserver, PDApplyManagerObserver, PDPaymentWebServiceCoordinatorDelegate, PDFamilyCircleManagerObserver, PKSharingIDSManagerDelegate, PDRemoteInterfaceBannerPresenterObserver, PDPaymentServiceExportedInterface>
{
    PKEntitlementWhitelist *_whitelist;	// 8 = 0x8
    _Bool _gatheringAllTransactions;	// 16 = 0x10
    PDNotificationServiceCoordinator *_notificationServiceCoordinator;	// 24 = 0x18
    PDCloudStoreNotificationCoordinator *_cloudStoreNotificationCoordinator;	// 32 = 0x20
    PDPeerPaymentWebServiceCoordinator *_peerPaymentWebServicesCoordinator;	// 40 = 0x28
    PDPaymentWebServiceCoordinator *_paymentWebServiceCoordinator;	// 48 = 0x30
    PDFamilyCircleManager *_familyMemberManager;	// 56 = 0x38
    PDPaymentTransactionProcessor *_paymentTransactionProcessor;	// 64 = 0x40
    PDRemoteInterfacePresenter *_remoteInterfacePresenter;	// 72 = 0x48
    PDDatabaseManager *_databaseManager;	// 80 = 0x50
    PDExpressPassManager *_expressPassManager;	// 88 = 0x58
    PDTransitStateManager *_transitStateManager;	// 96 = 0x60
    PDUserNotificationManager *_userNotificationManager;	// 104 = 0x68
    PKFieldDetector *_fieldDetector;	// 112 = 0x70
    PKSecureElement *_secureElement;	// 120 = 0x78
    PDDefaultPassManager *_defaultPassManager;	// 128 = 0x80
    PDPushNotificationManager *_pushNotificationManager;	// 136 = 0x88
    PDDevicePasscodeManager *_devicePasscodeManager;	// 144 = 0x90
    PDApplyManager *_applyManager;	// 152 = 0x98
    PDAccountManager *_accountManager;	// 160 = 0xa0
    PDAppletSubcredentialManager *_subcredentialManager;	// 168 = 0xa8
    PDCardFileManager *_cardFileManager;	// 176 = 0xb0
    PDMapsBrandAndMerchantUpdater *_mapsBrandAndMerchantUpdater;	// 184 = 0xb8
    PDPushProvisioningManager *_pushProvisioningManager;	// 192 = 0xc0
    PDAuxiliaryCapabilityManager *_auxiliaryCapabilityManager;	// 200 = 0xc8
    PDTransactionAuthenticationManager *_transactionAuthenticationManager;	// 208 = 0xd0
    id <PKTapToRadarDelegate> _tapToRadarDelegate;	// 216 = 0xd8
    PDTransactionReceiptFileManager *_transactionReceiptFileManager;	// 224 = 0xe0
    PKSharingIDSManager *_idsSharingManager;	// 232 = 0xe8
}

- (void).cxx_destruct;	// IMP=0x00000001001d87a0
@property(retain, nonatomic) PKSharingIDSManager *idsSharingManager; // @synthesize idsSharingManager=_idsSharingManager;
@property(retain, nonatomic) PDTransactionReceiptFileManager *transactionReceiptFileManager; // @synthesize transactionReceiptFileManager=_transactionReceiptFileManager;
@property(nonatomic) __weak id <PKTapToRadarDelegate> tapToRadarDelegate; // @synthesize tapToRadarDelegate=_tapToRadarDelegate;
@property(retain, nonatomic) PDTransactionAuthenticationManager *transactionAuthenticationManager; // @synthesize transactionAuthenticationManager=_transactionAuthenticationManager;
@property(retain, nonatomic) PDAuxiliaryCapabilityManager *auxiliaryCapabilityManager; // @synthesize auxiliaryCapabilityManager=_auxiliaryCapabilityManager;
@property(retain, nonatomic) PDPushProvisioningManager *pushProvisioningManager; // @synthesize pushProvisioningManager=_pushProvisioningManager;
@property(retain, nonatomic) PDMapsBrandAndMerchantUpdater *mapsBrandAndMerchantUpdater; // @synthesize mapsBrandAndMerchantUpdater=_mapsBrandAndMerchantUpdater;
@property(retain, nonatomic) PDCardFileManager *cardFileManager; // @synthesize cardFileManager=_cardFileManager;
@property(retain, nonatomic) PDAppletSubcredentialManager *subcredentialManager; // @synthesize subcredentialManager=_subcredentialManager;
@property(retain, nonatomic) PDAccountManager *accountManager; // @synthesize accountManager=_accountManager;
@property(retain, nonatomic) PDApplyManager *applyManager; // @synthesize applyManager=_applyManager;
@property(retain, nonatomic) PDDevicePasscodeManager *devicePasscodeManager; // @synthesize devicePasscodeManager=_devicePasscodeManager;
@property(retain, nonatomic) PDPushNotificationManager *pushNotificationManager; // @synthesize pushNotificationManager=_pushNotificationManager;
@property(retain, nonatomic) PDDefaultPassManager *defaultPassManager; // @synthesize defaultPassManager=_defaultPassManager;
@property(retain, nonatomic) PKSecureElement *secureElement; // @synthesize secureElement=_secureElement;
@property(retain, nonatomic) PKFieldDetector *fieldDetector; // @synthesize fieldDetector=_fieldDetector;
@property(retain, nonatomic) PDUserNotificationManager *userNotificationManager; // @synthesize userNotificationManager=_userNotificationManager;
@property(retain, nonatomic) PDTransitStateManager *transitStateManager; // @synthesize transitStateManager=_transitStateManager;
@property(retain, nonatomic) PDExpressPassManager *expressPassManager; // @synthesize expressPassManager=_expressPassManager;
@property(retain, nonatomic) PDDatabaseManager *databaseManager; // @synthesize databaseManager=_databaseManager;
@property(retain, nonatomic) PDRemoteInterfacePresenter *remoteInterfacePresenter; // @synthesize remoteInterfacePresenter=_remoteInterfacePresenter;
@property(retain, nonatomic) PDPaymentTransactionProcessor *paymentTransactionProcessor; // @synthesize paymentTransactionProcessor=_paymentTransactionProcessor;
@property(retain, nonatomic) PDFamilyCircleManager *familyMemberManager; // @synthesize familyMemberManager=_familyMemberManager;
@property(retain, nonatomic) PDPaymentWebServiceCoordinator *paymentWebServiceCoordinator; // @synthesize paymentWebServiceCoordinator=_paymentWebServiceCoordinator;
@property(retain, nonatomic) PDPeerPaymentWebServiceCoordinator *peerPaymentWebServicesCoordinator; // @synthesize peerPaymentWebServicesCoordinator=_peerPaymentWebServicesCoordinator;
@property(retain, nonatomic) PDCloudStoreNotificationCoordinator *cloudStoreNotificationCoordinator; // @synthesize cloudStoreNotificationCoordinator=_cloudStoreNotificationCoordinator;
@property(retain, nonatomic) PDNotificationServiceCoordinator *notificationServiceCoordinator; // @synthesize notificationServiceCoordinator=_notificationServiceCoordinator;
- (void)sendAllPassTransactions;	// IMP=0x00000001001d8048
- (void)serviceSuspended;	// IMP=0x00000001001d8044
- (void)serviceResumed;	// IMP=0x00000001001d8040
- (void)credentialWasDeleted:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d803c
- (void)willPassWithUniqueIdentifierAutomaticallyBecomeDefault:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d7f54
- (void)performProductActionRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d7e68
- (void)productsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001d7d98
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didUpdateCredential:(id)arg2;	// IMP=0x00000001001d7c78
- (void)sendDidRecieveCredentialInvitation:(id)arg1;	// IMP=0x00000001001d7bfc
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didUpdateCategoryVisualizationWithStyle:(long long)arg2;	// IMP=0x00000001001d7b70
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didUpdateWithTransitProperties:(id)arg2;	// IMP=0x00000001001d7ad0
- (void)sendDidUpdateDefaultPaymentPassWithUniqueIdentifier:(id)arg1;	// IMP=0x00000001001d7a38
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didEnableTransactionService:(_Bool)arg2;	// IMP=0x00000001001d7998
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didEnableMessageService:(_Bool)arg2;	// IMP=0x00000001001d78f8
- (void)sendTransactionSourceIdentifier:(id)arg1 didReceiveTransaction:(id)arg2;	// IMP=0x00000001001d7858
- (void)sendTransactionSourceIdentifier:(id)arg1 didRemoveTransactionWithIdentifier:(id)arg2;	// IMP=0x00000001001d77b8
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didUpdateBalanceReminder:(id)arg2 forBalanceWithIdentifier:(id)arg3;	// IMP=0x00000001001d76fc
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didReceiveBalanceUpdate:(id)arg2;	// IMP=0x00000001001d765c
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didReceiveMessage:(id)arg2;	// IMP=0x00000001001d75bc
- (void)sendPassWithUniqueIdentifier:(id)arg1 didReceiveValueAddedServiceTransaction:(id)arg2;	// IMP=0x00000001001d751c
- (void)didRecieveBannerToDisplay:(id)arg1;	// IMP=0x00000001001d74b0
- (void)didReceiveDeviceSharingCapabilities:(id)arg1 forHandle:(id)arg2;	// IMP=0x00000001001d7428
- (void)photosForFamilyMembersWithDSIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d7340
- (void)pendingFamilyMembersIgnoringCache:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d726c
- (void)familyMembersIgnoringCache:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d7198
- (void)fieldDetectorDidExitField:(id)arg1;	// IMP=0x00000001001d7128
- (void)fieldDetectorDidEnterField:(id)arg1 withProperties:(id)arg2;	// IMP=0x00000001001d70ac
- (void)submitBarcodePaymentEvent:(id)arg1 forPassUniqueIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001d6e9c
- (void)submitEncryptedPIN:(id)arg1 forTransactionIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001d6be0
- (void)submitUserConfirmation:(_Bool)arg1 forTransactionIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001d6948
- (void)markAuthenticationCompleteForTransactionIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d6770
- (void)processedAuthenticationMechanism:(unsigned long long)arg1 forTransactionIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001d6584
- (void)retrievePINEncryptionCertificateForPassUniqueIdentifier:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d63a4
- (void)retrieveDecryptedBarcodeCredentialForPassUniqueIdentifier:(id)arg1 authorization:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001d60e0
- (void)fetchBarcodesForPassUniqueIdentifier:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d5e5c
- (void)registerAuxiliaryCapabilityForPassUniqueIdentifier:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d5be0
- (void)transactionReceiptForTransactionWithIdentifier:(id)arg1 updateIfNecessary:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001d57f0
- (void)deleteTransactionReceiptWithUniqueID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d55fc
- (void)storeTransactionReceiptData:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d52d0
- (void)transactionReceiptWithUniqueID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d50b8
- (void)requiresUpgradedPasscodeWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001d4e04
- (void)enforceUpgradedPasscodePolicyWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001d4c4c
- (void)updateAllMapsBrandAndMerchantDataWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001d46e8
- (void)disbursementVoucherWithDisbursementSource:(unsigned long long)arg1 disbursementTarget:(unsigned long long)arg2 bundleIdentifier:(id)arg3 teamIdentifier:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00000001001d42a0
- (void)passOwnershipTokenWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d4110
- (void)storePassOwnershipToken:(id)arg1 withIdentifier:(id)arg2;	// IMP=0x00000001001d3ea0
- (void)setDeviceUpgradeTasksContextBuildVersion:(id)arg1 upgradeTaskVersion:(long long)arg2 retryCount:(long long)arg3;	// IMP=0x00000001001d3d7c
- (void)scheduleDeviceUpgradeTasksIfNecessaryWithRandomizeStartDate:(_Bool)arg1;	// IMP=0x00000001001d3c60
- (void)unscheduleDeviceUpgradeTaskActivity;	// IMP=0x00000001001d3b4c
- (void)setDeviceCheckInContextBuildVersion:(id)arg1 outstandingAction:(long long)arg2 forRegion:(id)arg3;	// IMP=0x00000001001d3a14
- (void)performDeviceCheckInWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001d38f0
- (void)redeemProvisioningSharingIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d37a4
- (void)redeemEncryptedProvisioningTarget:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d3654
- (void)prepareProvisioningTarget:(id)arg1 checkFamilyCircle:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001d3500
- (void)provideEncryptedPushProvisioningTarget:(id)arg1 sharingInstanceIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001d33a0
- (void)statusForShareableCredentials:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d3254
- (void)pushProvisioningSharingIdentifiers:(CDUnknownBlockType)arg1;	// IMP=0x00000001001d3130
- (void)didUpdateSharingInvitationWithIdentifier:(id)arg1 reason:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001d2fc4
- (void)didReceiveSharingInvitationRequest:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d2e68
- (void)didReceiveSharingInvitationWithIdentifier:(id)arg1 fromOriginatorIDSHandle:(id)arg2 sharingSessionIdentifier:(id)arg3 metadata:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00000001001d2ca0
- (void)finishedKeyExchangeForCredential:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d2b48
- (void)sharingInvitationWasInvalidated:(id)arg1 withCredentialIdentifier:(id)arg2 error:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000001001d29a4
- (void)credentialWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d2848
- (void)canAcceptInvitation:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d26c8
- (void)requestBackgroundRegistrationForCredentialWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d2580
- (void)removeSharingInvitationWithIdentifier:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d2438
- (void)addSubcredential:(id)arg1 fromSharingInvitationWithIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001d22cc
- (void)removeSharingInvitationReceiptWithIdentifiers:(id)arg1 onCredential:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001d2160
- (void)declineRelatedSharingInvitationsIfNecessary:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d201c
- (void)addSharingInvitationReceipts:(id)arg1 onCredentialWithIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001d1eb0
- (void)revokeCredentialsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d1d6c
- (void)registerCredentialsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d1978
- (void)updateMetadataOnPassWithIdentifier:(id)arg1 credential:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001d1818
- (void)subcredentialInvitationsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001d16d4
- (void)addPlaceholderPassWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d1304
- (void)sendDeviceSharingCapabilitiesRequestForHandle:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d1114
- (void)setAccountAttestationAnonymizationSalt:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d0fd0
- (void)accountAttestationAnonymizationSaltWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001d0eac
- (void)displayTapToRadarAlertForRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d0e30
- (void)_requestUpdatesForTransactionSourceIdentifiers:(id)arg1;	// IMP=0x00000001001d0bc4
- (void)noteAccountDeletedWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001d09bc
- (void)recomputeCategoryVisualizationMangitudesForPassUniqueID:(id)arg1 style:(long long)arg2;	// IMP=0x00000001001d08a0
- (void)categoryVisualizationMagnitudesForPassUniqueID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d073c
- (void)transactionsRequiringReviewForAccountWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d0694
- (void)submitTransactionAnswerForTransaction:(id)arg1 questionType:(unsigned long long)arg2 answer:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000001001cfeec
- (void)submitDeleteRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001cfda8
- (void)submitTermsRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001cfc60
- (void)submitDocumentRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001cfb18
- (void)submitApplyRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001cf9d0
- (void)featureApplicationWithReferenceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001cf88c
- (void)_updateApplicationsForType:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001cf6f4
- (void)featureApplicationsForAccountUserInvitationWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001cf5d4
- (void)featureApplicationsForProvisioningWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001cf4b4
- (void)featureApplicationWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001cf370
- (void)updateFeatureApplicationsForAccountIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001cf228
- (void)featureApplicationsForAccountIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001cf0e4
- (void)featureApplicationsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001cefc4
- (void)startBackgroundVerificationObserverForPass:(id)arg1 verificationMethod:(id)arg2;	// IMP=0x00000001001cef3c
- (void)bannerModelsToDisplayWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001001cedf8
- (void)passbookBannerDidLaunch:(CDUnknownBlockType)arg1;	// IMP=0x00000001001cecd0
- (void)passbookBanner:(id)arg1 didFinishDisplayingWithHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001ceb84
- (void)displayBannerForPassWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001cea2c
- (void)passbookUIServiceDidLaunch:(CDUnknownBlockType)arg1;	// IMP=0x00000001001ce904
- (void)scheduleAutomaticPresentationAvailableNotificationForPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001ce5f8
- (void)removeProductsCache;	// IMP=0x00000001001ce5a0
- (void)unscheduleDeviceCheckIn;	// IMP=0x00000001001ce548
- (void)scheduleDeviceCheckInWithStartTimeOffset:(double)arg1;	// IMP=0x00000001001ce4dc
- (void)scheduleSetupReminders:(CDUnknownBlockType)arg1;	// IMP=0x00000001001ce144
- (void)consistencyCheckWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001001cdf90
- (void)downloadAllPaymentPassesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001001cdddc
- (void)simulatePaymentPushTopic:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001cdbf8
- (void)initializeSecureElement:(CDUnknownBlockType)arg1;	// IMP=0x00000001001cd974
- (void)initializeSecureElementIfNecessaryWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001001cd53c
- (void)defaultPaymentApplicationForPassUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001cd2f8
- (void)setDefaultPaymentApplication:(id)arg1 forPassUniqueIdentifier:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000001001cd080
- (void)insertOrUpdateValueAddedServiceTransaction:(id)arg1 forPassUniqueIdentifier:(id)arg2 paymentTransaction:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00000001001ccbf4
- (void)outstandingExpressTransactionState:(CDUnknownBlockType)arg1;	// IMP=0x00000001001ccb90
- (void)transitStateWithPassUniqueIdentifier:(id)arg1 paymentApplication:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000001001ccaec
- (void)processTransitTransactionEventWithHistory:(id)arg1 transactionDate:(id)arg2 forPaymentApplication:(id)arg3 withPassUniqueIdentifier:(id)arg4 expressTransactionState:(id)arg5;	// IMP=0x00000001001cc8d8
- (void)sanitizeExpressPasses;	// IMP=0x00000001001cc87c
- (void)removeMapsDataForTransactionWithIdentifier:(id)arg1 forTransactionSourceIdentifier:(id)arg2 issueReportIdentifier:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000001001cc60c
- (void)insertOrUpdatePaymentTransaction:(id)arg1 forPassUniqueIdentifier:(id)arg2 paymentApplication:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000001001cc24c
- (void)insertOrUpdatePaymentTransaction:(id)arg1 forTransactionSourceIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001cbf74
- (void)archiveMessageWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001cbd90
- (void)deleteAllMessagesForPaymentPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001cbbac
- (void)deleteAllTransactionsForTransactionSourceIdentifiers:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001cb8bc
- (void)deletePaymentTransactionWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001cb6d8
- (void)setCommutePlanReminder:(id)arg1 forCommutePlanIdentifier:(id)arg2 withPassUniqueIdentifier:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00000001001cb484
- (void)commutePlanReminderForCommutePlanIdentifier:(id)arg1 withPassUniqueIdentifier:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000001001cb24c
- (void)setBalanceReminder:(id)arg1 forBalanceIdentifier:(id)arg2 withPassUniqueIdentifier:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00000001001cace0
- (void)balanceReminderThresholdForBalanceIdentifier:(id)arg1 withPassUniqueIdentifier:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000001001caaa8
- (void)balancesForPaymentPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001ca858
- (void)messagesForPaymentPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001ca608
- (void)valueAddedServiceTransactionWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001ca40c
- (void)valueAddedServiceTransactionsForPaymentTransaction:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001ca210
- (void)valueAddedServiceTransactionsForPassWithUniqueIdentifier:(id)arg1 limit:(long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000001001ca000
- (void)mapsMerchantsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001c9e18
- (void)ambiguousTransactionWithServiceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c9c04
- (void)passUniqueIdentifierForTransactionWithServiceIdentifier:(id)arg1 transactionSourceIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001c99b8
- (void)ambiguousPassUniqueIdentifierForTransactionWithServiceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c97a4
- (void)passUniqueIdentifierForTransactionWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c9590
- (void)transactionsForPredicate:(id)arg1 limit:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001c9380
- (void)logoImageDataForTransactionWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c9038
- (void)transactionsForRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c8e3c
- (void)installmentPlanTransactionsForTransactionSourceIdentifiers:(id)arg1 accountIdentifier:(id)arg2 withRedemptionType:(long long)arg3 startDate:(id)arg4 endDate:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00000001001c8b98
- (void)installmentPlansWithTransactionReferenceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c899c
- (void)installmentTransactionsForInstallmentPlanIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c87a0
- (void)transactionWithReferenceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c858c
- (void)transactionWithServiceIdentifier:(id)arg1 transactionSourceIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001c8340
- (void)transactionSourceTypeForTransactionSourceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c8140
- (void)transactionWithTransactionIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c7f2c
- (void)transactionsWithTransactionSource:(unsigned long long)arg1 withBackingData:(unsigned long long)arg2 limit:(long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000001001c7d38
- (void)transactionsForTransactionSourceIdentifiers:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 limit:(long long)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00000001001c7ba4
- (void)pendingTransactionsForTransactionSourceIdentifiers:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 limit:(long long)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x00000001001c7900
- (void)approvedTransactionsForTransactionSourceIdentifiers:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 limit:(long long)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x00000001001c765c
- (void)transactionsForTransactionSourceIdentifiers:(id)arg1 withTransactionType:(long long)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 limit:(long long)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x00000001001c73c4
- (void)transactionsForTransactionSourceIdentifiers:(id)arg1 withMerchantCategory:(long long)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 limit:(long long)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x00000001001c712c
- (void)transactionsForTransactionSourceIdentifiers:(id)arg1 matchingMerchant:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 limit:(long long)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00000001001c6ec4
- (void)transactionsForTransactionSourceIdentifiers:(id)arg1 withPeerPaymentCounterpartHandles:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 limit:(long long)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00000001001c6c5c
- (void)transactionsForTransactionSourceIdentifiers:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 orderedByDate:(long long)arg6 limit:(long long)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x00000001001c69b8
- (void)transactionsForTransactionSourceIdentifiers:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 limit:(long long)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x00000001001c6988
- (void)hasTransactionsForTransactionSourceIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c678c
- (void)cashbackByPeriodForTransactionSourceIdentifiers:(id)arg1 withStartDate:(id)arg2 endDate:(id)arg3 calendar:(id)arg4 calendarUnit:(unsigned long long)arg5 type:(long long)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x00000001001c64dc
- (void)transactionCountByPeriodForTransactionSourceIdentifiers:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 calendar:(id)arg4 unit:(unsigned long long)arg5 includePurchaseTotal:(_Bool)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x00000001001c6270
- (void)submitVerificationCode:(id)arg1 verificationData:(id)arg2 forDPANIdentifier:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00000001001c5d14
- (void)messagesAppLaunchTokenForPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c5aec
- (void)transactionsAppLaunchTokenForPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c58c4
- (void)setSharedPaymentWebServiceContext:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c56d0
- (void)sharedPaymentWebServiceContextWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001001c54a4
- (void)simulateDefaultExpressTransitPassIdentifier:(id)arg1 forExpressMode:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000001001c52b0
- (void)isPassExpressWithUniqueIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c51f8
- (void)removeExpressPassWithUniqueIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c513c
- (void)removeExpressPassesWithCardType:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c5094
- (void)setExpressWithPassInformation:(id)arg1 credential:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001c4fa0
- (void)conflictingExpressPassIdentifiersForPassInformation:(id)arg1 withReferenceExpressState:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001c4eb0
- (void)conflictingExpressPassIdentifiersForPassInformation:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c4ddc
- (void)expressPassInformationForMode:(id)arg1 withHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c4d24
- (void)expressPassesInformationWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001001c4c88
- (void)expressPassesInformationWithAutomaticSelectionTechnologyType:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c4be4
- (void)expressPassesInformationWithCardType:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c4b40
- (void)expressPassInformationWithPassUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c4a88
- (void)setDefaultExpressFelicaTransitPassIdentifier:(id)arg1 withCredential:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001c4888
- (void)defaultPaymentPassIngestionSpecificIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x00000001001c457c
- (void)setDefaultPaymentPassUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001c4338
- (void)defaultPaymentPassUniqueIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x00000001001c4128
- (void)paymentDeviceFieldPropertiesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001001c3efc
- (void)familyCircleManagerDidUpdateFamilyMembers:(id)arg1;	// IMP=0x00000001001c3df4
- (void)applyManager:(id)arg1 didUpdateApplication:(id)arg2 oldApplication:(id)arg3;	// IMP=0x00000001001c3d78
- (void)applyManager:(id)arg1 didRemoveApplication:(id)arg2;	// IMP=0x00000001001c3cfc
- (void)applyManager:(id)arg1 didAddApplication:(id)arg2;	// IMP=0x00000001001c3c80
- (void)paymentWebServiceCoordinator:(id)arg1 didDownloadTransactionReceipt:(id)arg2 forTransactionWithIdentifier:(id)arg3;	// IMP=0x00000001001c3be0
- (id)remoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001001c3908
- (id)remoteObjectProxy;	// IMP=0x00000001001c38cc
- (void)dealloc;	// IMP=0x00000001001c3870
- (id)initWithConnection:(id)arg1;	// IMP=0x00000001001c37d0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

