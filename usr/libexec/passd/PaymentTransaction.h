//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "SQLiteEntity.h"

@interface PaymentTransaction : SQLiteEntity
{
}

+ (id)_propertySettersForTransactionAuthenticationContext;	// IMP=0x00000001002c762c
+ (id)_propertySettersForTransactionAuthenticationResult;	// IMP=0x00000001002c7530
+ (id)_propertySettersForForeignExchangeInformation;	// IMP=0x00000001002c7400
+ (id)_propertySettersForMerchant;	// IMP=0x00000001002c6ef4
+ (id)_propertySettersForPaymentTransaction;	// IMP=0x00000001002c4e7c
+ (id)_closestTransactionInDatabase:(id)arg1 withTransactionDate:(id)arg2 withinWindow:(double)arg3 forTransactionSourceIdentifiers:(id)arg4 additionalPredicates:(id)arg5;	// IMP=0x00000001002c498c
+ (id)_paymentTransactionsWithQuery:(id)arg1 regions:(id *)arg2 tags:(id *)arg3;	// IMP=0x00000001002c3210
+ (id)_paymentTransactionsWithQuery:(id)arg1;	// IMP=0x00000001002c31fc
+ (void)_count:(unsigned long long *)arg1 totalAmount:(id *)arg2 currencyCode:(id)arg3 forPredicate:(id)arg4 inDatabase:(id)arg5;	// IMP=0x00000001002c300c
+ (id)_paymentTransactionsInDatabase:(id)arg1 matchingPredicate:(id)arg2;	// IMP=0x00000001002c2f6c
+ (id)_predicateForRewardsValue:(id)arg1 unit:(unsigned long long)arg2;	// IMP=0x00000001002c2e84
+ (id)_predicateForTransactionTag:(id)arg1;	// IMP=0x00000001002c2be8
+ (id)_predicateForAmount:(id)arg1 comparison:(long long)arg2;	// IMP=0x00000001002c28a0
+ (id)_predicateForCurrencyCode:(id)arg1;	// IMP=0x00000001002c2880
+ (id)_predicateForWorldRegionIdentifier:(id)arg1;	// IMP=0x00000001002c2860
+ (id)_predicateForNoWorldRegion;	// IMP=0x00000001002c2844
+ (id)_predicateForWorldRegion;	// IMP=0x00000001002c2828
+ (id)_predicateForMerchant:(id)arg1;	// IMP=0x00000001002c2054
+ (id)_predicateForMerchantCategory:(long long)arg1;	// IMP=0x00000001002c1d1c
+ (id)_predicateForMapsBrandCategory:(long long)arg1;	// IMP=0x00000001002c1bbc
+ (id)_predicateForMapsMerchantCategory:(long long)arg1;	// IMP=0x00000001002c1a5c
+ (id)_predicateForFallbackCategory:(long long)arg1;	// IMP=0x00000001002c19e8
+ (id)_predicateForLastMerchantReprocessingDateBeforeDate:(id)arg1;	// IMP=0x00000001002c188c
+ (id)_predicateForMapsMatch;	// IMP=0x00000001002c1778
+ (id)_predicateForHasCityAndCountry;	// IMP=0x00000001002c1664
+ (id)_predicateForHasLocation;	// IMP=0x00000001002c1648
+ (id)_predicateForHasPOIMatch;	// IMP=0x00000001002c162c
+ (id)_predicateForNoMapsMatch;	// IMP=0x00000001002c1518
+ (id)_predicateForRequiresMerchantReprocessing:(_Bool)arg1;	// IMP=0x00000001002c14a4
+ (id)_predicateForOriginatedOnDevice:(_Bool)arg1;	// IMP=0x00000001002c1430
+ (id)_predicateForMapsBrandIdentifier:(unsigned long long)arg1;	// IMP=0x00000001002c13bc
+ (id)_predicateForMapsIdentifier:(unsigned long long)arg1;	// IMP=0x00000001002c1348
+ (id)_predicateForLifecycleIdentifier:(id)arg1;	// IMP=0x00000001002c1328
+ (id)_predicateForTransactionTypes:(id)arg1;	// IMP=0x00000001002c1110
+ (id)_predicateForPeerPaymentSubType:(long long)arg1;	// IMP=0x00000001002c109c
+ (id)_predicateForTransactionType:(long long)arg1;	// IMP=0x00000001002c1028
+ (id)_predicateForPeerPaymentCounterpartHandles:(id)arg1;	// IMP=0x00000001002c0e58
+ (id)_predicateForPeerPaymentCounterpartHandle:(id)arg1;	// IMP=0x00000001002c0e38
+ (id)_predicateForGreaterThanTransactionPID:(id)arg1;	// IMP=0x00000001002c0e18
+ (id)_predicateForMapsBrandPID:(id)arg1;	// IMP=0x00000001002c0df8
+ (id)_predicateForMapsMerchantPID:(id)arg1;	// IMP=0x00000001002c0dd8
+ (id)_predicateForSourcePID:(id)arg1;	// IMP=0x00000001002c0db8
+ (id)_predicateForMapsBrandName:(id)arg1;	// IMP=0x00000001002c0d98
+ (id)_predicateForMapsMerchantName:(id)arg1;	// IMP=0x00000001002c0d78
+ (id)_predicateForMerchantWebMerchantIdentifier:(id)arg1;	// IMP=0x00000001002c0d58
+ (id)_predicateForMerchantAdamIdentifier:(long long)arg1;	// IMP=0x00000001002c0ce4
+ (id)_predicateForMerchantRawCANL:(id)arg1;	// IMP=0x00000001002c0cc4
+ (id)_predicateForMerchantRawName:(id)arg1;	// IMP=0x00000001002c0ca4
+ (id)_predicateForMerchantName:(id)arg1;	// IMP=0x00000001002c0c84
+ (id)_predicateForTransactionStatus:(long long)arg1;	// IMP=0x00000001002c0c10
+ (id)_predicateForTransactionDateNewerThanDate:(id)arg1;	// IMP=0x00000001002c0b80
+ (id)_predicateForTransactionDate:(id)arg1 withinWindow:(double)arg2;	// IMP=0x00000001002c09bc
+ (id)_predicateForPaymentHash:(id)arg1;	// IMP=0x00000001002c06dc
+ (id)_predicateForUnansweredQuestions;	// IMP=0x00000001002c04e0
+ (id)_predicateForAccountType:(long long)arg1;	// IMP=0x00000001002c046c
+ (id)_predicateForAccountIdentifier:(id)arg1;	// IMP=0x00000001002c044c
+ (id)_predicateForRedemptionType:(long long)arg1;	// IMP=0x00000001002c03d8
+ (id)_predicateForSuppressFromUI:(_Bool)arg1;	// IMP=0x00000001002c0254
+ (id)_predicateForReferenceIdentifier:(id)arg1;	// IMP=0x00000001002c0234
+ (id)_predicateForServiceIdentifier:(id)arg1;	// IMP=0x00000001002c0214
+ (id)_predicateForIdentifier:(id)arg1;	// IMP=0x00000001002c01f4
+ (id)_predicateForWithNotificationServiceData:(unsigned long long)arg1;	// IMP=0x00000001002c0154
+ (id)_predicateForEndStatusChangedDate:(id)arg1;	// IMP=0x00000001002c00c4
+ (id)_predicateForStartStatusChangedDate:(id)arg1;	// IMP=0x00000001002c0034
+ (id)_predicateForRedemptionEndDate:(id)arg1;	// IMP=0x00000001002bffa4
+ (id)_predicateForRedemptionStartDate:(id)arg1;	// IMP=0x00000001002bff14
+ (id)_predicateForEndDate:(id)arg1;	// IMP=0x00000001002bfe84
+ (id)_predicateForStartDate:(id)arg1;	// IMP=0x00000001002bfdf4
+ (id)_predicateForWithBackingData:(unsigned long long)arg1;	// IMP=0x00000001002bfba0
+ (id)_predicateForWithTransactionSource:(unsigned long long)arg1 excludeCardType:(_Bool)arg2;	// IMP=0x00000001002bf994
+ (id)_predicateForTransactionsWithTransactionSource:(unsigned long long)arg1 withBackingData:(unsigned long long)arg2;	// IMP=0x00000001002bf860
+ (id)_predicateForTransactionSource:(unsigned long long)arg1;	// IMP=0x00000001002bf6d8
+ (id)_predicateForPID:(id)arg1;	// IMP=0x00000001002bf6b8
+ (id)_predicateForTransactionSourceType:(unsigned long long)arg1;	// IMP=0x00000001002bf644
+ (id)_predicateForTransactionSourceIdentifier:(id)arg1;	// IMP=0x00000001002bf5ec
+ (id)_predicateForTransactionSourceIdentifiers:(id)arg1;	// IMP=0x00000001002bf41c
+ (id)_predicateForTransactionArchivePID:(long long)arg1;	// IMP=0x00000001002bf3a8
+ (id)_predicateForTransactionSourcePID:(long long)arg1;	// IMP=0x00000001002bf334
+ (unsigned long long)_countOfTransactionsWithMapsBrandPID:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001002bf2ac
+ (unsigned long long)_countOfTransactionsWithMapsMerchantPID:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001002bf224
+ (id)authenticationContextFromProperties:(id)arg1 values:(id *)arg2;	// IMP=0x00000001002bf0d4
+ (id)foreignExchangeInformationFromProperties:(id)arg1 values:(id *)arg2;	// IMP=0x00000001002be2a8
+ (id)merchantFromProperties:(id)arg1 values:(id *)arg2;	// IMP=0x00000001002bdce0
+ (id)rewardsValuesForUnit:(unsigned long long)arg1 inDatabase:(id)arg2;	// IMP=0x00000001002b8e30
+ (void)updateTransactionsWithTransactionSource:(id)arg1 toTransactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001002b89c8
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2;	// IMP=0x00000001002b8938
+ (void)allPassTransactionIdentifiersInDatabase:(id)arg1 fromPID:(long long)arg2 batchHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000001002b8390
+ (void)allPassTransactionIdentifiersInDatabase:(id)arg1 batchHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001002b8374
+ (id)transactionsInDatabase:(id)arg1 forInstallmentPlanIdentifier:(id)arg2;	// IMP=0x00000001002b81a8
+ (id)transactionsRequiringMerchantCleanupInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withLastReprocessingDateBeforeDate:(id)arg3 transactionDateWithinWindow:(double)arg4;	// IMP=0x00000001002b7e3c
+ (_Bool)hasPaymentTransactionInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3;	// IMP=0x00000001002b7cbc
+ (id)_predicateForHasAssociatedReceipt;	// IMP=0x00000001002b7bac
+ (id)transactionReceiptUniqueIDsInDatabase:(id)arg1;	// IMP=0x00000001002b78dc
+ (unsigned long long)numberOfPaymentTransactionsInDatabaseWithAssociatedReceipt:(id)arg1;	// IMP=0x00000001002b785c
+ (unsigned long long)numberOfPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withNotificationServiceData:(unsigned long long)arg3 newerThanDate:(id)arg4;	// IMP=0x00000001002b76b0
+ (id)paymentTransactionsInDatabase:(id)arg1 originatedOnDevice:(_Bool)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x00000001002b7510
+ (id)_predicateForWorldRegionType:(unsigned long long)arg1;	// IMP=0x00000001002b749c
+ (id)_predicateForWorldRegionLocaleIdentifier:(id)arg1;	// IMP=0x00000001002b747c
+ (id)_predicateForWorldRegionNamePattern:(id)arg1;	// IMP=0x00000001002b72a0
+ (id)_predicateForWorldRegionLocalizedContent;	// IMP=0x00000001002b727c
+ (id)regionIdentifiersInDatabase:(id)arg1 matchingName:(id)arg2 types:(id)arg3 localeIdentifier:(id)arg4 withRequest:(id)arg5 limit:(unsigned long long)arg6;	// IMP=0x00000001002b6d44
+ (id)_predicateForTransactionsMissingWorldRegionOnlyEligibleForProcessing:(_Bool)arg1;	// IMP=0x00000001002b67b8
+ (id)paymentTransactionsForTokenizedTransactionsWithRegionsInDatabase:(id)arg1;	// IMP=0x00000001002b64e0
+ (_Bool)hasTransactionsMissingWorldRegionEligibleForProcessingInDatabase:(id)arg1;	// IMP=0x00000001002b6420
+ (id)paymentTransactionsInDatabase:(id)arg1 missingWorldRegionWithLimit:(unsigned long long)arg2 onlyEligibleForProcessing:(_Bool)arg3;	// IMP=0x00000001002b6318
+ (id)paymentTransactionsRequiringReviewInDatabase:(id)arg1 forAccountIdentifier:(id)arg2;	// IMP=0x00000001002b60fc
+ (id)installmentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 installmentPlan:(id)arg3 withRedemptionType:(long long)arg4 startDate:(id)arg5 endDate:(id)arg6;	// IMP=0x00000001002b5cb8
+ (id)installmentPlanTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2;	// IMP=0x00000001002b5b08
+ (id)_predicateForTransactionSourceIdentifiers:(id)arg1 transactionTypes:(id)arg2 transactionSources:(id)arg3 transactionStatuses:(id)arg4 peerPaymentSubType:(long long)arg5 matchingMerchant:(id)arg6 merchantCategory:(long long)arg7 inRegions:(id)arg8 tags:(id)arg9 startDate:(id)arg10 endDate:(id)arg11 currencyCode:(id)arg12 amount:(id)arg13 amountComparison:(long long)arg14 rewardsValueUnit:(unsigned long long)arg15 rewardsValue:(id)arg16;	// IMP=0x00000001002b4d3c
+ (id)_predicateForRequest:(id)arg1;	// IMP=0x00000001002b4a88
+ (void)totalAmount:(id *)arg1 forTransactionsWithRequest:(id)arg2 count:(unsigned long long *)arg3 inDatabase:(id)arg4;	// IMP=0x00000001002b49b4
+ (id)paymentTransactionsInDatabase:(id)arg1 forPredicate:(id)arg2 limit:(long long)arg3;	// IMP=0x00000001002b472c
+ (unsigned long long)countInDatabase:(id)arg1 forRequest:(id)arg2;	// IMP=0x00000001002b4690
+ (id)paymentTransactionsInDatabase:(id)arg1 forRequest:(id)arg2;	// IMP=0x00000001002b44c0
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withRedemptionType:(long long)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x00000001002b41c4
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionType:(long long)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 startDate:(id)arg6 endDate:(id)arg7 limit:(long long)arg8;	// IMP=0x00000001002b3e44
+ (id)paymentTransactionsInDatabase:(id)arg1 withMerchantCategory:(long long)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 startDate:(id)arg6 endDate:(id)arg7 limit:(long long)arg8;	// IMP=0x00000001002b3ac4
+ (id)peerPaymentCounterpartHandlesforSource:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001002b3820
+ (unsigned long long)countInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withPeerPaymentCounterpartHandles:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x00000001002b3568
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMerchant:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 limit:(long long)arg6;	// IMP=0x00000001002b3210
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsMerchantIdentifierWithoutRegion:(unsigned long long)arg2 limit:(unsigned long long)arg3;	// IMP=0x00000001002b3050
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsMerchantIdentifier:(unsigned long long)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x00000001002b2e98
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsBrandIdentifier:(unsigned long long)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x00000001002b2ce0
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingPeerPaymentCounterpartHandles:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 limit:(long long)arg6;	// IMP=0x00000001002b29b4
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionTypes:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 limit:(long long)arg5;	// IMP=0x00000001002b278c
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 limit:(long long)arg4;	// IMP=0x00000001002b25c8
+ (long long)countInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6;	// IMP=0x00000001002b2510
+ (id)pendingPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x00000001002b211c
+ (id)approvedPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x00000001002b1dc8
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x00000001002b1bd4
+ (id)_predicateForTransactionSourceIdentifiers:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x00000001002b19e8
+ (id)paymentTransactionsInDatabase:(id)arg1 withServiceIdentifier:(id)arg2;	// IMP=0x00000001002b18f0
+ (id)closestPendingTransactionInDatabase:(id)arg1 fromTransactionDate:(id)arg2 withNotificationServiceData:(unsigned long long)arg3 forMerchantName:(id)arg4 forTransactionSourceIdentifiers:(id)arg5;	// IMP=0x00000001002b1738
+ (id)closestTransactionInDatabase:(id)arg1 fromTransaction:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x00000001002b0da0
+ (id)paymentTransactionsInDatabase:(id)arg1 withIdentifiers:(id)arg2 regions:(id *)arg3 tags:(id *)arg4;	// IMP=0x00000001002b0b60
+ (id)anyInDatabase:(id)arg1 withPaymentHash:(id)arg2 withTransactionSource:(unsigned long long)arg3 withNotificationServiceData:(unsigned long long)arg4 transactionSourceIdentifiers:(id)arg5;	// IMP=0x00000001002b0950
+ (id)mostRecentActiveTransactionInDatabase:(id)arg1;	// IMP=0x00000001002b0600
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1;	// IMP=0x00000001002b0544
+ (id)anyInDatabase:(id)arg1 withReferenceIdentifier:(id)arg2;	// IMP=0x00000001002b04b4
+ (id)anyInDatabase:(id)arg1 withIdentifier:(id)arg2;	// IMP=0x00000001002b0424
+ (id)anyInDatabase:(id)arg1 withServiceIdentifier:(id)arg2 forTransactionSourceIdentifier:(id)arg3;	// IMP=0x00000001002b02b4
+ (id)anyInDatabase:(id)arg1 withServiceIdentifier:(id)arg2 accountIdentifier:(id)arg3 accountType:(long long)arg4;	// IMP=0x00000001002b010c
+ (id)anyInDatabase:(id)arg1 withTransactionSourceIdentifier:(id)arg2;	// IMP=0x00000001002b007c
+ (id)anyInDatabase:(id)arg1 withPID:(id)arg2;	// IMP=0x00000001002affec
+ (void)deleteEntitiesForTransactionSource:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001002afa80
+ (void)truncateEntitiesForTransactionSourceIdentifiers:(id)arg1 withNotificationServiceData:(unsigned long long)arg2 suppressedFromUI:(unsigned long long)arg3 inDatabase:(id)arg4 toCount:(long long)arg5;	// IMP=0x00000001002af710
+ (id)insertPaymentTransaction:(id)arg1 withTransactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001002af680
+ (id)disambiguatedSQLForProperty:(id)arg1;	// IMP=0x00000001002af5e8
+ (id)joinClauseForProperty:(id)arg1;	// IMP=0x00000001002af274
+ (id)associationPropertyForEntityClass:(Class)arg1;	// IMP=0x00000001002af1dc
+ (id)databaseTable;	// IMP=0x00000001002af1d0
- (void)_createPaymentTransactionAuthentication;	// IMP=0x00000001002c4e04
- (_Bool)_hasValidMerchantData;	// IMP=0x00000001002c4d7c
- (id)_transactionSourceIdentifierObject;	// IMP=0x00000001002bf178
- (id)transactionAuthenticationContext;	// IMP=0x00000001002bef58
- (id)transactionAuthenticationResult;	// IMP=0x00000001002beda4
- (long long)accountType;	// IMP=0x00000001002bed50
- (id)passUniqueIdentifier;	// IMP=0x00000001002bec78
- (unsigned long long)mapsMerchantIdentifier;	// IMP=0x00000001002bec24
- (long long)transactionType;	// IMP=0x00000001002bebd0
- (id)dbPaymentTransactionArchive;	// IMP=0x00000001002beba8
- (id)transactionSourceIdentifier;	// IMP=0x00000001002beb54
- (id)transactionArchive;	// IMP=0x00000001002beac0
- (id)paymentApplication;	// IMP=0x00000001002bea18
- (id)accountIdentifier;	// IMP=0x00000001002bea04
- (id)serviceIdentifier;	// IMP=0x00000001002be9f0
- (id)identifier;	// IMP=0x00000001002be9dc
- (id)foreignExchangeInformation;	// IMP=0x00000001002be55c
- (id)merchant;	// IMP=0x00000001002bdf20
- (id)paymentTransaction;	// IMP=0x00000001002bcbe8
- (void)updateWithPaymentTransactionAmountModifiers:(id)arg1;	// IMP=0x00000001002bcb40
- (void)updateWithPaymentTransactionAwards:(id)arg1;	// IMP=0x00000001002bca98
- (void)removeMapsDataForIssueReportIdentifier:(id)arg1;	// IMP=0x00000001002bc9f0
- (void)updateWithMapsBrand:(id)arg1;	// IMP=0x00000001002bc684
- (void)updateWithMapsMerchant:(id)arg1;	// IMP=0x00000001002bc318
- (void)updateWithPaymentTransactionQuestions:(id)arg1;	// IMP=0x00000001002bc298
- (void)updateWithPaymentTransactionRewards:(id)arg1;	// IMP=0x00000001002bc218
- (void)updateWithPaymentTransactionFees:(id)arg1;	// IMP=0x00000001002bc198
- (void)updateWithPaymentAmounts:(id)arg1;	// IMP=0x00000001002bc0f0
- (void)updateWithMerchant:(id)arg1;	// IMP=0x00000001002bbb18
- (void)updateRedemptionType:(unsigned long long)arg1;	// IMP=0x00000001002bbabc
- (void)updateSuppressBehavior:(unsigned long long)arg1;	// IMP=0x00000001002bba60
- (void)updateWithPaymentTransaction:(id)arg1;	// IMP=0x00000001002b92c8
- (void)replaceWithPaymentTransaction:(id)arg1;	// IMP=0x00000001002b9098
- (void)_applyRewardsValuesToDictionary:(id)arg1 forTransaction:(id)arg2;	// IMP=0x00000001002b8d18
- (_Bool)deleteFromDatabase;	// IMP=0x00000001002afb30
- (id)initWithPaymentTransaction:(id)arg1 transactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001002ad09c

@end

