//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SQLiteEntity-Protocol.h"

@class NSString, SQLiteDatabase;

@interface SQLiteEntity : NSObject <SQLiteEntity>
{
    SQLiteDatabase *_database;	// 8 = 0x8
    long long _persistentID;	// 16 = 0x10
}

+ (_Bool)_insertValues:(id)arg1 intoTable:(id)arg2 withPersistentID:(long long)arg3 database:(id)arg4;	// IMP=0x0000000100048fe4
+ (void)applyPropertySetters:(id)arg1 toObject:(id)arg2 withProperties:(id)arg3 values:(id *)arg4;	// IMP=0x0000000100048938
+ (id)joinClauseForProperty:(id)arg1;	// IMP=0x00000001000474e8
+ (id)foreignKeyColumnForTable:(id)arg1;	// IMP=0x00000001000474e0
+ (id)foreignDatabaseTablesToDelete;	// IMP=0x00000001000474d8
+ (id)foreignDatabaseTableForProperty:(id)arg1;	// IMP=0x00000001000474d0
+ (id)foreignDatabaseColumnForProperty:(id)arg1;	// IMP=0x00000001000474c8
+ (id)disambiguatedSQLForProperty:(id)arg1;	// IMP=0x000000010004744c
+ (id)databaseTable;	// IMP=0x0000000100047400
+ (id)databaseValueForProperty:(id)arg1 clientValue:(id)arg2;	// IMP=0x00000001000473f8
+ (id)associationPropertyForEntityClass:(Class)arg1;	// IMP=0x00000001000473f0
+ (id)databasePropertyToSetClientProperty:(id)arg1;	// IMP=0x00000001000473e8
+ (id)databasePropertyToGetClientProperty:(id)arg1;	// IMP=0x00000001000473e0
+ (id)copyDatabaseDictionaryToSetClientDictionary:(id)arg1;	// IMP=0x00000001000471b0
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2 orderingProperties:(id)arg3 orderingDirections:(id)arg4 limit:(long long)arg5 groupingProperties:(id)arg6;	// IMP=0x000000010005b0a4
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2 orderingProperties:(id)arg3 orderingDirections:(id)arg4 limit:(long long)arg5;	// IMP=0x000000010005b094
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2 orderingProperties:(id)arg3 orderingDirections:(id)arg4;	// IMP=0x000000010005b084
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2 orderingProperties:(id)arg3;	// IMP=0x000000010005b074
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2;	// IMP=0x000000010005b064
+ (id)sumForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3;	// IMP=0x000000010005b048
+ (id)minValueForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3;	// IMP=0x000000010005b02c
+ (id)maxValueForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3;	// IMP=0x000000010005b010
+ (id)_aggregateValueForProperty:(id)arg1 function:(id)arg2 predicate:(id)arg3 database:(id)arg4;	// IMP=0x000000010005ada4
+ (long long)countInDatabase:(id)arg1 predicate:(id)arg2;	// IMP=0x000000010005ad80
+ (id)anyInDatabase:(id)arg1 predicate:(id)arg2;	// IMP=0x000000010005ac20
@property(readonly, nonatomic) long long persistentID; // @synthesize persistentID=_persistentID;
@property(readonly, nonatomic) SQLiteDatabase *database; // @synthesize database=_database;
- (_Bool)_deleteRowFromTable:(id)arg1 usingColumn:(id)arg2;	// IMP=0x00000001000495dc
- (id)_copyTableClusteredValuesWithValues:(id)arg1;	// IMP=0x000000010004942c
- (id)duplicateEntityAssigningNewPersistentID:(long long)arg1;	// IMP=0x0000000100048aa8
- (id)duplicateEntity;	// IMP=0x0000000100048a98
- (void)getValuesForProperties:(id)arg1 withApplier:(CDUnknownBlockType)arg2;	// IMP=0x0000000100048878
- (id)valueForProperty:(id)arg1;	// IMP=0x00000001000487c8
- (id)valueForExternalProperty:(id)arg1;	// IMP=0x00000001000487c0
- (_Bool)setValuesWithDictionary:(id)arg1;	// IMP=0x0000000100047f94
- (_Bool)setValue:(id)arg1 forProperty:(id)arg2;	// IMP=0x0000000100047ef4
- (void)setExternalValuesWithDictionary:(id)arg1;	// IMP=0x0000000100047ef0
- (id)valuesforProperties:(id)arg1;	// IMP=0x0000000100047958
@property(readonly, nonatomic) _Bool existsInDatabase;
- (_Bool)deleteFromDatabase;	// IMP=0x00000001000474f0
- (id)initWithPropertyValues:(id)arg1 inDatabase:(id)arg2;	// IMP=0x0000000100046e34
- (id)initWithPersistentID:(long long)arg1 inDatabase:(id)arg2;	// IMP=0x0000000100046de8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

