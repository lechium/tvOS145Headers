//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "SQLiteEntity.h"

@interface WorldRegion : SQLiteEntity
{
}

+ (id)_predicateForTransaction:(id)arg1;	// IMP=0x00000001001ea3a4
+ (id)_predicateForLocaleIdentifier:(id)arg1;	// IMP=0x00000001001ea384
+ (id)_predicateForNamePattern:(id)arg1;	// IMP=0x00000001001ea1a8
+ (id)_predicateForName:(id)arg1;	// IMP=0x00000001001ea188
+ (id)_predicateForLocalizedContent;	// IMP=0x00000001001ea164
+ (id)_predicateForCode:(id)arg1;	// IMP=0x00000001001ea144
+ (id)_predicateForLongitude:(double)arg1;	// IMP=0x00000001001ea0d0
+ (id)_predicateForLatitude:(double)arg1;	// IMP=0x00000001001ea05c
+ (id)_predicateForType:(unsigned long long)arg1;	// IMP=0x00000001001e9fe8
+ (id)_predicateForMUID:(id)arg1;	// IMP=0x00000001001e9fc8
+ (id)_predicateForParentPID:(id)arg1;	// IMP=0x00000001001e9fa8
+ (id)_predicateForPID:(id)arg1;	// IMP=0x00000001001e9f88
+ (id)_predicateForIdentifier:(id)arg1;	// IMP=0x00000001001e9f68
+ (id)disambiguatedSQLForProperty:(id)arg1;	// IMP=0x00000001001e9ed0
+ (id)joinClauseForProperty:(id)arg1;	// IMP=0x00000001001e9e1c
+ (void)deleteRegionsWithNoMatchingTransactionsInDatabase:(id)arg1;	// IMP=0x00000001001e9e04
+ (void)resetCoordinatesForAllRegionsInDatabase:(id)arg1;	// IMP=0x00000001001e9d14
+ (void)deleteAllRegionsInDatabase:(id)arg1;	// IMP=0x00000001001e9c74
+ (void)failedToAssociateTransaction:(id)arg1 error:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001e9be8
+ (void)associateTransaction:(id)arg1 withWorldRegion:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001e9b5c
+ (id)lastRegionErrorForTransaction:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001001e9ae0
+ (id)regionsFromQuery:(id)arg1 additionalProperties:(id)arg2;	// IMP=0x00000001001e9544
+ (id)regionsFromQuery:(id)arg1;	// IMP=0x00000001001e9534
+ (id)regionWithIdentifier:(id)arg1 localeIdentifier:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001e937c
+ (id)regionsForTransactionPID:(long long)arg1 localeIdentifier:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001e9150
+ (id)regionsMissingLocalizedContentForLocaleIdentifier:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001001e8e90
+ (_Bool)hasRegionsMissingLocalizedContentForLocaleIdentifier:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001001e8c98
+ (id)_sqlForRegionsMissingLocalizedContent;	// IMP=0x00000001001e8c8c
+ (id)insertOrUpdateRegion:(id)arg1 single:(_Bool)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001e80e4
+ (id)insertOrUpdateRegion:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001001e80d0
+ (id)updateSingleRegion:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00000001001e80bc
+ (id)regionsOfType:(unsigned long long)arg1 localeIdentifier:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001e7f1c
+ (_Bool)hasMultipleRegionsOfType:(unsigned long long)arg1 localeIdentifier:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00000001001e7d84
+ (id)regionsMatchingName:(id)arg1 types:(id)arg2 localeIdentifier:(id)arg3 inDatabase:(id)arg4;	// IMP=0x00000001001e78f8
+ (id)anyInDatabase:(id)arg1 withIdentifier:(id)arg2;	// IMP=0x00000001001e7868
+ (id)anyInDatabase:(id)arg1 withPID:(id)arg2;	// IMP=0x00000001001e77d8
+ (id)databaseTable;	// IMP=0x00000001001e77cc

@end

