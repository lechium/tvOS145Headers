//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "RPApplicationStateObserver-Protocol.h"
#import "RPSystemStateObserver-Protocol.h"

@class FBSDisplayLayoutMonitor, NSDate, NSNumber, NSString, RPApplicationStateMonitor, RPReportingAgent;
@protocol RPClientProtocol, RPSessionDelegate;

@interface RPSession : NSObject <RPSystemStateObserver, RPApplicationStateObserver>
{
    int _callingPID;	// 8 = 0x8
    id <RPClientProtocol> _clientProxy;	// 16 = 0x10
    id <RPSessionDelegate> _delegate;	// 24 = 0x18
    CDStruct_1b6d18a9 _lastSampleTimestamp;	// 32 = 0x20
    CDStruct_1b6d18a9 _sampleTimeOffset;	// 56 = 0x38
    _Bool _sessionIsResuming;	// 80 = 0x50
    int _sessionType;	// 84 = 0x54
    _Bool _isExempt;	// 88 = 0x58
    NSDate *_lastExemptTime;	// 96 = 0x60
    struct __CFUserNotification *_userNotificationStopRecording;	// 104 = 0x68
    FBSDisplayLayoutMonitor *_layoutMonitor;	// 112 = 0x70
    RPApplicationStateMonitor *_applicationStateMonitor;	// 120 = 0x78
    long long _levelOneElementCount;	// 128 = 0x80
    int _lockToResetToken;	// 136 = 0x88
    double _privacyAcknowledgementAlertTimeoutMinutes;	// 144 = 0x90
    _Bool _didAcceptMicrophonePermission;	// 152 = 0x98
    _Bool _didAcceptCameraPermission;	// 153 = 0x99
    long long _dispatchVideoCount;	// 160 = 0xa0
    long long _dispatchAudioCount;	// 168 = 0xa8
    struct _opaque_pthread_mutex_t _videoMutex;	// 176 = 0xb0
    struct _opaque_pthread_mutex_t _audioMutex;	// 240 = 0xf0
    _Bool _deviceLocked;	// 304 = 0x130
    _Bool _microphoneEnabled;	// 305 = 0x131
    _Bool _cameraEnabled;	// 306 = 0x132
    int _sessionState;	// 308 = 0x134
    NSString *_bundleID;	// 312 = 0x138
    NSNumber *_contextID;	// 320 = 0x140
    RPReportingAgent *_reportingAgent;	// 328 = 0x148
    struct CGSize _windowSize;	// 336 = 0x150
}

+ (unsigned long long)getRecordedFileSizeForMovieWriter:(id)arg1;	// IMP=0x000000010001104c
- (void).cxx_destruct;	// IMP=0x000000010001179c
@property(retain, nonatomic) RPReportingAgent *reportingAgent; // @synthesize reportingAgent=_reportingAgent;
@property(nonatomic) struct CGSize windowSize; // @synthesize windowSize=_windowSize;
@property(retain, nonatomic) NSNumber *contextID; // @synthesize contextID=_contextID;
@property(retain, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(nonatomic) int sessionState; // @synthesize sessionState=_sessionState;
@property(nonatomic) _Bool cameraEnabled; // @synthesize cameraEnabled=_cameraEnabled;
@property(nonatomic) _Bool microphoneEnabled; // @synthesize microphoneEnabled=_microphoneEnabled;
@property(nonatomic) _Bool deviceLocked; // @synthesize deviceLocked=_deviceLocked;
- (void)dispatchCompleted:(long long)arg1;	// IMP=0x00000001000116bc
- (_Bool)dispatchLimitReached:(long long)arg1;	// IMP=0x0000000100011600
- (void)setupDispatchLimits;	// IMP=0x00000001000115f8
- (void)handleResumeCaptureWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001000115f4
- (void)handleResumeContextIDFailure;	// IMP=0x00000001000115f0
- (void)handleTimerDidUpdate:(id)arg1;	// IMP=0x00000001000115ec
- (void)handleSystemAlertStop;	// IMP=0x00000001000115e8
- (void)handleFrontmostApplicationDidChange:(id)arg1;	// IMP=0x00000001000115e4
- (void)handleClientApplicationDidEnterForeground;	// IMP=0x00000001000115e0
- (void)handleClientApplicationDidEnterBackground;	// IMP=0x00000001000115dc
- (void)handleDeviceRestrictionWarning;	// IMP=0x00000001000115d8
- (void)handleDeviceLockedWarning;	// IMP=0x00000001000115d4
- (void)handleIncomingCallWarning;	// IMP=0x00000001000115d0
- (void)handleDisplayWarning;	// IMP=0x00000001000115cc
- (void)handleMemoryWarning;	// IMP=0x00000001000115c8
- (void)clientApplicationDidEnterForeground;	// IMP=0x00000001000114b8
- (void)clientApplicationDidEnterBackground;	// IMP=0x0000000100011398
- (void)frontmostApplicationDidChange:(id)arg1;	// IMP=0x0000000100011268
- (void)statusBarCoordinator:(id)arg1 invalidatedRegistrationWithError:(id)arg2;	// IMP=0x0000000100011264
- (_Bool)statusBarCoordinator:(id)arg1 receivedTapWithContext:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000100011244
- (void)timerDidUpdate:(id)arg1;	// IMP=0x0000000100011238
- (void)checkAndPlaySystemSessionSoundForRecordingOn:(_Bool)arg1;	// IMP=0x0000000100010fec
- (_Bool)showAlertRecordingCaptureSessionWithError:(id)arg1;	// IMP=0x0000000100010fcc
- (void)sessionReportCameraUsage:(long long)arg1;	// IMP=0x0000000100010fc8
- (id)serviceNameForReporting;	// IMP=0x0000000100010f5c
- (_Bool)showStopSystemSessionAlert;	// IMP=0x0000000100010f54
- (_Bool)shouldBypassAlertForTest;	// IMP=0x0000000100010f00
- (id)getNotificationBodyTextForSessionType:(int)arg1 cameraEnabled:(_Bool)arg2 microphoneEnabled:(_Bool)arg3;	// IMP=0x0000000100010d08
- (id)getNotificationTitleTextForSessionType:(int)arg1 bundleID:(id)arg2;	// IMP=0x0000000100010bb4
- (id)showAcknowledgementAlertWithMicrophone:(_Bool)arg1 camera:(_Bool)arg2;	// IMP=0x0000000100010140
- (_Bool)clientHasTestEntitlement;	// IMP=0x000000010000ff9c
- (_Bool)shouldSupressAlert;	// IMP=0x000000010000fdac
- (_Bool)getAcknowledgementAlertResultsWithMicrophone:(_Bool)arg1 cameraEnabled:(_Bool)arg2;	// IMP=0x000000010000fa48
- (id)checkApplicationForegroundRequirement;	// IMP=0x000000010000f944
- (id)checkSufficientFreeSpace;	// IMP=0x000000010000f818
- (id)getCallingConnectionBundleID;	// IMP=0x000000010000f778
- (_Bool)checkContextIDsMatch:(id)arg1;	// IMP=0x000000010000f578
- (id)checkContextIDRequirement;	// IMP=0x000000010000f430
- (id)checkDeviceLockedRequirement;	// IMP=0x000000010000f340
- (id)checkCaptureRequirementsWithMicrophoneEnabled:(_Bool)arg1 cameraEnabled:(_Bool)arg2;	// IMP=0x000000010000f148
- (void)handleUpdateDisplayLayout:(id)arg1;	// IMP=0x000000010000ef44
- (void)setUpFrontBoardServices;	// IMP=0x000000010000ef40
- (void)checkAndPlaySystemSessionSound:(_Bool)arg1;	// IMP=0x000000010000eebc
- (struct CGAffineTransform)CGAffineTransformFromFigTransformFlags:(unsigned long long)arg1;	// IMP=0x000000010000ec30
- (void)processSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 transformFlags:(unsigned long long)arg2 movieWriter:(id)arg3;	// IMP=0x000000010000eabc
- (void)updatePauseOffsetForSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 withSampleType:(int)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000010000e958
- (void)updatePauseOffsetFromVideoBuffer:(struct opaqueCMSampleBuffer *)arg1;	// IMP=0x000000010000e880
- (void)resumeSessionWithWindowLayerContextID:(unsigned int)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000010000e4e8
- (void)pauseSession;	// IMP=0x000000010000e3d4
- (void)updateProcessIDForAudioCaptureWithPID:(int)arg1;	// IMP=0x000000010000e200
- (void)notifyClientSessionDidStopWithError:(long long)arg1 movieURL:(id)arg2 showAlert:(_Bool)arg3;	// IMP=0x000000010000e144
- (void)updateClientProxy:(id)arg1 callingPID:(int)arg2 bundleID:(id)arg3;	// IMP=0x000000010000df04
- (void)startAcknowledgementAlertTimer;	// IMP=0x000000010000dd74
- (void)checkForAcknowledgementAlertTimeout;	// IMP=0x000000010000db88
- (void)reportSummaryEvent:(long long)arg1 recordedFileSize:(long long)arg2;	// IMP=0x000000010000da78
- (void)reportSessionEndReason:(id)arg1;	// IMP=0x000000010000d9f4
- (void)removeObserversForSession;	// IMP=0x000000010000d7c4
- (void)addObserversForSession;	// IMP=0x000000010000d6c4
- (void)startWithContextID:(id)arg1 windowSize:(struct CGSize)arg2;	// IMP=0x000000010000d4f0
- (void)dealloc;	// IMP=0x000000010000d3c4
- (void)invalidate;	// IMP=0x000000010000d294
- (id)initWithClientProxy:(id)arg1 sessionType:(int)arg2 callingPID:(int)arg3 bundleID:(id)arg4 delegate:(id)arg5;	// IMP=0x000000010000cf38

@end

