//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "SDUnlockTransport.h"

#import "IDSServiceDelegate-Protocol.h"
#import "SDAutoUnlockTransportProtocol-Protocol.h"

@class IDSService, NSDate, NSMapTable, NSMutableDictionary, NSNumber, NSObject, NSSet, NSString;
@protocol OS_dispatch_queue, SDAutoUnlockTransportClient;

__attribute__((visibility("hidden")))
@interface SDAutoUnlockTransport : SDUnlockTransport <IDSServiceDelegate, SDAutoUnlockTransportProtocol>
{
    NSDate *_lastSeenWatchDate;	// 8 = 0x8
    NSNumber *_watchExistedInUnlockList;	// 16 = 0x10
    NSNumber *_watchCurrentlyInList;	// 24 = 0x18
    IDSService *_autoUnlockService;	// 32 = 0x20
    id <SDAutoUnlockTransportClient> _primaryClient;	// 40 = 0x28
    IDSService *_idsService;	// 48 = 0x30
    IDSService *_activityService;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_transportQueue;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_clientQueue;	// 72 = 0x48
    NSMapTable *_clientMap;	// 80 = 0x50
    NSMutableDictionary *_completionHandlers;	// 88 = 0x58
    NSMutableDictionary *_sendIdentifierToSessionID;	// 96 = 0x60
    NSMutableDictionary *_sendDates;	// 104 = 0x68
    NSDate *_lastSendDate;	// 112 = 0x70
    NSMutableDictionary *_autoUnlockDeviceCache;	// 120 = 0x78
    NSMutableDictionary *_cloudPairRetryRecords;	// 128 = 0x80
    NSMutableDictionary *_cachedBluetoothIDToUniqueIDs;	// 136 = 0x88
    NSSet *_cachedApproveBluetoothIDs;	// 144 = 0x90
}

+ (id)sharedTransport;	// IMP=0x00000001001408a0
- (void).cxx_destruct;	// IMP=0x0000000100147fc0
@property(retain, nonatomic) NSSet *cachedApproveBluetoothIDs; // @synthesize cachedApproveBluetoothIDs=_cachedApproveBluetoothIDs;
@property(retain, nonatomic) NSMutableDictionary *cachedBluetoothIDToUniqueIDs; // @synthesize cachedBluetoothIDToUniqueIDs=_cachedBluetoothIDToUniqueIDs;
@property(retain, nonatomic) NSMutableDictionary *cloudPairRetryRecords; // @synthesize cloudPairRetryRecords=_cloudPairRetryRecords;
@property(retain, nonatomic) NSMutableDictionary *autoUnlockDeviceCache; // @synthesize autoUnlockDeviceCache=_autoUnlockDeviceCache;
@property(retain, nonatomic) NSDate *lastSendDate; // @synthesize lastSendDate=_lastSendDate;
@property(retain) NSMutableDictionary *sendDates; // @synthesize sendDates=_sendDates;
@property(retain, nonatomic) NSMutableDictionary *sendIdentifierToSessionID; // @synthesize sendIdentifierToSessionID=_sendIdentifierToSessionID;
@property(retain) NSMutableDictionary *completionHandlers; // @synthesize completionHandlers=_completionHandlers;
@property(retain, nonatomic) NSMapTable *clientMap; // @synthesize clientMap=_clientMap;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *clientQueue; // @synthesize clientQueue=_clientQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *transportQueue; // @synthesize transportQueue=_transportQueue;
@property(retain, nonatomic) IDSService *activityService; // @synthesize activityService=_activityService;
@property(retain, nonatomic) IDSService *idsService; // @synthesize idsService=_idsService;
@property __weak id <SDAutoUnlockTransportClient> primaryClient; // @synthesize primaryClient=_primaryClient;
- (id)autoUnlockService;	// IMP=0x0000000100147db8
- (id)state;	// IMP=0x00000001001479fc
- (_Bool)pairingRequestIsValidForDeviceID:(id)arg1 messageContext:(id)arg2;	// IMP=0x0000000100147774
- (_Bool)disableEncryption;	// IMP=0x000000010014774c
- (_Bool)showOtherDevices;	// IMP=0x0000000100147724
- (_Bool)showIDInName;	// IMP=0x00000001001476fc
@property(retain, nonatomic) NSNumber *watchCurrentlyInList; // @synthesize watchCurrentlyInList=_watchCurrentlyInList;
@property(retain, nonatomic) NSNumber *watchExistedInUnlockList; // @synthesize watchExistedInUnlockList=_watchExistedInUnlockList;
@property(retain, nonatomic) NSDate *lastSeenWatchDate; // @synthesize lastSeenWatchDate=_lastSeenWatchDate;
@property(readonly, nonatomic) _Bool watchSeenRecently;
- (void)resetAppleWatchExisted;	// IMP=0x0000000100146fd8
@property(readonly, nonatomic) _Bool appleWatchExisted;
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 hasBeenDeliveredWithContext:(id)arg4;	// IMP=0x0000000100146c70
- (void)service:(id)arg1 account:(id)arg2 incomingUnhandledProtobuf:(id)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x0000000100146374
- (void)service:(id)arg1 nearbyDevicesChanged:(id)arg2;	// IMP=0x00000001001461ac
- (void)service:(id)arg1 devicesChanged:(id)arg2;	// IMP=0x0000000100146078
- (id)dataFromUUID:(id)arg1;	// IMP=0x0000000100145ffc
- (id)transferDataFromPayload:(id)arg1 sessionID:(id)arg2;	// IMP=0x0000000100145f08
- (id)sendPayload:(id)arg1 toDevice:(id)arg2 type:(unsigned short)arg3 sessionID:(id)arg4 queueOneID:(id)arg5 wantsACK:(_Bool)arg6 timeout:(id)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x0000000100145ec4
- (void)sendPayload:(id)arg1 toDevice:(id)arg2 type:(unsigned short)arg3 sessionID:(id)arg4 queueOneID:(id)arg5 timeout:(id)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x0000000100145e90
- (void)sendPayload:(id)arg1 toDevice:(id)arg2 type:(unsigned short)arg3 sessionID:(id)arg4 queueOneID:(id)arg5 timeout:(id)arg6 errorHandler:(CDUnknownBlockType)arg7;	// IMP=0x0000000100145d94
- (void)sendPayload:(id)arg1 toDevice:(id)arg2 type:(unsigned short)arg3 sessionID:(id)arg4 timeout:(id)arg5 errorHandler:(CDUnknownBlockType)arg6;	// IMP=0x0000000100145d60
- (void)loadCloudPairRetries;	// IMP=0x0000000100145c90
- (_Bool)canRetryCloudPairingForDeviceID:(id)arg1 useShortDate:(_Bool)arg2;	// IMP=0x0000000100145a44
- (void)updateRetryDatesForDeviceIDs:(id)arg1;	// IMP=0x00000001001456e0
- (void)triggerCloudPairRetryWithShortRetryDeviceIDs:(id)arg1;	// IMP=0x00000001001456dc
- (void)handleSuccessfulMessageSentWithIdentifier:(id)arg1 sessionID:(id)arg2;	// IMP=0x00000001001455b0
- (id)stableBluetoothIdentifierForIDSDevice:(id)arg1;	// IMP=0x00000001001455a0
- (id)connectionCacheDevices;	// IMP=0x0000000100145440
- (_Bool)localDeviceIDSRegistered;	// IMP=0x0000000100145240
- (_Bool)activityServiceHasWatch;	// IMP=0x0000000100145040
- (id)placeholderDevice;	// IMP=0x0000000100144ee0
- (void)updateBluetoothIDCache;	// IMP=0x0000000100144b84
- (void)logBluetoothIDCache;	// IMP=0x0000000100144ab8
- (id)cachedIDSDeviceIDsForBluetoothID:(id)arg1;	// IMP=0x0000000100144a38
- (id)idsDeviceIDsForBluetoothID:(id)arg1;	// IMP=0x0000000100144848
- (id)idsDeviceForBluetoothID:(id)arg1;	// IMP=0x0000000100144690
- (id)idsDeviceForUniqueID:(id)arg1;	// IMP=0x00000001001444d8
- (id)proxyBluetoothDeviceIDForDeviceID:(id)arg1;	// IMP=0x00000001001443ec
- (id)nameForDevice:(id)arg1;	// IMP=0x00000001001442f0
- (_Bool)macVersionEligibleForDeviceID:(id)arg1;	// IMP=0x0000000100143fc0
- (_Bool)watchVersionEligibleForDevice:(id)arg1;	// IMP=0x0000000100143ea8
- (id)modelNameForDevice:(id)arg1;	// IMP=0x0000000100143e30
- (void)updateApproveBluetoothIDs;	// IMP=0x0000000100143b20
- (id)approveBluetoothIDs;	// IMP=0x0000000100143a78
- (id)autoUnlockDeviceForIDSDevice:(id)arg1 cloudPaired:(_Bool)arg2 cached:(_Bool)arg3;	// IMP=0x0000000100143370
- (id)autoUnlockDeviceForIDSDevice:(id)arg1;	// IMP=0x000000010014335c
- (id)onqueue_enabledAutoUnlockDevicesUsingCache:(_Bool)arg1;	// IMP=0x0000000100142ff8
- (id)enabledAutoUnlockDevicesUsingCache:(_Bool)arg1;	// IMP=0x0000000100142eb4
- (id)enabledAutoUnlockDevices;	// IMP=0x0000000100142ea4
- (id)onqueue_autoUnlockEligibleDevices:(_Bool)arg1;	// IMP=0x0000000100142754
- (id)autoUnlockEligibleDevicesWithCloudPairing:(_Bool)arg1;	// IMP=0x0000000100142610
- (id)autoUnlockEligibleDevices;	// IMP=0x0000000100142600
- (id)onqueue_devicesWithLTKs;	// IMP=0x00000001001423fc
- (id)devicesWithLTKs;	// IMP=0x00000001001422b0
- (id)autoUnlockDeviceForBluetoothID:(id)arg1 cached:(_Bool)arg2;	// IMP=0x0000000100142230
- (id)autoUnlockDeviceForBluetoothID:(id)arg1;	// IMP=0x0000000100142220
- (id)autoUnlockDeviceForDeviceID:(id)arg1;	// IMP=0x00000001001421b4
- (id)modelIdentifierForDeviceID:(id)arg1;	// IMP=0x0000000100142160
- (long long)deviceTypeForDevice:(id)arg1;	// IMP=0x0000000100141ff0
- (long long)deviceTypeForDeviceID:(id)arg1;	// IMP=0x0000000100141f98
- (id)deviceNameForDeviceID:(id)arg1;	// IMP=0x0000000100141f44
- (id)idsMacDeviceIDs;	// IMP=0x0000000100141d40
- (id)idsDevicesIDs;	// IMP=0x0000000100141bb0
- (_Bool)deviceNearby;	// IMP=0x0000000100141b64
- (_Bool)isDeviceSatellitePaired;	// IMP=0x0000000100141a6c
- (id)activeDevice;	// IMP=0x0000000100141904
- (id)pairedAutoUnlockDevice;	// IMP=0x00000001001418a4
- (id)pairedDeviceID;	// IMP=0x0000000100141850
- (id)onqueue_bluetoothDeviceIdentifiers;	// IMP=0x000000010014169c
- (id)bluetoothDeviceIdentifiers;	// IMP=0x0000000100141558
- (id)onqueue_bluetoothIDForIDSID:(id)arg1;	// IMP=0x0000000100141388
- (id)bluetoothIDForIDSID:(id)arg1;	// IMP=0x000000010014118c
- (void)clearAutoUnlockDeviceCache;	// IMP=0x00000001001410ec
- (void)refreshAutoUnlockDeviceCache;	// IMP=0x00000001001410ac
- (void)logDevices;	// IMP=0x0000000100140fb8
- (void)removeClientForIdentifier:(id)arg1;	// IMP=0x0000000100140c84
- (void)addClient:(id)arg1 forIdentifer:(id)arg2;	// IMP=0x0000000100140b54
- (id)init;	// IMP=0x000000010014090c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

