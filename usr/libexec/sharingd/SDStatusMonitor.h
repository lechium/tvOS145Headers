//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "MCProfileConnectionObserver-Protocol.h"

@class BluetoothManager, CNContact, CNContactStore, CUSystemMonitor, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSMutableSet, NSMutableString, NSNumber, NSSet, NSString, SDAirDropServer, SFPowerSource;

__attribute__((visibility("hidden")))
@interface SDStatusMonitor : NSObject <MCProfileConnectionObserver>
{
    _Bool _activateStarted;	// 8 = 0x8
    NSNumber *_airDropAllowed;	// 16 = 0x10
    int _airDropCount;	// 24 = 0x18
    int _airDropModeNotifyToken;	// 28 = 0x1c
    _Bool _airDropPublished;	// 32 = 0x20
    int _airPlayPrefsToken;	// 36 = 0x24
    NSNumber *_backlightOn;	// 40 = 0x28
    int _backlightLevelToken;	// 48 = 0x30
    NSString *_bonjourName;	// 56 = 0x38
    _Bool _carplayConnected;	// 64 = 0x40
    NSMutableDictionary *_certificates;	// 72 = 0x48
    NSString *_computerName;	// 80 = 0x50
    NSNumber *_computerToComputer;	// 88 = 0x58
    NSString *_consoleUser;	// 96 = 0x60
    unsigned int _consoleUserID;	// 104 = 0x68
    CNContactStore *_contactStore;	// 112 = 0x70
    NSString *_currentDiscoverableMode;	// 120 = 0x78
    NSString *_deviceInformation;	// 128 = 0x80
    _Bool _deviceIsHighPriority;	// 136 = 0x88
    NSNumber *_deviceKeyBagState;	// 144 = 0x90
    NSNumber *_deviceKeyBagUnlocked;	// 152 = 0x98
    NSNumber *_deviceSupportsWAPI;	// 160 = 0xa0
    NSNumber *_deviceUIUnlocked;	// 168 = 0xa8
    _Bool _deviceWasUnlockedOnce;	// 176 = 0xb0
    struct __CFRunLoopSource *_dynamicStoreSource;	// 184 = 0xb8
    _Bool _finderAirDropEnabled;	// 192 = 0xc0
    SDAirDropServer *_finderServer;	// 200 = 0xc8
    NSNumber *_handoffVisible;	// 208 = 0xd0
    NSMutableDictionary *_identities;	// 216 = 0xd8
    int _keyBagUnlockToken;	// 224 = 0xe0
    NSString *_localHostName;	// 232 = 0xe8
    long long _mediaAccessControlSetting;	// 240 = 0xf0
    NSDictionary *_mountPoints;	// 248 = 0xf8
    NSString *_myAppleID;	// 256 = 0x100
    NSString *_myAppleIDCommonName;	// 264 = 0x108
    struct __SecCertificate *_myAppleIDIntermediateCertificate;	// 272 = 0x110
    struct __SecCertificate *_myAppleIDCertificate;	// 280 = 0x118
    struct __SecIdentity *_myAppleIDSecIdentity;	// 288 = 0x120
    NSMutableString *_myEmailHashes;	// 296 = 0x128
    NSMutableString *_myPhoneHashes;	// 304 = 0x130
    struct _DNSServiceRef_t *_nameMonitor;	// 312 = 0x138
    _Bool _needsExitForLocaleChange;	// 320 = 0x140
    NSString *_netbiosName;	// 328 = 0x148
    unsigned int _notifierObject;	// 336 = 0x150
    struct IONotificationPort *_notifyPortRef;	// 344 = 0x158
    NSDictionary *_odisksMountPoints;	// 352 = 0x160
    _Bool _pairedWatchHasLongPasscode;	// 360 = 0x168
    long long _pairedWatchWristState;	// 368 = 0x170
    NSNumber *_personalHotspotAutoState;	// 376 = 0x178
    _Bool _personalHotspotFamilyEnabled;	// 384 = 0x180
    NSMutableDictionary *_personalHotspotFamilyStates;	// 392 = 0x188
    NSNumber *_personalHotspotAllowed;	// 400 = 0x190
    struct __IOPMConnection *_pmConnection;	// 408 = 0x198
    NSMutableSet *_preventExitForLocaleReasons;	// 416 = 0x1a0
    unsigned int _rootPort;	// 424 = 0x1a8
    NSNumber *_screenOn;	// 432 = 0x1b0
    NSMutableDictionary *_serverNames;	// 440 = 0x1b8
    _Bool _sleepModeOn;	// 448 = 0x1c0
    struct __SCPreferences *_smbPreferences;	// 456 = 0x1c8
    NSMutableDictionary *_ssidHashes;	// 464 = 0x1d0
    CUSystemMonitor *_systemMonitor;	// 472 = 0x1d8
    unsigned int _systemUIFlags;	// 480 = 0x1e0
    int _uiLockStatusToken;	// 484 = 0x1e4
    NSNumber *_wirelessAccessPoint;	// 488 = 0x1e8
    NSString *_workgroup;	// 496 = 0x1f0
    long long _watchWristState;	// 504 = 0x1f8
    NSString *_requestedDiscoverableMode;	// 512 = 0x200
    struct __WiFiDeviceClient *_wifiDevice;	// 520 = 0x208
    struct __WiFiDeviceClient *_awdlDevice;	// 528 = 0x210
    struct __WiFiManagerClient *_wifiManager;	// 536 = 0x218
    _Bool _wifiDeviceAttachmentRegistered;	// 544 = 0x220
    _Bool _wifiScheduledOnRunLoop;	// 545 = 0x221
    BluetoothManager *_bluetoothManager;	// 552 = 0x228
    int _screenBlankedToken;	// 560 = 0x230
    NSMutableDictionary *_longHashesToContactIdentifier;	// 568 = 0x238
    NSMutableDictionary *_mediumHashesToContactIdentifier;	// 576 = 0x240
    NSMutableSet *_shortHashes;	// 584 = 0x248
    _Bool _controlCenterVisible;	// 592 = 0x250
    _Bool _multipleUsersLoggedIn;	// 593 = 0x251
    CNContact *___meCard;	// 600 = 0x258
    NSDictionary *_awdlState;	// 608 = 0x260
    NSDate *_lastDarkWakeDate;	// 616 = 0x268
    NSSet *_effectiveBlacklistedAppBundleIDs;	// 624 = 0x270
}

+ (_Bool)enableOOBPCredentialLogging;	// IMP=0x0000000100190000
+ (_Bool)enableNewHashing;	// IMP=0x000000010018ffd4
+ (_Bool)isBuddyCompleted;	// IMP=0x000000010018f910
+ (_Bool)b332PairingEnabled;	// IMP=0x000000010018f8bc
+ (long long)shareSheetMaxSuggestions;	// IMP=0x000000010018f340
+ (double)b332BTAddressRotationDelay;	// IMP=0x000000010018e694
+ (id)sharedMonitor;	// IMP=0x0000000100186500
- (void).cxx_destruct;	// IMP=0x0000000100193954
@property(readonly) _Bool multipleUsersLoggedIn; // @synthesize multipleUsersLoggedIn=_multipleUsersLoggedIn;
@property(readonly) _Bool controlCenterVisible; // @synthesize controlCenterVisible=_controlCenterVisible;
@property(readonly) NSSet *effectiveBlacklistedAppBundleIDs; // @synthesize effectiveBlacklistedAppBundleIDs=_effectiveBlacklistedAppBundleIDs;
@property(readonly) NSDate *lastDarkWakeDate; // @synthesize lastDarkWakeDate=_lastDarkWakeDate;
@property(readonly) NSDictionary *awdlState; // @synthesize awdlState=_awdlState;
- (void)logWiFiPowerState;	// IMP=0x0000000100193848
- (void)clearWirelessState;	// IMP=0x000000010019380c
- (void)clearOperationModeInfo;	// IMP=0x00000001001937c4
- (void)installSSIDCacheMonitor;	// IMP=0x0000000100193594
- (void)installWiFiPasswordSharingMonitor;	// IMP=0x0000000100193460
- (void)handleWiFiPasswordSharingChanged;	// IMP=0x0000000100193438
- (id)stringForWatchWristState:(long long)arg1;	// IMP=0x00000001001933e0
@property(readonly) long long watchWristState;
- (void)updateWatchWristState:(long long)arg1;	// IMP=0x00000001001932d4
- (void)installWristStateMonitor;	// IMP=0x00000001001932d0
- (void)installVolumesMonitor;	// IMP=0x00000001001932cc
- (void)installUserPictureMonitor;	// IMP=0x00000001001932c8
- (void)installUILockStatusMonitor;	// IMP=0x00000001001932c4
- (void)installSystemUIMonitor;	// IMP=0x00000001001932c0
- (void)installSpringBoardStateMonitor;	// IMP=0x000000010019318c
- (_Bool)smbConfiguration:(struct __SCPreferences *)arg1 netBiosName:(id *)arg2 workgroup:(id *)arg3;	// IMP=0x0000000100193184
- (void)reloadSMBConfInfo;	// IMP=0x0000000100193030
- (void)installSMBPreferencesMonitor;	// IMP=0x000000010019302c
- (void)installSleepWakeCallBack;	// IMP=0x0000000100192f78
- (void)installSleepNotification;	// IMP=0x0000000100192f74
- (void)handleSleepWakeCallBack:(unsigned int)arg1 messageArguement:(void *)arg2;	// IMP=0x0000000100192d8c
- (void)installSleepStateMonitor;	// IMP=0x0000000100192d88
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)arg1 userInfo:(id)arg2;	// IMP=0x0000000100192d7c
@property(readonly) SFPowerSource *localPowerSource;
- (void)updateLocalPowerSource:(id)arg1;	// IMP=0x0000000100192ce8
- (void)handleMISStateChanged:(id)arg1;	// IMP=0x0000000100192c68
- (void)installMISMonitor;	// IMP=0x0000000100192c04
- (void)updatePairedWatchHasLongPasscode:(_Bool)arg1;	// IMP=0x0000000100192b1c
@property(readonly) _Bool pairedWatchHasLongPasscode;
- (void)updatePairedWatchLockState:(int)arg1;	// IMP=0x0000000100192a0c
@property(readonly) int pairedWatchLockState;
- (void)updatePairedWatchWristState:(long long)arg1;	// IMP=0x0000000100192910
@property(readonly) long long pairedWatchWristState;
- (void)handleNameMonitorCallBack:(const char *)arg1 flags:(unsigned int)arg2 error:(int)arg3;	// IMP=0x0000000100192834
- (void)updateBlacklistedAppBundleIDs;	// IMP=0x000000010019270c
- (void)managedConfigurationSettingsChanged:(id)arg1;	// IMP=0x00000001001926c8
- (void)installManagedConfigurationMonitor;	// IMP=0x000000010019260c
- (void)installLocaleChangeMonitor;	// IMP=0x00000001001923e0
- (void)installKeyBagUnlockMonitor;	// IMP=0x0000000100192264
- (void)installFinderSidebarPrefsMonitor;	// IMP=0x0000000100192260
- (void)installDynamicStoreCallBack;	// IMP=0x0000000100192014
- (void)handleDynamicStoreCallback:(struct __SCDynamicStore *)arg1 changedKeys:(struct __CFArray *)arg2;	// IMP=0x0000000100191d54
- (void)installDisplaySleepMonitor;	// IMP=0x0000000100191d50
- (void)installDisplayConfigurationMonitor;	// IMP=0x0000000100191d4c
- (void)installCoreTelephonyMonitor;	// IMP=0x0000000100191d48
- (void)installContactsMonitor;	// IMP=0x0000000100191b94
- (void)contactsStoreMeCardChanged:(id)arg1;	// IMP=0x0000000100191a88
- (void)contactStoreDidChange:(id)arg1;	// IMP=0x0000000100191940
- (void)installClamshellStateChangeMonitor;	// IMP=0x000000010019193c
- (void)uninstallCarPlayStatusMonitor;	// IMP=0x0000000100191938
- (void)installWirelessCarPlayMonitor;	// IMP=0x0000000100191934
- (void)installCarPlayStatusMonitor;	// IMP=0x0000000100191930
- (void)restartBonjourNameMonitor;	// IMP=0x00000001001918e0
- (void)uninstallBonjourNameMonitor;	// IMP=0x00000001001918b4
- (void)installBonjourNameMonitor;	// IMP=0x00000001001917a0
- (void)logBluetoothPowerState;	// IMP=0x00000001001916d0
- (void)logBluetoothAvailabilityState:(_Bool)arg1;	// IMP=0x0000000100191610
- (void)installBluetoothMonitor;	// IMP=0x00000001001913c8
- (void)bluetoothAddressChanged;	// IMP=0x000000010019135c
- (void)bluetoothAvailabilityChange:(id)arg1;	// IMP=0x00000001001912d8
- (void)airplaneModeChanged;	// IMP=0x00000001001912c4
- (void)installAirplaneModeMonitor;	// IMP=0x00000001001912c0
- (void)installBacklightMonitor;	// IMP=0x00000001001912bc
- (void)updateWirelessDevice;	// IMP=0x0000000100190b3c
- (void)installWirelessMonitor;	// IMP=0x0000000100190ab0
- (void)updateAWDLStateInfo;	// IMP=0x0000000100190a68
- (void)handleAWDLState:(id)arg1;	// IMP=0x0000000100190864
- (void)installAppleIDAccountInfoMonitor;	// IMP=0x00000001001907a0
- (void)appleIDAccountInfoChanged:(id)arg1;	// IMP=0x00000001001906f8
- (void)installAppleIDUsernameMonitor;	// IMP=0x0000000100190668
- (long long)mediaAccessControlSetting;	// IMP=0x0000000100190660
- (void)updateMediaAccessControlSetting:(_Bool)arg1;	// IMP=0x0000000100190594
- (void)installAirPlayPreferencesMonitor;	// IMP=0x00000001001904f4
- (void)logAirDropTransactionForClientServer:(_Bool)arg1 beginEnd:(_Bool)arg2 count:(int)arg3;	// IMP=0x00000001001903f4
@property(readonly) _Bool wirelessCarPlay;
@property(readonly) _Bool wirelessAccessPoint;
@property(readonly) _Bool wifiUserPowerPreference;
@property(readonly) _Bool testDiskFull;
@property(readonly) _Bool sleepModeOn;
@property(readonly) _Bool signedIntoPrimaryiCloudAccount;
@property(readonly) _Bool showThisComputer;
@property(readonly) _Bool showMeInWormhole;
@property(readonly) _Bool screenOn;
@property(readonly) _Bool runningAsSetupUser;
@property(readonly) _Bool registerAllInterfaces;
@property(readonly) _Bool myAppleIDIsManaged;
@property(readonly) _Bool internetSharingEnabled;
@property(readonly) _Bool ignoreIconDiskCache;
@property(readonly) _Bool handoffVisible;
@property(readonly) _Bool forceP2P;
@property(readonly) _Bool forceAWDL;
@property(readonly) _Bool finderAirDropEnabled;
@property(readonly) _Bool enableXML;
@property(readonly) _Bool enableWebloc;
@property(readonly) _Bool enableStreamDebugging;
@property(readonly) _Bool enableStrangers;
@property(readonly) _Bool enablePKZip;
@property(readonly) _Bool enableHotspotFallback;
@property(readonly) _Bool enableDVZip;
@property(readonly) _Bool enableDemoMode;
@property(readonly) _Bool enableDebugMode;
@property(readonly) _Bool enableContinuity;
@property(readonly) _Bool enableBugs;
@property(readonly) _Bool enableAllRecents;
@property(readonly) _Bool enableAirDropReceiving;
@property(readonly) _Bool enableAirDropAdvertising;
@property(readonly) _Bool eduModeEnabled;
@property(readonly) _Bool dockHasDownloadsFolder;
@property(readonly) _Bool disableTLS;
@property(readonly) _Bool disableRotation;
@property(readonly) _Bool disableExtractMediaFromBundles;
@property(readonly) _Bool disableQuarantine;
@property(readonly) _Bool disablePipelining;
@property(readonly) _Bool disablePictureQuery;
@property(readonly) _Bool disablePeopleSuggestions;
@property(readonly) _Bool disableContinuityTLS;
@property(readonly) _Bool disableCompression;
@property(readonly) _Bool disableAutoAccept;
@property(readonly) _Bool deviceWasUnlockedOnce;
@property(readonly) _Bool deviceUIUnlocked;
@property(readonly) _Bool deviceSupportsWAPI;
@property(readonly) _Bool deviceSupportsRanging;
@property(readonly) _Bool deviceSupportsContinuity;
@property(readonly) _Bool deviceRequiresNewRanging;
@property(readonly) _Bool deviceKeyBagUnlocked;
@property(readonly) _Bool deviceKeyBagLocking;
@property(readonly) _Bool deviceKeyBagLocked;
@property(readonly) _Bool deviceKeyBagDisabled;
@property(readonly) _Bool currentConsoleUser;
@property(readonly) _Bool connectedEnabled;
@property(readonly) _Bool computerToComputer;
@property(readonly) _Bool coalesceMe;
@property(readonly) _Bool carplayConnected;
@property(readonly) _Bool bypassLTKeyAbort;
@property(readonly) _Bool browseAllInterfaces;
@property(readonly) _Bool bonjourEnabled;
@property(readonly) _Bool backlightOn;
@property(readonly) _Bool alwaysSendPayload;
@property(readonly) _Bool alwaysAutoAccept;
@property(readonly) _Bool altDSIDNeedsFixing;
@property(readonly) _Bool allEnabled;
@property(readonly, getter=isAirDropAvailable) _Bool airdropAvailable;
- (void)updateAirDropAllowed;	// IMP=0x000000010018f590
@property(readonly, getter=isAirDropAllowed) _Bool airdropAllowed;
@property(readonly) int workgroupThreshold;
@property(readonly) NSString *workgroup;
@property(readonly) unsigned int systemUIFlags;
@property(readonly) NSString *someComputerName;
@property(readonly) int sidebarMaxCount;
@property(readonly) NSString *netbiosName;
@property(readonly) NSData *myShortHashesForAirDrop;
@property(readonly) NSData *myMediumHashes;
@property(readonly) NSString *myPrimaryEmail;
@property(readonly) NSString *myGivenName;
@property(readonly) NSString *myName;
@property(readonly) NSString *myEmail;
@property(readonly) NSDictionary *myAppleIDValidationRecord;
@property(readonly) NSArray *myAppleIDPhoneNumbers;
@property(readonly) NSString *myAppleIDPhoneHash;
@property(readonly) NSString *myAppleIDEmailHash;
@property(readonly) NSArray *myAppleIDEmailAddresses;
@property(readonly) NSString *myAppleIDCommonName;
- (id)_myAppleID;	// IMP=0x000000010018e988
@property(readonly) NSString *myAppleID;
@property(readonly) NSString *myAltDSID;
@property(readonly) NSString *myAccountAppleID;
@property(readonly) NSString *modelName;
@property(readonly) NSString *modelCode;
@property(readonly) int minPersonImageSize;
- (void)clearLocalHostName;	// IMP=0x000000010018e658
@property(readonly) NSString *localHostName;
@property(readonly) long long deviceKeyBagState;
@property(readonly) NSString *deviceInformation;
- (void)clearConsoleUser;	// IMP=0x000000010018e0fc
@property(readonly) NSString *consoleUser;
- (void)clearComputerName;	// IMP=0x000000010018e07c
@property(readonly) NSString *computerName;
@property(readonly) NSString *bonjourName;
@property(readonly) NSData *bluetoothAddress;
- (id)awdlStateInfo;	// IMP=0x000000010018dec0
@property(readonly) NSArray *awdlPeerList;
@property(readonly) NSDictionary *awdlInfo;
@property _Bool airplaneModeEnabled;
@property _Bool wirelessEnabled;
@property __weak SDAirDropServer *finderServer;
@property _Bool bluetoothEnabled;
@property _Bool airDropPublished;
- (id)wifiSSIDForSSIDHash:(id)arg1;	// IMP=0x000000010018d980
- (unsigned int)wifiPasswordSharingAvailability;	// IMP=0x000000010018d79c
- (id)defaultWiFiDevice;	// IMP=0x000000010018d764
- (struct __WiFiManagerClient *)wifiManager;	// IMP=0x000000010018d75c
- (_Bool)_multipleUsersLoggedIn;	// IMP=0x000000010018d754
- (void)postNotification:(id)arg1;	// IMP=0x000000010018d744
- (void)postNotification:(id)arg1 userInfo:(id)arg2;	// IMP=0x000000010018d6b4
- (void)removePreventExitForLocaleReason:(id)arg1;	// IMP=0x000000010018d518
- (void)addPreventExitForLocaleReason:(id)arg1;	// IMP=0x000000010018d3d0
@property(readonly) _Bool simStateReady;
- (long long)signalStrength;	// IMP=0x000000010018d3c0
- (void)updatePersonalHotspotAllowed;	// IMP=0x000000010018d2d8
@property(readonly) _Bool personalHotspotAllowed;
- (unsigned char)networkType;	// IMP=0x000000010018d230
@property(readonly) _Bool familyHotspotEnabled;
- (void)updateFamilyHotspotState;	// IMP=0x000000010018cb18
- (long long)familyHotspotStateForAltDSID:(id)arg1;	// IMP=0x000000010018ca7c
- (_Bool)lteConnectionShows4G;	// IMP=0x000000010018ca74
- (void)cellularDataEnabled:(_Bool *)arg1 airplaneMode:(_Bool *)arg2;	// IMP=0x000000010018ca60
- (void)updateAutoHotspotState;	// IMP=0x000000010018c8d8
- (long long)autoHotspotState;	// IMP=0x000000010018c86c
- (id)phoneNumbersForContact:(id)arg1;	// IMP=0x000000010018c6c8
- (void)resetMeCardWithReason:(id)arg1;	// IMP=0x000000010018c574
@property(readonly, nonatomic) CNContact *meCard; // @synthesize meCard=___meCard;
- (id)instantMessageEmailsForContact:(id)arg1;	// IMP=0x000000010018c1c0
- (id)addressOrNumForHash:(id)arg1;	// IMP=0x000000010018bfa0
- (id)emailOrPhoneForEmailHash:(id)arg1 phoneHash:(id)arg2;	// IMP=0x000000010018bea4
- (void)generateContactHashes;	// IMP=0x000000010018b894
- (id)emailsForContact:(id)arg1;	// IMP=0x000000010018b714
- (id)contactWithPhoneNumberOrEmail:(id)arg1;	// IMP=0x000000010018b384
- (id)contactWithContactIdentifier:(id)arg1;	// IMP=0x000000010018b070
- (_Bool)contactsContainsShortHashes:(id)arg1;	// IMP=0x000000010018aec0
- (_Bool)contactIsBlocked:(id)arg1;	// IMP=0x000000010018aeb8
- (_Bool)contactIdentifierIsBlocked:(id)arg1;	// IMP=0x000000010018aeb0
- (id)contactIdentifierForMediumHashes:(id)arg1;	// IMP=0x000000010018ad34
- (id)contactForCombinedHash:(id)arg1;	// IMP=0x000000010018aaf4
- (id)contactForEmailHash:(id)arg1 phoneHash:(id)arg2;	// IMP=0x000000010018a9f8
- (void)clearMyIconAndHash;	// IMP=0x000000010018a924
- (void)clearHashesToContacts;	// IMP=0x000000010018a8d0
- (void)addPhoneNumbers:(id)arg1 toLongHashes:(id)arg2 andMediumHashes:(id)arg3 andShortHashes:(id)arg4 forContactIdentifier:(id)arg5;	// IMP=0x000000010018a570
- (void)addEmails:(id)arg1 toLongHashes:(id)arg2 andMediumHashes:(id)arg3 andShortHashes:(id)arg4 forContactIdentifier:(id)arg5;	// IMP=0x000000010018a1b4
- (id)addAdditionalInformationToMeCard:(id)arg1;	// IMP=0x0000000100189b30
- (id)awdlNetwork;	// IMP=0x000000010018999c
- (id)awdlInfoForPeerWithServiceName:(id)arg1;	// IMP=0x00000001001896f8
- (id)awdlDevice;	// IMP=0x00000001001896c0
- (id)verifiedIdentityForAppleID:(id)arg1;	// IMP=0x0000000100189628
- (id)unifiedAppleIDInfo;	// IMP=0x0000000100189150
- (id)phoneNumbersForAppleID:(id)arg1;	// IMP=0x0000000100189088
- (void)hsa2EnabledWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100188e3c
- (void)handleAppleAccountSignOut;	// IMP=0x0000000100188da4
- (void)handleAppleAccountSignIn;	// IMP=0x0000000100188d0c
- (void)fixAltDSIDIfNeeded;	// IMP=0x0000000100188a2c
- (id)emailAddressesForAppleID:(id)arg1;	// IMP=0x0000000100188964
- (struct __SecIdentity *)_copyMyAppleIDSecIdentity;	// IMP=0x00000001001888c4
- (struct __SecIdentity *)copyMyAppleIDSecIdentity;	// IMP=0x0000000100188878
- (struct __SecCertificate *)_copyMyAppleIDIntermediateCertificate;	// IMP=0x00000001001887bc
- (struct __SecCertificate *)copyMyAppleIDIntermediateCertificate;	// IMP=0x0000000100188770
- (struct __SecCertificate *)_copyMyAppleIDCertificate;	// IMP=0x00000001001886b4
- (struct __SecCertificate *)copyMyAppleIDCertificate;	// IMP=0x0000000100188668
- (struct __SecCertificate *)copyCertificateForRealName:(id)arg1;	// IMP=0x00000001001885d0
- (id)commonNameForCertificate:(struct __SecCertificate *)arg1;	// IMP=0x000000010018850c
- (void)clearMyAppleIDInfo;	// IMP=0x00000001001883e0
- (void)cacheIdentity:(id)arg1;	// IMP=0x0000000100188310
- (void)cacheCertificate:(struct __SecCertificate *)arg1 forRealName:(id)arg2;	// IMP=0x000000010018825c
- (_Bool)verifyAndParseValidationRecordData:(id)arg1 intoDictionary:(out id *)arg2;	// IMP=0x0000000100187eec
- (long long)appleIDAccountState;	// IMP=0x0000000100187c8c
- (void)updateDiscoverableMode;	// IMP=0x00000001001879d0
- (void)setServerMountPoints:(id)arg1;	// IMP=0x0000000100187938
@property(retain) NSString *discoverableMode;
- (void)setODiskMountPoints:(id)arg1;	// IMP=0x000000010018782c
- (id)serverNameForHost:(id)arg1;	// IMP=0x0000000100187774
- (void)removeServerName:(id)arg1;	// IMP=0x00000001001876e0
- (id)reconciledDiscoverableMode;	// IMP=0x0000000100187558
- (id)odiskMountPointsForServer:(id)arg1;	// IMP=0x00000001001874c8
- (id)newDiscoverableMode;	// IMP=0x0000000100187208
- (id)mountPointsForServer:(id)arg1;	// IMP=0x0000000100187178
- (_Bool)isAirDropReady;	// IMP=0x0000000100187020
- (long long)discoverableLevel;	// IMP=0x0000000100186f70
- (id)defaultDiscoverableMode;	// IMP=0x0000000100186f50
- (id)createHostNameKey:(id)arg1;	// IMP=0x0000000100186e98
- (void)airDropTransactionEnd:(_Bool)arg1;	// IMP=0x0000000100186e38
- (void)airDropTransactionBegin:(_Bool)arg1;	// IMP=0x0000000100186de0
- (void)addServerName:(id)arg1 forHostName:(id)arg2;	// IMP=0x0000000100186d14
@property(readonly, copy) NSString *description;
- (void)clearMonitorCache;	// IMP=0x0000000100186a48
- (void)activate;	// IMP=0x0000000100186798
- (id)init;	// IMP=0x0000000100186584

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

