//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSManagedObjectContext, NSPersistentContainer, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface SYDCoreDataStore : NSObject
{
    _Bool _shouldLogValues;	// 8 = 0x8
    NSPersistentContainer *__persistentContainer;	// 16 = 0x10
    NSURL *_URL;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_persistentContainerQueue;	// 32 = 0x20
    NSString *_fileProtectionType;	// 40 = 0x28
    NSManagedObjectContext *_transactionContext;	// 48 = 0x30
}

+ (_Bool)isInvalidTokenError:(id)arg1;	// IMP=0x0000000100062984
+ (_Bool)isCorruptionError:(id)arg1;	// IMP=0x00000001000624e4
+ (id)managedObjectModel;	// IMP=0x00000001000617a4
- (void).cxx_destruct;	// IMP=0x0000000100062ae4
@property(retain, nonatomic) NSManagedObjectContext *transactionContext; // @synthesize transactionContext=_transactionContext;
@property(retain, nonatomic) NSString *fileProtectionType; // @synthesize fileProtectionType=_fileProtectionType;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *persistentContainerQueue; // @synthesize persistentContainerQueue=_persistentContainerQueue;
@property(nonatomic) _Bool shouldLogValues; // @synthesize shouldLogValues=_shouldLogValues;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(retain, nonatomic) NSPersistentContainer *_persistentContainer; // @synthesize _persistentContainer=__persistentContainer;
- (_Bool)_queue_handleCorruptionIfNecessaryFromError:(id)arg1 inPersistentStoreCoordinator:(id)arg2;	// IMP=0x00000001000626f8
- (void)handleCorruptionIfNecessaryFromError:(id)arg1 inPersistentStoreCoordinator:(id)arg2;	// IMP=0x00000001000623b8
- (_Bool)saveTransaction:(id *)arg1;	// IMP=0x0000000100062184
- (id)transactionalStoreWithError:(id *)arg1;	// IMP=0x0000000100062010
- (unsigned long long)fileSizeBytes;	// IMP=0x0000000100061c3c
- (void)_queue_destroyPersistentStoreInPersistentStoreCoordinator:(id)arg1;	// IMP=0x0000000100061ab4
- (void)destroyPersistentStore;	// IMP=0x0000000100061928
- (id)persistentContainerWithError:(id *)arg1;	// IMP=0x0000000100060f8c
- (_Bool)saveContext:(id)arg1 reason:(id)arg2 includingTransactionContext:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000100060dc0
- (id)_contextForStoreIdentifier:(id)arg1 persistentContainer:(id)arg2;	// IMP=0x0000000100060d5c
- (id)contextForStoreIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100060c44
- (id)managedKeyValuesMatchingPredicate:(id)arg1 inContext:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100060a14
- (id)managedKeyValueWithRecordName:(id)arg1 inStoreWithIdentifier:(id)arg2 inContext:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000607c4
- (id)managedKeyValueWithKey:(id)arg1 inStoreWithIdentifier:(id)arg2 createIfNecessary:(_Bool)arg3 forceCreateNewRow:(_Bool)arg4 inContext:(id)arg5 error:(id *)arg6;	// IMP=0x00000001000603f8
- (id)managedKeyValueWithKey:(id)arg1 inStoreWithIdentifier:(id)arg2 createIfNecessary:(_Bool)arg3 inContext:(id)arg4 error:(id *)arg5;	// IMP=0x00000001000603e0
- (id)managedStoreWithIdentifier:(id)arg1 createIfNecessary:(_Bool)arg2 inContext:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000600f8
- (id)managedDatabaseCreateIfNecessary:(_Bool)arg1 inContext:(id)arg2 error:(id *)arg3;	// IMP=0x000000010005feec
- (id)syncEngineMetadataWithError:(id *)arg1;	// IMP=0x000000010005fc8c
- (_Bool)saveSyncEngineMetadata:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005fa0c
- (id)dictionaryRepresentationForStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005f1f8
- (short)failedMigrationCountWithError:(id *)arg1;	// IMP=0x000000010005efec
- (_Bool)setFailedMigrationCount:(short)arg1 error:(id *)arg2;	// IMP=0x000000010005ecfc
- (_Bool)didMigrateFromPlistsWithError:(id *)arg1;	// IMP=0x000000010005eaf0
- (_Bool)setDidMigrateFromPlists:(_Bool)arg1 error:(id *)arg2;	// IMP=0x000000010005e800
- (id)acAccountIdentifierWithError:(id *)arg1;	// IMP=0x000000010005e5d4
- (_Bool)setACAccountIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005e30c
- (_Bool)clearServerSystemFieldsRecordsForAllStoresWithError:(id *)arg1;	// IMP=0x000000010005de00
- (id)changedKeysForStoreIdentifier:(id)arg1 sinceChangeToken:(id)arg2 error:(id *)arg3;	// IMP=0x000000010005ca00
- (id)currentChangeTokenForStoreIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005c548
- (unsigned long long)numberOfKeyValuesInStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005c1e4
- (_Bool)clearServerSystemFieldsRecordsForAllKeyValuesInStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005bcb4
- (id)allStoreIdentifiersWithError:(id *)arg1;	// IMP=0x000000010005b7f8
- (id)allRecordNamesInStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005b30c
- (_Bool)deleteDataForStoresMatchingPredicate:(id)arg1 context:(id)arg2 error:(id *)arg3;	// IMP=0x000000010005b05c
- (_Bool)deleteDataForAllStoresWithError:(id *)arg1;	// IMP=0x000000010005af94
- (_Bool)deleteDataForStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005ae78
- (_Bool)saveServerSyncAnchorSystemFieldsRecordData:(id)arg1 forStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x000000010005ab28
- (id)serverSyncAnchorSystemFieldsRecordDataForStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005a81c
- (_Bool)removeKeyValueForRecordName:(id)arg1 inStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x000000010005a488
- (_Bool)removeKeyValueForKey:(id)arg1 inStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x000000010005a474
- (_Bool)removeKeyValueForKey:(id)arg1 inStoreWithIdentifier:(id)arg2 excludeFromChangeTracking:(_Bool)arg3 error:(id *)arg4;	// IMP=0x000000010005a084
- (_Bool)saveKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x000000010005a070
- (_Bool)_saveKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2 excludeFromChangeTracking:(_Bool)arg3 enforceQuota:(_Bool)arg4 forceCreateNewRow:(_Bool)arg5 error:(id *)arg6;	// IMP=0x00000001000596f0
- (_Bool)saveKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2 excludeFromChangeTracking:(_Bool)arg3 enforceQuota:(_Bool)arg4 error:(id *)arg5;	// IMP=0x00000001000596dc
- (_Bool)saveKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2 excludeFromChangeTracking:(_Bool)arg3 error:(id *)arg4;	// IMP=0x00000001000596c8
- (id)keyValueFromManagedKeyValue:(id)arg1;	// IMP=0x0000000100059520
- (id)keyValueForRecordName:(id)arg1 inStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000591cc
- (id)keyValueForKey:(id)arg1 inStoreWithIdentifier:(id)arg2 createIfNecessary:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000100058d08
- (id)description;	// IMP=0x0000000100058c64
- (id)initWithURL:(id)arg1 fileProtectionType:(id)arg2 persistentContainer:(id)arg3 isTransactional:(_Bool)arg4;	// IMP=0x0000000100058a34
- (id)initWithURL:(id)arg1 fileProtectionType:(id)arg2;	// IMP=0x0000000100058a20
- (id)initWithURL:(id)arg1;	// IMP=0x0000000100058a08

@end

