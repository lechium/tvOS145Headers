//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct DetailedThermalBudget {
    unsigned char clientID;
    unsigned int powerValue;
    unsigned long long details;
};

struct DetailedThermalBudgets {
    struct DetailedThermalBudget budgets[25];
    int count;
};

struct ForcedThermalLevelStruct {
    float triggerTarget;
    float triggerHysteresis;
    _Bool isTriggered;
};

struct ForcedThermalPressureLevelStruct {
    float triggerTarget;
    float triggerHysteresis;
    _Bool isTriggered;
};

struct SMCSensorExchangeHeader {
    unsigned char uchNumSensors;
    unsigned char uchVersion;
    unsigned char uchRollingSequenceNumber;
    unsigned char uchRsvd;
};

struct host_cpu_load_info {
    unsigned int cpu_ticks[4];
};

struct iir_filter_t {
    int time_constant;
    int last;
};

struct sensorTemperature4CC {
    unsigned int sensor4CC[15];
};

struct sensorTemperatureData {
    unsigned int sensorTemperature[15];
};

struct smcExchangeSensorGroupInfo {
    struct __CFString *sensorExchangeKeyStr;
    unsigned int sensorExchangeKeyValue;
    unsigned long long sensorExchangeKeySize;
    unsigned int numberOfSensors;
    _Bool SensorExchangeUpdateNeeded;
    int sensorIndexLUT[29];
    union SMCSensorEx_Jumbo data;
};

struct smcKeyWrites {
    unsigned char _field1;
    unsigned long long _field2[10];
};

#pragma mark Named Unions

union SMCSensorEx_Jumbo {
    struct {
        unsigned char p1[120];
    } BYTES;
    struct {
        struct SMCSensorExchangeHeader header;
        union SMCSensorExchangeSensor sensorArray[29];
    } SENSORS;
};

union SMCSensorExchangeSensor {
    struct {
        float rValue;
    } FLOATS;
    struct {
        unsigned int ui32Raw;
    } UI32;
    struct {
        int si32Raw;
    } SI32;
};

