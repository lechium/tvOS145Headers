//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "VOTCustomActionContext-Protocol.h"
#import "VOTDirectTouchManagementProtocol-Protocol.h"
#import "VOTElementFetchDelegateProtocol-Protocol.h"
#import "VOTElementManagementProtocol-Protocol.h"
#import "VOTElementRotorDelegate-Protocol.h"
#import "VOTExplorerElementManagerDelegate-Protocol.h"
#import "VOTOutputManagerObserver-Protocol.h"
#import "VOTOutputRequestCompletionProtocol-Protocol.h"
#import "VOTRotorManagementProtocol-Protocol.h"
#import "VOTTVGestureRepeaterDelegate-Protocol.h"
#import "VOTVisionEngineResultUpdateDelegate-Protocol.h"

@class AXIndexMap, NSArray, NSData, NSDictionary, NSLock, NSMutableArray, NSMutableDictionary, NSMutableSet, NSMutableString, NSNumber, NSSet, NSString, NSURL, SCRCTargetSelectorTimer, SCRCThread, SCRCThreadKey, VOTElement, VOTElementFetcher, VOTElementRotor, VOTElementUniqueIdentification, VOTEvent, VOTExplorerElementManager, VOTOutputRequest, VOTRotor, VOTTVGestureRepeater, VOTTVSpeechRequestManager, VOTTextMovementManager, VOTUpdateFocusContext, _VOTTextMarkerRange;
@protocol VOTElementUpdateProtocol;

@interface VOTElementManager : NSObject <VOTExplorerElementManagerDelegate, VOTTVGestureRepeaterDelegate, VOTElementRotorDelegate, VOTCustomActionContext, VOTOutputManagerObserver, VOTOutputRequestCompletionProtocol, VOTElementFetchDelegateProtocol, VOTDirectTouchManagementProtocol, VOTRotorManagementProtocol, VOTVisionEngineResultUpdateDelegate, VOTElementManagementProtocol>
{
    AXIndexMap *_commands;	// 8 = 0x8
    VOTElement *_lastValidElement;	// 16 = 0x10
    NSArray *_currentApplications;	// 24 = 0x18
    VOTElement *_touchContainer;	// 32 = 0x20
    long long _touchContainersTouchedCount;	// 40 = 0x28
    VOTElement *_autofillCurrentElement;	// 48 = 0x30
    long long _readWordCyclingCount;	// 56 = 0x38
    VOTElement *_currentElement;	// 64 = 0x40
    VOTElement *_anyThreadCurrentElement;	// 72 = 0x48
    struct os_unfair_lock_s _anyThreadCurrentElementLock;	// 80 = 0x50
    VOTElement *_currentOpaqueParent;	// 88 = 0x58
    VOTElementFetcher *_fetchManager;	// 96 = 0x60
    NSMutableString *_elementTypingBuffer;	// 104 = 0x68
    struct _NSRange _elementSelectionRangeBufferInternal;	// 112 = 0x70
    struct _NSRange _elementSelectionRangeBufferForValueChange;	// 128 = 0x80
    struct _NSRange _elementSelectionRangeBufferForSelectionChange;	// 144 = 0x90
    NSString *_webSelectionText;	// 160 = 0xa0
    unsigned long long _elementMathIndex;	// 168 = 0xa8
    NSArray *_elementMathSegments;	// 176 = 0xb0
    unsigned long long _elementMathSegmentGranularity;	// 184 = 0xb8
    struct _NSRange _highlightedCharacterRange;	// 192 = 0xc0
    _Bool _textRangeBeingDisplayed;	// 208 = 0xd0
    VOTElement *_firstResponderElement;	// 216 = 0xd8
    VOTElement *_previousTouchTypingKey;	// 224 = 0xe0
    double _previousTableOrCollectionViewRowTime;	// 232 = 0xe8
    double _lastAdjustValueTime;	// 240 = 0xf0
    double _lastLiveRegionUpdate;	// 248 = 0xf8
    double _lastPopupTime;	// 256 = 0x100
    double _lastTextInsertionAnnouncementTime;	// 264 = 0x108
    double _lastItemSelectionFromTouch;	// 272 = 0x110
    double _lastSentBannerTimerReset;	// 280 = 0x118
    SCRCTargetSelectorTimer *_updateLayoutTimer;	// 288 = 0x120
    SCRCTargetSelectorTimer *_containerFrameDrawingTimer;	// 296 = 0x128
    SCRCTargetSelectorTimer *_visualRotorFadeTimer;	// 304 = 0x130
    SCRCTargetSelectorTimer *_webPageLoadingSoundTimer;	// 312 = 0x138
    SCRCTargetSelectorTimer *_appSuspensionSoundTimer;	// 320 = 0x140
    SCRCTargetSelectorTimer *_simulatedPressOutputTimer;	// 328 = 0x148
    SCRCTargetSelectorTimer *_simulatedForceLiftTimer;	// 336 = 0x150
    SCRCTargetSelectorTimer *_updateAppFromTimer;	// 344 = 0x158
    SCRCTargetSelectorTimer *_updateWithNativeFocusTimer;	// 352 = 0x160
    SCRCTargetSelectorTimer *_pendingBrailleHomeButtonPress;	// 360 = 0x168
    SCRCTargetSelectorTimer *_elementMonitorTimer;	// 368 = 0x170
    NSMutableDictionary *_elementMonitorCache;	// 376 = 0x178
    SCRCTargetSelectorTimer *_keyboardAlternativeModeActivationTimer;	// 384 = 0x180
    SCRCTargetSelectorTimer *_alternativeKeyDismissalTimer;	// 392 = 0x188
    _Bool _keyboardAlternativesVisible;	// 400 = 0x190
    struct CGPoint _keyboardAlternativeVisibleTrackingPoint;	// 408 = 0x198
    struct CGPoint _keyboardAlternativeVisibleStartPoint;	// 424 = 0x1a8
    NSString *_lastScrollStatus;	// 440 = 0x1b8
    struct CGPoint _fingerLocation;	// 448 = 0x1c0
    struct CGPoint _lastValidElementLocation;	// 464 = 0x1d0
    VOTElementRotor *_elementRotor;	// 480 = 0x1e0
    VOTRotor *_speechRotor;	// 488 = 0x1e8
    NSMutableArray *_cachedLaunchIcons;	// 496 = 0x1f0
    long long _selectedTextStartLocation;	// 504 = 0x1f8
    long long _selectedTextOperation;	// 512 = 0x200
    NSMutableDictionary *_lastSeenFontProperties;	// 520 = 0x208
    NSDictionary *_lastSeenLineAndColumn;	// 528 = 0x210
    long long _lastSeenApplicationOrientation;	// 536 = 0x218
    NSData *_textMarker;	// 544 = 0x220
    _VOTTextMarkerRange *_textMarkerRange;	// 552 = 0x228
    NSArray *_lineArray;	// 560 = 0x230
    long long _lineArrayPosition;	// 568 = 0x238
    struct CGRect _lineFrame;	// 576 = 0x240
    NSMutableDictionary *_flowFromElements;	// 608 = 0x260
    NSString *_bookLineString;	// 616 = 0x268
    _Bool _bookUpdatedCurrentLine;	// 624 = 0x270
    long long _bookLineNumber;	// 632 = 0x278
    struct _NSRange _bookLineRange;	// 640 = 0x280
    long long _bookCursorPosition;	// 656 = 0x290
    NSString *_bookPageScrollString;	// 664 = 0x298
    VOTElement *_bookSubelement;	// 672 = 0x2a0
    long long _bookLastContentMovementDirection;	// 680 = 0x2a8
    long long _bookLastContentMovementUnit;	// 688 = 0x2b0
    VOTOutputRequest *_bookPageContentOutputRequest;	// 696 = 0x2b8
    VOTOutputRequest *_readAllOutputRequest;	// 704 = 0x2c0
    VOTOutputRequest *_announcementRequest;	// 712 = 0x2c8
    int _announcementPid;	// 720 = 0x2d0
    NSString *_announcementOriginalString;	// 728 = 0x2d8
    VOTElement *_elementBeforeAlert;	// 736 = 0x2e0
    VOTElement *_elementBeforePopup;	// 744 = 0x2e8
    VOTElement *_elementBeforeStatusBarMovement;	// 752 = 0x2f0
    VOTElement *_webFormControlBeforeInteraction;	// 760 = 0x2f8
    double _lastWebKeyboardDismissTime;	// 768 = 0x300
    NSDictionary *_keyboardKeyCommands;	// 776 = 0x308
    struct CGPoint _passthroughFinish;	// 784 = 0x310
    struct CGPoint _passthroughOffset;	// 800 = 0x320
    struct CGPoint _passthroughStart;	// 816 = 0x330
    NSMutableSet *_directInteractionElements;	// 832 = 0x340
    NSString *_continuousPathSuggestion;	// 840 = 0x348
    SCRCTargetSelectorTimer *_continuousPathIdleTimer;	// 848 = 0x350
    double _webPageLoadingProgress;	// 856 = 0x358
    long long _cursorBorderHitCount;	// 864 = 0x360
    NSString *_lastTitleElemenTitle;	// 872 = 0x368
    NSLock *_trackingLock;	// 880 = 0x370
    VOTEvent *_mostRecentTrackingEvent;	// 888 = 0x378
    VOTElementUniqueIdentification *_labeledElementIdentification;	// 896 = 0x380
    VOTElement *_cachedLabelElement;	// 904 = 0x388
    long long _customActionIndex;	// 912 = 0x390
    NSString *_customActionIdentifier;	// 920 = 0x398
    NSDictionary *_currentPublicCustomRotorItemResult;	// 928 = 0x3a0
    NSString *_dataComprehensionActionIdentifier;	// 936 = 0x3a8
    long long _customContentIndex;	// 944 = 0x3b0
    NSArray *_allElements;	// 952 = 0x3b8
    VOTElement *_previousItemChooserElement;	// 960 = 0x3c0
    struct SCRCMathAverageValue _roadTravelAngle;	// 968 = 0x3c8
    VOTElement *_upcomingRoadElement;	// 1408 = 0x580
    struct CGPoint _firstRoadTravelPoint;	// 1416 = 0x588
    struct CGPoint _lastRoadTravelPoint;	// 1432 = 0x598
    struct CGPoint _intersectionTravelPoint;	// 1448 = 0x5a8
    _Bool _playingMapSound;	// 1464 = 0x5b8
    _Bool _shouldContinueRoadTracking;	// 1465 = 0x5b9
    SCRCTargetSelectorTimer *_switchRoadsAtIntersectionTimer;	// 1472 = 0x5c0
    VOTOutputRequest *_switchRoadsOutputRequest;	// 1480 = 0x5c8
    VOTOutputRequest *_endOfRoadApproachingRequest;	// 1488 = 0x5d0
    VOTOutputRequest *_startTrackingRoadRequest;	// 1496 = 0x5d8
    double _switchedToRoadTime;	// 1504 = 0x5e0
    _Bool _approachingEndOfRoad;	// 1512 = 0x5e8
    struct CGPoint _explorationStartPoint;	// 1520 = 0x5f0
    NSString *_webSearchText;	// 1536 = 0x600
    int _countOutputBlockGeneration;	// 1544 = 0x608
    NSMutableDictionary *_focusedElementsByElementCommunityIdentifier;	// 1552 = 0x610
    SCRCThread *_elementManagerThread;	// 1560 = 0x618
    SCRCThread *_systemEventThread;	// 1568 = 0x620
    SCRCThreadKey *_threadKey;	// 1576 = 0x628
    struct {
        _Bool lastEventWasIdle;
        _Bool elementCenterSoundPlaying;
        _Bool inStatusBar;
        _Bool focusIsOnElement;
        _Bool tapShouldHandleAutofill;
        _Bool tapShouldHandleTextOperation;
        _Bool usePenumbraForKeyboardKeys;
        _Bool shouldSpeakNextLayoutChange;
        _Bool visualRotorDisplayed;
        _Bool touchingOnNothing;
        _Bool isReadingAll;
        _Bool isReadingAllBook;
        _Bool previousScrollWasBookContentMovement;
        _Bool performedFlickNavigation;
        _Bool performedKeyboardNavigation;
        _Bool performedRotorTextNavigation;
        _Bool performedSearch;
        _Bool performedElementUpdateForSelectionChange;
        _Bool inPassthroughMode;
        _Bool didTouchTypingOutputStart;
        _Bool inSearchTextMode;
        _Bool itemChooserVisible;
        _Bool shouldSpeakSameLineTouched;
        _Bool currentElementAllowsDirectTouch;
        _Bool shouldTurnTrackingIntoDirectTouch;
        _Bool shouldUpdateRotorForElement;
        _Bool avoidAnnouncingDirectTouchArea;
        _Bool wasSendingToNativeSlide;
        _Bool preventCustomRotorItemIndexReset;
        _Bool shouldTriggerAlternativeKeyActivation;
        _Bool setReachabilityIsActiveWhileFingerDown;
        _Bool watchDisplayDidTurnOn;
        _Bool inKeyboardTextSelectionMode;
        _Bool continuousPathActivationDesired;
        _Bool continuousPathKeyboardBegan;
        _Bool isContinuousPathOutsideBounds;
        _Bool isMonitoringElements;
        long long lastElementMovement;
    } _flags;	// 1584 = 0x630
    double _lastAnnouncementNotificationTime;	// 1632 = 0x660
    double _lastLockScreenAlertSpokenTime;	// 1640 = 0x668
    struct _NSRange _keyboardTextSelectionStartRange;	// 1648 = 0x670
    _Bool _inTextProcessingRotorMode;	// 1664 = 0x680
    long long _lastUserTextSelectionDirection;	// 1672 = 0x688
    VOTElement *_currentSubElement;	// 1680 = 0x690
    long long _misspelledWordReplacementCycleIndex;	// 1688 = 0x698
    double _performedTextSelectionOperation;	// 1696 = 0x6a0
    _Bool _didPeekEvent;	// 1704 = 0x6a8
    _Bool _isInPreview;	// 1705 = 0x6a9
    NSMutableArray *_touchEventElements;	// 1712 = 0x6b0
    unsigned long long _lastTableRow;	// 1720 = 0x6b8
    _Bool _systemIsSleeping;	// 1728 = 0x6c0
    unsigned long long _elementSearchGeneration;	// 1736 = 0x6c8
    long long _elementUnitIndex;	// 1744 = 0x6d0
    struct _NSRange _elementUnitOutputRange;	// 1752 = 0x6d8
    SCRCTargetSelectorTimer *_elementUpdatesFrequentlyTimer;	// 1768 = 0x6e8
    NSString *_cachedFrequentUpdateText;	// 1776 = 0x6f0
    unsigned long long _lastSeenLineStartPositionForFontProperties;	// 1784 = 0x6f8
    _Bool _inUnitTestingMode;	// 1792 = 0x700
    _Bool _speakNonfocusableElementsAfterDelay;	// 1793 = 0x701
    _Bool _shouldSilenceAnnouncements;	// 1794 = 0x702
    _Bool _explorerElementsNeedUpdate;	// 1795 = 0x703
    _Bool _shouldReadExplorerElementsAfterSpeechFinished;	// 1796 = 0x704
    SCRCTargetSelectorTimer *_readExplorerElementsAfterSpeechFinishedTimer;	// 1800 = 0x708
    SCRCTargetSelectorTimer *_updateVisualsTimer;	// 1808 = 0x710
    SCRCTargetSelectorTimer *_updatePreferredTVInteractionModeTimer;	// 1816 = 0x718
    _Bool _isShowingVoiceOverEnabledWarningBanner;	// 1824 = 0x720
    double _lastUserEventNotificationTime;	// 1832 = 0x728
    NSString *_lastSpokenGuideElementHeaderText;	// 1840 = 0x730
    _Bool _systemNotificationInProgress;	// 1848 = 0x738
    _Bool _exploreFocusAffectsNativeFocus;	// 1849 = 0x739
    NSNumber *_lastScreenChangeSourceIdentifier;	// 1856 = 0x740
    _Bool _lastHandledEventWasRotorMovement;	// 1864 = 0x748
    SCRCTargetSelectorTimer *_tvRotorInteractionTimer;	// 1872 = 0x750
    _Bool _didIgnoreLastFirstResponderChangeOnSelectionChange;	// 1880 = 0x758
    _Bool _unitTestingMode;	// 1881 = 0x759
    _Bool _tvIsInteractingWithRotor;	// 1882 = 0x75a
    _Bool _didReceiveForceUpdateChangeToken;	// 1883 = 0x75b
    _Bool _didCacheSideAppDividerElement;	// 1884 = 0x75c
    _Bool _inTextSelection;	// 1885 = 0x75d
    _Bool _selectingRightward;	// 1886 = 0x75e
    _Bool _isUpdatingFocus;	// 1887 = 0x75f
    _Bool _needsUpdateFocus;	// 1888 = 0x760
    _Bool _waitingToRetryFocus;	// 1889 = 0x761
    id <VOTElementUpdateProtocol> _updateDelegate;	// 1896 = 0x768
    double _timeSpentOnNothing;	// 1904 = 0x770
    double _lastNothingSoundTime;	// 1912 = 0x778
    double _lastAlertTime;	// 1920 = 0x780
    double _lastSelectionChangeTime;	// 1928 = 0x788
    double _lastScreenChangeNotificationTime;	// 1936 = 0x790
    double _lastPressOnMediaSessionElement;	// 1944 = 0x798
    double _touchTypingStartTime;	// 1952 = 0x7a0
    double _lastFirstResponderChangeTime;	// 1960 = 0x7a8
    double _lastTemporaryQuickNavDisableTime;	// 1968 = 0x7b0
    double _lastEventOccurredTime;	// 1976 = 0x7b8
    NSString *_lastEventCommand;	// 1984 = 0x7c0
    double _lastValueChangeTime;	// 1992 = 0x7c8
    double _lastWebPageLoadTime;	// 2000 = 0x7d0
    double _lastSearchForElementsTime;	// 2008 = 0x7d8
    unsigned long long _currentSimilarTraits;	// 2016 = 0x7e0
    VOTElement *_previousFirstResponder;	// 2024 = 0x7e8
    NSString *_previousFirstResponderValue;	// 2032 = 0x7f0
    NSMutableDictionary *_fingersFromTouchCommands;	// 2040 = 0x7f8
    unsigned long long _lastTextPressAction;	// 2048 = 0x800
    VOTElement *_nativeFocusElement;	// 2056 = 0x808
    VOTElement *_initialReadAllElement;	// 2064 = 0x810
    double _lastLayoutChangeNotificationTime;	// 2072 = 0x818
    CDUnknownBlockType _elementManagerHandledEventCallback;	// 2080 = 0x820
    CDUnknownBlockType _currentElementChangedCallback;	// 2088 = 0x828
    NSArray *_previouslySpokenImageCaptionResults;	// 2096 = 0x830
    double _lastCursorBorderHitTime;	// 2104 = 0x838
    double _lastActivationTime;	// 2112 = 0x840
    double _lastSilencedAlertTime;	// 2120 = 0x848
    double _lastScreenWakeViaPlayPause;	// 2128 = 0x850
    double _lastExternalUnlockTime;	// 2136 = 0x858
    double _lastFolderOperationTime;	// 2144 = 0x860
    double _lastHomeButtonPressTime;	// 2152 = 0x868
    double _lastBlockedRequestBySiriOrDictationTime;	// 2160 = 0x870
    double _lastUserElementTouchTime;	// 2168 = 0x878
    double _lastElementChangeTime;	// 2176 = 0x880
    VOTElement *_nextElementToFocus;	// 2184 = 0x888
    NSString *_nextStringToSpeakOnScreenChange;	// 2192 = 0x890
    NSMutableDictionary *_previousTableOrCollectionViewToMetadata;	// 2200 = 0x898
    NSMutableArray *_previousTableOrCollectionViewList;	// 2208 = 0x8a0
    VOTElement *_previousTableOrCollectionViewApplication;	// 2216 = 0x8a8
    VOTElement *_cachedSideAppDividerElement;	// 2224 = 0x8b0
    NSArray *_cachedAdditionalElementCommunities;	// 2232 = 0x8b8
    VOTElement *_mostRecentElementCommunity;	// 2240 = 0x8c0
    VOTElement *_firstTrackedAppInGesture;	// 2248 = 0x8c8
    NSString *_springBoardActionHandlerIdentifier;	// 2256 = 0x8d0
    VOTOutputRequest *_delayedNotificationAnnouncementRequest;	// 2264 = 0x8d8
    long long _lastElementChangeAction;	// 2272 = 0x8e0
    VOTElement *_lastTrackingUpdateAppsFailureApplication;	// 2280 = 0x8e8
    double _lastTrackingUpdateAppsFailureTime;	// 2288 = 0x8f0
    double _lastDuckingDisablementSessionStart;	// 2296 = 0x8f8
    double _lastPauseSpeechAndHapticsStart;	// 2304 = 0x900
    double _continuousPathTimeout;	// 2312 = 0x908
    NSDictionary *_previousContextDescriptors;	// 2320 = 0x910
    NSDictionary *_currentContextDescriptors;	// 2328 = 0x918
    VOTElement *_lastElementForAttemptToShowContextMenu;	// 2336 = 0x920
    double _lastAttemptToShowContextMenuTime;	// 2344 = 0x928
    VOTExplorerElementManager *_explorerElementManager;	// 2352 = 0x930
    VOTTVSpeechRequestManager *_tvSpeechRequestManager;	// 2360 = 0x938
    VOTTVGestureRepeater *_tvGestureRepeater;	// 2368 = 0x940
    long long _forceUpdateMask;	// 2376 = 0x948
    long long _lastElementHeadingLevel;	// 2384 = 0x950
    long long _lastElementBlockquoteLevel;	// 2392 = 0x958
    NSLock *_tvAccessLock;	// 2400 = 0x960
    VOTUpdateFocusContext *_updateFocusContext;	// 2408 = 0x968
    long long _focusRetryAttempts;	// 2416 = 0x970
    VOTElement *_lastContainerForCustomRotorHint;	// 2424 = 0x978
    NSSet *_previousCustomRotorsForRotorHint;	// 2432 = 0x980
    VOTTextMovementManager *_textSelectionMovementManager;	// 2440 = 0x988
    VOTOutputRequest *_lastRequestBlockedBySiriOrDictation;	// 2448 = 0x990
    unsigned long long _elementGeneration;	// 2456 = 0x998
    unsigned long long _webPageLoadedGenerationMark;	// 2464 = 0x9a0
    NSURL *_webPageLoadURL;	// 2472 = 0x9a8
    SCRCTargetSelectorTimer *_webPageElementFinder;	// 2480 = 0x9b0
    NSMutableDictionary *_directTouchApps;	// 2488 = 0x9b8
}

+ (void)_exitThread:(id)arg1;	// IMP=0x000000010005f3ec
+ (void)initialize;	// IMP=0x000000010005e1a0
- (void).cxx_destruct;	// IMP=0x00000001000b3908
@property(retain, nonatomic) NSMutableDictionary *directTouchApps; // @synthesize directTouchApps=_directTouchApps;
@property(retain, nonatomic) SCRCTargetSelectorTimer *webPageElementFinder; // @synthesize webPageElementFinder=_webPageElementFinder;
@property(retain, nonatomic) NSURL *webPageLoadURL; // @synthesize webPageLoadURL=_webPageLoadURL;
@property(nonatomic) unsigned long long webPageLoadedGenerationMark; // @synthesize webPageLoadedGenerationMark=_webPageLoadedGenerationMark;
@property(nonatomic) unsigned long long elementGeneration; // @synthesize elementGeneration=_elementGeneration;
@property(retain, nonatomic) VOTOutputRequest *lastRequestBlockedBySiriOrDictation; // @synthesize lastRequestBlockedBySiriOrDictation=_lastRequestBlockedBySiriOrDictation;
@property(retain, nonatomic) VOTTextMovementManager *textSelectionMovementManager; // @synthesize textSelectionMovementManager=_textSelectionMovementManager;
@property(retain, nonatomic) NSSet *previousCustomRotorsForRotorHint; // @synthesize previousCustomRotorsForRotorHint=_previousCustomRotorsForRotorHint;
@property(retain, nonatomic) VOTElement *lastContainerForCustomRotorHint; // @synthesize lastContainerForCustomRotorHint=_lastContainerForCustomRotorHint;
@property(nonatomic) _Bool waitingToRetryFocus; // @synthesize waitingToRetryFocus=_waitingToRetryFocus;
@property(nonatomic) long long focusRetryAttempts; // @synthesize focusRetryAttempts=_focusRetryAttempts;
@property(retain, nonatomic) VOTUpdateFocusContext *updateFocusContext; // @synthesize updateFocusContext=_updateFocusContext;
@property(retain, nonatomic) NSLock *tvAccessLock; // @synthesize tvAccessLock=_tvAccessLock;
@property(nonatomic) long long lastElementBlockquoteLevel; // @synthesize lastElementBlockquoteLevel=_lastElementBlockquoteLevel;
@property(nonatomic) long long lastElementHeadingLevel; // @synthesize lastElementHeadingLevel=_lastElementHeadingLevel;
@property(nonatomic) long long forceUpdateMask; // @synthesize forceUpdateMask=_forceUpdateMask;
@property(nonatomic) _Bool needsUpdateFocus; // @synthesize needsUpdateFocus=_needsUpdateFocus;
@property(nonatomic) _Bool isUpdatingFocus; // @synthesize isUpdatingFocus=_isUpdatingFocus;
@property(retain, nonatomic) VOTTVGestureRepeater *tvGestureRepeater; // @synthesize tvGestureRepeater=_tvGestureRepeater;
@property(retain, nonatomic) VOTTVSpeechRequestManager *tvSpeechRequestManager; // @synthesize tvSpeechRequestManager=_tvSpeechRequestManager;
@property(retain, nonatomic) VOTExplorerElementManager *explorerElementManager; // @synthesize explorerElementManager=_explorerElementManager;
@property(nonatomic) double lastAttemptToShowContextMenuTime; // @synthesize lastAttemptToShowContextMenuTime=_lastAttemptToShowContextMenuTime;
@property(retain, nonatomic) VOTElement *lastElementForAttemptToShowContextMenu; // @synthesize lastElementForAttemptToShowContextMenu=_lastElementForAttemptToShowContextMenu;
@property(retain, nonatomic) NSDictionary *currentContextDescriptors; // @synthesize currentContextDescriptors=_currentContextDescriptors;
@property(retain, nonatomic) NSDictionary *previousContextDescriptors; // @synthesize previousContextDescriptors=_previousContextDescriptors;
@property(nonatomic) double continuousPathTimeout; // @synthesize continuousPathTimeout=_continuousPathTimeout;
@property(nonatomic) double lastPauseSpeechAndHapticsStart; // @synthesize lastPauseSpeechAndHapticsStart=_lastPauseSpeechAndHapticsStart;
@property(nonatomic) double lastDuckingDisablementSessionStart; // @synthesize lastDuckingDisablementSessionStart=_lastDuckingDisablementSessionStart;
@property(nonatomic) double lastTrackingUpdateAppsFailureTime; // @synthesize lastTrackingUpdateAppsFailureTime=_lastTrackingUpdateAppsFailureTime;
@property(retain, nonatomic) VOTElement *lastTrackingUpdateAppsFailureApplication; // @synthesize lastTrackingUpdateAppsFailureApplication=_lastTrackingUpdateAppsFailureApplication;
@property(nonatomic) long long lastElementChangeAction; // @synthesize lastElementChangeAction=_lastElementChangeAction;
@property(retain, nonatomic) VOTOutputRequest *delayedNotificationAnnouncementRequest; // @synthesize delayedNotificationAnnouncementRequest=_delayedNotificationAnnouncementRequest;
@property(nonatomic) _Bool selectingRightward; // @synthesize selectingRightward=_selectingRightward;
@property(nonatomic) _Bool inTextSelection; // @synthesize inTextSelection=_inTextSelection;
@property(copy, nonatomic) NSString *springBoardActionHandlerIdentifier; // @synthesize springBoardActionHandlerIdentifier=_springBoardActionHandlerIdentifier;
@property(retain, nonatomic) VOTElement *firstTrackedAppInGesture; // @synthesize firstTrackedAppInGesture=_firstTrackedAppInGesture;
@property(retain, nonatomic) VOTElement *mostRecentElementCommunity; // @synthesize mostRecentElementCommunity=_mostRecentElementCommunity;
@property(retain, nonatomic) NSArray *cachedAdditionalElementCommunities; // @synthesize cachedAdditionalElementCommunities=_cachedAdditionalElementCommunities;
@property(retain, nonatomic) VOTElement *cachedSideAppDividerElement; // @synthesize cachedSideAppDividerElement=_cachedSideAppDividerElement;
@property(nonatomic) _Bool didCacheSideAppDividerElement; // @synthesize didCacheSideAppDividerElement=_didCacheSideAppDividerElement;
@property(retain, nonatomic) VOTElement *previousTableOrCollectionViewApplication; // @synthesize previousTableOrCollectionViewApplication=_previousTableOrCollectionViewApplication;
@property(retain, nonatomic) NSMutableArray *previousTableOrCollectionViewList; // @synthesize previousTableOrCollectionViewList=_previousTableOrCollectionViewList;
@property(retain, nonatomic) NSMutableDictionary *previousTableOrCollectionViewToMetadata; // @synthesize previousTableOrCollectionViewToMetadata=_previousTableOrCollectionViewToMetadata;
@property(nonatomic) _Bool didReceiveForceUpdateChangeToken; // @synthesize didReceiveForceUpdateChangeToken=_didReceiveForceUpdateChangeToken;
@property(retain, nonatomic) NSString *nextStringToSpeakOnScreenChange; // @synthesize nextStringToSpeakOnScreenChange=_nextStringToSpeakOnScreenChange;
@property(retain, nonatomic) VOTElement *nextElementToFocus; // @synthesize nextElementToFocus=_nextElementToFocus;
@property(nonatomic) double lastElementChangeTime; // @synthesize lastElementChangeTime=_lastElementChangeTime;
@property(nonatomic) double lastUserElementTouchTime; // @synthesize lastUserElementTouchTime=_lastUserElementTouchTime;
@property(nonatomic) double lastBlockedRequestBySiriOrDictationTime; // @synthesize lastBlockedRequestBySiriOrDictationTime=_lastBlockedRequestBySiriOrDictationTime;
@property(nonatomic) double lastHomeButtonPressTime; // @synthesize lastHomeButtonPressTime=_lastHomeButtonPressTime;
@property(nonatomic) double lastFolderOperationTime; // @synthesize lastFolderOperationTime=_lastFolderOperationTime;
@property(nonatomic) double lastExternalUnlockTime; // @synthesize lastExternalUnlockTime=_lastExternalUnlockTime;
@property(nonatomic) double lastScreenWakeViaPlayPause; // @synthesize lastScreenWakeViaPlayPause=_lastScreenWakeViaPlayPause;
@property(nonatomic) double lastSilencedAlertTime; // @synthesize lastSilencedAlertTime=_lastSilencedAlertTime;
@property(nonatomic) double lastActivationTime; // @synthesize lastActivationTime=_lastActivationTime;
@property(nonatomic) double lastCursorBorderHitTime; // @synthesize lastCursorBorderHitTime=_lastCursorBorderHitTime;
@property(retain, nonatomic) NSArray *previouslySpokenImageCaptionResults; // @synthesize previouslySpokenImageCaptionResults=_previouslySpokenImageCaptionResults;
@property(nonatomic) _Bool tvIsInteractingWithRotor; // @synthesize tvIsInteractingWithRotor=_tvIsInteractingWithRotor;
@property(copy, nonatomic) CDUnknownBlockType currentElementChangedCallback; // @synthesize currentElementChangedCallback=_currentElementChangedCallback;
@property(copy, nonatomic) CDUnknownBlockType elementManagerHandledEventCallback; // @synthesize elementManagerHandledEventCallback=_elementManagerHandledEventCallback;
@property(nonatomic) _Bool unitTestingMode; // @synthesize unitTestingMode=_unitTestingMode;
@property(nonatomic) double lastLayoutChangeNotificationTime; // @synthesize lastLayoutChangeNotificationTime=_lastLayoutChangeNotificationTime;
@property(retain, nonatomic) VOTElement *initialReadAllElement; // @synthesize initialReadAllElement=_initialReadAllElement;
@property(retain, nonatomic) VOTElement *nativeFocusElement; // @synthesize nativeFocusElement=_nativeFocusElement;
@property(nonatomic) unsigned long long lastTextPressAction; // @synthesize lastTextPressAction=_lastTextPressAction;
@property(nonatomic) _Bool didIgnoreLastFirstResponderChangeOnSelectionChange; // @synthesize didIgnoreLastFirstResponderChangeOnSelectionChange=_didIgnoreLastFirstResponderChangeOnSelectionChange;
@property(retain, nonatomic) NSMutableDictionary *fingersFromTouchCommands; // @synthesize fingersFromTouchCommands=_fingersFromTouchCommands;
@property(copy, nonatomic) NSString *previousFirstResponderValue; // @synthesize previousFirstResponderValue=_previousFirstResponderValue;
@property(retain, nonatomic) VOTElement *previousFirstResponder; // @synthesize previousFirstResponder=_previousFirstResponder;
@property(nonatomic) unsigned long long currentSimilarTraits; // @synthesize currentSimilarTraits=_currentSimilarTraits;
@property(nonatomic) double lastSearchForElementsTime; // @synthesize lastSearchForElementsTime=_lastSearchForElementsTime;
@property(nonatomic) double lastWebPageLoadTime; // @synthesize lastWebPageLoadTime=_lastWebPageLoadTime;
@property(nonatomic) double lastValueChangeTime; // @synthesize lastValueChangeTime=_lastValueChangeTime;
@property(retain, nonatomic) NSString *lastEventCommand; // @synthesize lastEventCommand=_lastEventCommand;
@property(nonatomic) double lastEventOccurredTime; // @synthesize lastEventOccurredTime=_lastEventOccurredTime;
@property(nonatomic) double lastTemporaryQuickNavDisableTime; // @synthesize lastTemporaryQuickNavDisableTime=_lastTemporaryQuickNavDisableTime;
@property(nonatomic) double lastFirstResponderChangeTime; // @synthesize lastFirstResponderChangeTime=_lastFirstResponderChangeTime;
@property(nonatomic) double touchTypingStartTime; // @synthesize touchTypingStartTime=_touchTypingStartTime;
@property(nonatomic) double lastPressOnMediaSessionElement; // @synthesize lastPressOnMediaSessionElement=_lastPressOnMediaSessionElement;
@property(nonatomic) double lastScreenChangeNotificationTime; // @synthesize lastScreenChangeNotificationTime=_lastScreenChangeNotificationTime;
@property(nonatomic) double lastSelectionChangeTime; // @synthesize lastSelectionChangeTime=_lastSelectionChangeTime;
@property(nonatomic) double lastAlertTime; // @synthesize lastAlertTime=_lastAlertTime;
@property(nonatomic) double lastNothingSoundTime; // @synthesize lastNothingSoundTime=_lastNothingSoundTime;
@property(nonatomic) double timeSpentOnNothing; // @synthesize timeSpentOnNothing=_timeSpentOnNothing;
@property(nonatomic) __weak id <VOTElementUpdateProtocol> updateDelegate; // @synthesize updateDelegate=_updateDelegate;
@property(retain, nonatomic) VOTElement *touchContainer; // @synthesize touchContainer=_touchContainer;
- (void)fillCacheWithElements:(id)arg1;	// IMP=0x00000001000b3300
- (void)_setFetchManager:(id)arg1;	// IMP=0x00000001000b3280
- (id)_fetchManager;	// IMP=0x00000001000b3278
- (id)_lastSeenFontProperties;	// IMP=0x00000001000b3270
- (void)outputManager:(id)arg1 willProcessNextRequest:(id)arg2;	// IMP=0x00000001000b3260
- (void)outputManagerDidFinishProcessingQueuedRequests:(id)arg1;	// IMP=0x00000001000b324c
- (long long)actionsRotorAddBehaviorForElementRotor:(id)arg1;	// IMP=0x00000001000b3244
- (long long)tvInteractionModeForElementRotor:(id)arg1;	// IMP=0x00000001000b322c
- (void)rotor:(id)arg1 didChangeFrom:(long long)arg2 to:(long long)arg3 userInitiated:(_Bool)arg4;	// IMP=0x00000001000b3024
- (id)elementRotor;	// IMP=0x00000001000b301c
- (void)moveToElementMatchingRotorType:(long long)arg1 inDirection:(long long)arg2;	// IMP=0x00000001000b3004
- (void)resetFrequentUpdateTextCache;	// IMP=0x00000001000b2ff4
- (void)_elementUpdatesFrequently;	// IMP=0x00000001000b2bd0
- (_Bool)_elementMonitoringOutputElement:(id)arg1 userMonitored:(_Bool)arg2;	// IMP=0x00000001000b28fc
- (_Bool)stringIsTextAttachment:(id)arg1;	// IMP=0x00000001000b282c
- (id)_textAttachmentElementForString:(id)arg1 inRange:(struct _NSRange)arg2;	// IMP=0x00000001000b275c
- (void)outputTextSegmentForRange:(struct _NSRange)arg1 string:(id)arg2 element:(id)arg3 usePhonetics:(_Bool)arg4 segment:(long long)arg5;	// IMP=0x00000001000b20b0
- (id)_listItemLabelForAXAttributedString:(id)arg1;	// IMP=0x00000001000b1fe0
- (void)updateIndexesForOutputRange:(struct _NSRange)arg1 segment:(long long)arg2 direction:(long long)arg3 outputStringLength:(unsigned long long)arg4;	// IMP=0x00000001000b1fb4
- (struct _NSRange)outputRangeForTextSegmentUnit:(long long)arg1 direction:(long long)arg2 string:(id)arg3 element:(id)arg4;	// IMP=0x00000001000b1eb4
- (void)outputNextTextSegmentUnit:(long long)arg1 direction:(long long)arg2 string:(id)arg3 element:(id)arg4;	// IMP=0x00000001000b1dc4
- (struct _NSRange)_outputRangeForCharacterSegment:(id)arg1 direction:(long long)arg2;	// IMP=0x00000001000b1cc8
- (void)gestureRepeater:(id)arg1 repeaterEventDidFire:(long long)arg2;	// IMP=0x00000001000b1c2c
- (void)gestureRepeaterWillSendFirstRepeaterEvent:(id)arg1;	// IMP=0x00000001000b1bb4
- (void)_sendUserEventOccurredIfNeeded;	// IMP=0x00000001000b1b08
- (void)explorerElementManager:(id)arg1 didFinishReadAll:(_Bool)arg2;	// IMP=0x00000001000b1a34
- (void)explorerElementManager:(id)arg1 willReadElement:(id)arg2;	// IMP=0x00000001000b19b0
- (_Bool)explorerElementManagerShouldBeInUnitTestingMode:(id)arg1;	// IMP=0x00000001000b19a4
- (void)explorerElementManager:(id)arg1 didSetExplorerElementFocus:(id)arg2;	// IMP=0x00000001000b1998
- (void)willBeginReadAll:(id)arg1;	// IMP=0x00000001000b1990
- (void)_updateExplorerElementsIfNeeded;	// IMP=0x00000001000b17a0
- (void)__interruptSpeachAndPlayBorderHitSound;	// IMP=0x00000001000b169c
- (void)_interruptSpeachAndPlayBorderHitSound;	// IMP=0x00000001000b1678
- (void)__sendOutputRequest:(id)arg1;	// IMP=0x00000001000b15e8
- (void)_speakMessages:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3 announcement:(_Bool)arg4 brailleOnly:(_Bool)arg5;	// IMP=0x00000001000b11e8
- (void)_speakMessages:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3;	// IMP=0x00000001000b11d4
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3 announcement:(_Bool)arg4 brailleOnly:(_Bool)arg5;	// IMP=0x00000001000b10e0
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3;	// IMP=0x00000001000b10cc
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2 announcement:(_Bool)arg3 brailleOnly:(_Bool)arg4;	// IMP=0x00000001000b10b4
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2;	// IMP=0x00000001000b109c
- (void)_tvRotorInteractionTimerFired;	// IMP=0x00000001000b1024
- (void)__tvOS_HandleToggleNavigationStyle:(id)arg1;	// IMP=0x00000001000b0e30
- (void)__tvOS_handleValueChangedWithType:(id)arg1 oldValue:(id)arg2 newValue:(id)arg3 insertedTextOrNil:(id)arg4 isSecureText:(_Bool)arg5;	// IMP=0x00000001000b08fc
- (void)_readExplorerElementsAfterSpeechFinishedTimerFired;	// IMP=0x00000001000b0790
- (void)__tvOS_handleUpdatePreferredTVInteractionModeTimer;	// IMP=0x00000001000b06d8
- (void)__handleUpdateVisualsTimer;	// IMP=0x00000001000b0664
- (void)__updateVoiceOverEnabledWarningBannerVisibility;	// IMP=0x00000001000b03c0
- (void)_performTouchPadTapAtLocation:(struct CGPoint)arg1;	// IMP=0x00000001000b029c
- (id)__targetElementForFocusElement:(id)arg1 mustBeAccessibilityElement:(_Bool)arg2;	// IMP=0x00000001000b0164
- (id)__consumeAppTransitionForAnnouncingIfNeeded:(id)arg1;	// IMP=0x00000001000aff7c
- (_Bool)_bundleIdentifierIsHostedByPineBoard:(id)arg1;	// IMP=0x00000001000afeb4
- (void)_tvOS_updateWithNativeFocus;	// IMP=0x00000001000af238
- (void)_tvOS_retryUpdateWithNativeFocus;	// IMP=0x00000001000af0c0
- (id)_focusElementForFocusUpdate:(id)arg1;	// IMP=0x00000001000aef54
- (void)_tvOS_handleUpdateWithNativeFocusFromTimer;	// IMP=0x00000001000aeec4
- (void)_tvOS_updateWithNativeFocus:(id)arg1 withDelay:(double)arg2;	// IMP=0x00000001000aecf4
- (void)_tvOS_updateWithNativeFocus:(id)arg1 withDelayNumber:(id)arg2;	// IMP=0x00000001000aec94
- (_Bool)_didFocusUpdateOriginateFromFocusedApp:(id)arg1;	// IMP=0x00000001000aeab4
- (void)__updateElementVisuals;	// IMP=0x00000001000ae980
- (void)__tvOS_toggleExploreFocusAffectsNativeFocusPreference;	// IMP=0x00000001000ae83c
- (void)__tvOS_toggleSilenceAnnouncementsUserPreference;	// IMP=0x00000001000ae6f8
- (long long)_tvOS_userPreferredNonDirectTouchInteractionMode;	// IMP=0x00000001000ae6f0
- (void)__tvOS_toggleSpeakNonfocusableElementsAfterDelayUserPreference;	// IMP=0x00000001000ae5ac
- (void)__tvOS_toggleAudioDescriptions;	// IMP=0x00000001000ae404
- (void)__sendHIDEvents:(id)arg1 postEventDelays:(id)arg2;	// IMP=0x00000001000ae134
- (void)__sendTVRemoteCommand:(unsigned long long)arg1;	// IMP=0x00000001000adcdc
- (_Bool)_sendTVRemoteCommandOverrideForAXCommand:(long long)arg1;	// IMP=0x00000001000adc28
- (void)__handleTVSelectButtonClicked;	// IMP=0x00000001000ad8ec
- (void)__handleTVMenuButtonClicked;	// IMP=0x00000001000ad7d4
- (_Bool)handleTVSelectButtonClicked;	// IMP=0x00000001000ad72c
- (_Bool)handleTVMenuButtonClicked;	// IMP=0x00000001000ad6a4
- (_Bool)_isDictationInProgressForCurrentApp;	// IMP=0x00000001000ad600
@property(nonatomic) _Bool exploreFocusAffectsNativeFocus;
@property(nonatomic) _Bool shouldSilenceAnnouncements;
@property(nonatomic) _Bool speakNonfocusableElementsAfterDelay;
- (id)focusedApplication:(id)arg1;	// IMP=0x00000001000ad0a4
- (void)_setLastSeenDeviceOrientation:(long long)arg1;	// IMP=0x00000001000ad09c
- (void)_handlePerformEjectButtonPress:(id)arg1;	// IMP=0x00000001000ad084
- (void)_handlePerformVolumeDownButtonPress:(id)arg1;	// IMP=0x00000001000ad06c
- (void)_handlePerformVolumeUpButtonPress:(id)arg1;	// IMP=0x00000001000ad054
- (_Bool)shouldAllowSpeaking;	// IMP=0x00000001000ad020
- (_Bool)_processWatchSpecificOverrides:(id)arg1;	// IMP=0x00000001000acfa0
- (void)_handleKeyboardCommandEvent:(id)arg1;	// IMP=0x00000001000ac5bc
- (void)_speakBrailleAutoAdvanceSpeed;	// IMP=0x00000001000ac490
- (double)_brailleAutoAdvanceStepFactor;	// IMP=0x00000001000ac450
- (void)_handleBrailleIncreaseAutoAdvanceSpeed:(id)arg1;	// IMP=0x00000001000ac2c4
- (void)_handleBrailleDecreaseAutoAdvanceSpeed:(id)arg1;	// IMP=0x00000001000ac138
- (void)_handleBrailleEnableAutoAdvance:(id)arg1;	// IMP=0x00000001000ac020
- (void)_handleBrailleWordWrapToggleEvent:(id)arg1;	// IMP=0x00000001000abef0
- (void)_handleBrailleRefreshEvent:(id)arg1;	// IMP=0x00000001000abde4
- (void)_handleBrailleEvent:(id)arg1;	// IMP=0x00000001000abd74
- (void)_handleActivateBrailleScreenInput:(id)arg1;	// IMP=0x00000001000abd5c
- (void)_handleAnnounceQuickNav:(id)arg1;	// IMP=0x00000001000abb08
- (void)_handleToggleQuickNav:(id)arg1;	// IMP=0x00000001000aba60
- (void)_handleToggleSingleLetterQuickNav:(id)arg1;	// IMP=0x00000001000ab70c
- (void)_handleToggleVoiceOverModifierKeyLock:(id)arg1;	// IMP=0x00000001000ab604
- (void)_handleSiriFinishedListening:(id)arg1;	// IMP=0x00000001000ab5e8
- (void)_handleSiriStartedListening:(id)arg1;	// IMP=0x00000001000ab580
- (void)_handleSiriFinishedTalking:(id)arg1;	// IMP=0x00000001000ab4d4
- (void)_handleSiriStartedTalking:(id)arg1;	// IMP=0x00000001000ab4b8
- (void)_handleHomeButtonPress;	// IMP=0x00000001000ab188
- (void)handleHomeButtonPress;	// IMP=0x00000001000ab184
- (void)handlePlayPauseButtonPress;	// IMP=0x00000001000ab180
- (void)_handlePlayPauseButtonPress;	// IMP=0x00000001000ab148
- (_Bool)_shouldSuppressSpeechForPlayPause;	// IMP=0x00000001000ab118
- (void)handleStateReset;	// IMP=0x00000001000ab0f4
- (void)_handleStateReset;	// IMP=0x00000001000ab088
- (void)_handleDecreaseVolume:(id)arg1;	// IMP=0x00000001000ab014
- (void)_handleIncreaseVolume:(id)arg1;	// IMP=0x00000001000aafa4
- (void)_handleVolumeChange:(float)arg1;	// IMP=0x00000001000aae24
- (void)_handleRotateOrientation:(id)arg1;	// IMP=0x00000001000aadb4
- (_Bool)_shouldAllowSpeakThisGesture;	// IMP=0x00000001000aadac
- (_Bool)allowsSystemControlEventForPosition:(int)arg1;	// IMP=0x00000001000aada4
- (void)_handleSiriShortcutEvent:(id)arg1;	// IMP=0x00000001000aada0
- (void)_handleSendCancelEvent:(id)arg1;	// IMP=0x00000001000aad38
- (void)_handleSystemCommandSwitchToNextApp:(id)arg1;	// IMP=0x00000001000aacec
- (void)_handleSystemCommandSwitchToPreviousApp:(id)arg1;	// IMP=0x00000001000aaca0
- (void)_handleSystemCommandTakeScreenshot:(id)arg1;	// IMP=0x00000001000aac58
- (void)_handleSystemCommandToggleReachability:(id)arg1;	// IMP=0x00000001000aac10
- (void)_handleSystemCommandActivateAccessibilityShortcut:(id)arg1;	// IMP=0x00000001000aabc8
- (void)_handleSystemCommandSpotlight:(id)arg1;	// IMP=0x00000001000aab80
- (void)_handleSystemCommandActivateLockButton:(id)arg1;	// IMP=0x00000001000aab38
- (void)_handleSystemCommandToggleAppSwitcher:(id)arg1;	// IMP=0x00000001000aaaf0
- (void)_handleSystemCommandToggleDock:(id)arg1;	// IMP=0x00000001000aaaa8
- (void)_handleSystemCommandActivateSpeakScreen:(id)arg1;	// IMP=0x00000001000aaa9c
- (void)_handleSystemCommandControlCenter:(id)arg1;	// IMP=0x00000001000aaa54
- (void)_handleSystemCommandNotificationCenter:(id)arg1;	// IMP=0x00000001000aaa0c
- (void)_handleSystemControlActivation:(id)arg1;	// IMP=0x00000001000aa898
- (void)_handleScrollByPageNotification:(id)arg1;	// IMP=0x00000001000a97a0
- (void)_handleAutoCorrectionMadeNotification:(id)arg1;	// IMP=0x00000001000a9558
- (void)_handleKeyboardChangedNotification;	// IMP=0x00000001000a94a4
- (void)_handleAutoCorrectionDisplayNotification:(id)arg1;	// IMP=0x00000001000a926c
- (id)continuousPathSuggestion;	// IMP=0x00000001000a9264
- (void)_handleUnmuteEligibleEventOccured;	// IMP=0x00000001000a921c
- (void)_handleReleaseExclusiveAudioHardware;	// IMP=0x00000001000a9200
- (void)_handleRequestExclusiveAudioHardware;	// IMP=0x00000001000a9154
- (void)_handleStopSpeaking;	// IMP=0x00000001000a90c4
- (void)_handleScreenOffSilently;	// IMP=0x00000001000a90a4
- (void)_handleScreenOnSilently;	// IMP=0x00000001000a9084
- (void)_handleScreenOff;	// IMP=0x00000001000a8fec
- (void)_handleScreenOn;	// IMP=0x00000001000a8f80
- (void)_handleDidReceiveVisionEngineResult:(id)arg1;	// IMP=0x00000001000a8c38
- (void)_handleCaptionsDisplayedNotification:(id)arg1;	// IMP=0x00000001000a8b1c
- (void)_captionsDisplayedWithTextRuns:(id)arg1;	// IMP=0x00000001000a88a8
- (void)_handleVisualsUpdate:(id)arg1;	// IMP=0x00000001000a8840
- (void)_handleWebPageLoaded:(id)arg1;	// IMP=0x00000001000a8400
- (_Bool)_moveToWebItemDuringLoadIfNecessary;	// IMP=0x00000001000a8174
- (void)_webPageLoadingSound;	// IMP=0x00000001000a8098
- (void)_webPageElementFinder;	// IMP=0x00000001000a7fc8
- (void)_clearWebLoadedSound;	// IMP=0x00000001000a7f60
- (void)_handleScreenChange:(id)arg1 sound:(id)arg2;	// IMP=0x00000001000a76a8
- (void)_updateFocusContext:(id)arg1;	// IMP=0x00000001000a75bc
- (void)_handleApplicationWasActivated:(id)arg1;	// IMP=0x00000001000a735c
- (void)_updateDisplayWithCurrentElement;	// IMP=0x00000001000a730c
- (void)_handleAlertReceived:(id)arg1 forApplication:(struct __AXUIElement *)arg2;	// IMP=0x00000001000a67bc
- (id)_retrieveDefaultElementForPosition:(struct CGPoint)arg1;	// IMP=0x00000001000a6464
- (void)_systemNotificationInProgressForRequest:(id)arg1;	// IMP=0x00000001000a63f0
- (id)_handleEditingStyleResolutionForAnnouncement:(id)arg1;	// IMP=0x00000001000a60b8
- (void)_handleAnnouncementWithData:(id)arg1 pid:(int)arg2;	// IMP=0x00000001000a5c18
- (void)_handleAnnouncement:(id)arg1;	// IMP=0x00000001000a5c08
- (void)handleAnnouncement:(id)arg1;	// IMP=0x00000001000a5bc8
- (void)_handleAnnouncementNotification:(id)arg1;	// IMP=0x00000001000a5a10
- (void)_reupdateTextSelectionInformation;	// IMP=0x00000001000a59cc
- (void)_handleInvalidTextInputNotification:(id)arg1;	// IMP=0x00000001000a5954
- (void)_handleInvalidStatusChanged:(id)arg1;	// IMP=0x00000001000a58a0
- (void)_handleSortDirectionChanged:(id)arg1;	// IMP=0x00000001000a583c
- (void)_handleCurrentStateChanged:(id)arg1;	// IMP=0x00000001000a57d8
- (void)_handleExpandedStatusChanged:(id)arg1;	// IMP=0x00000001000a575c
- (void)__handleExpandedStatusChanged;	// IMP=0x00000001000a53ec
- (void)_handleAppSuspendAnimationProgressNotification:(id)arg1;	// IMP=0x00000001000a52ec
- (void)_appSuspensionSoundTimer;	// IMP=0x00000001000a5234
- (void)_handleKeyboardKeySelectedNotification:(id)arg1;	// IMP=0x00000001000a4fcc
- (void)_handleElementMoved:(struct __AXUIElement *)arg1;	// IMP=0x00000001000a4da4
- (void)_processSilentValueChange;	// IMP=0x00000001000a4ce4
- (void)_processValueChangeWithFirstResponder:(id)arg1 existingFirstResponder:(_Bool)arg2 changeType:(id)arg3 changeOrigination:(long long)arg4 isQuiet:(_Bool)arg5;	// IMP=0x00000001000a3024
- (void)resetTextAndSelectionCaches;	// IMP=0x00000001000a2fd4
- (void)_handleTextReplacementOccurredNotification:(id)arg1;	// IMP=0x00000001000a2f3c
- (void)_handleValueChangedNotification:(id)arg1 associatedElement:(id)arg2;	// IMP=0x00000001000a2c38
- (void)_handleNonEditableValueChange:(id)arg1;	// IMP=0x00000001000a2b5c
- (_Bool)_ignoreTextEditingNotificationsForPickerElementUsage;	// IMP=0x00000001000a2990
- (long long)typingFeedbackForKeyboardType;	// IMP=0x00000001000a280c
- (void)_cancelPreviousElementSearch;	// IMP=0x00000001000a27f0
- (void)_updateCurrentElementForTextInputSelectionChangeIfNeeded;	// IMP=0x00000001000a2410
- (struct _NSRange)_elementSelectionRange;	// IMP=0x00000001000a2404
- (void)_elementSelectionRangeDidChange:(struct _NSRange)arg1 reason:(long long)arg2;	// IMP=0x00000001000a23cc
- (void)_handleSelectionChangedNotification:(id)arg1;	// IMP=0x00000001000a0688
- (_Bool)_isKeyboardLineMovement;	// IMP=0x00000001000a0360
- (void)_handleWebSelectionChangedNotification:(id)arg1;	// IMP=0x000000010009fe24
- (_Bool)_hasCurrentApplicationMatchingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010009fde8
- (id)_currentApplicationMatchingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010009fdd8
- (_Bool)_hasApplicationMatchingBlock:(CDUnknownBlockType)arg1 inApplications:(id)arg2;	// IMP=0x000000010009fd9c
- (id)_applicationMatchingBlock:(CDUnknownBlockType)arg1 inApplications:(id)arg2;	// IMP=0x000000010009fc48
- (void)_outputWebLineWithMarkerRange:(id)arg1 withElement:(id)arg2;	// IMP=0x000000010009f9d0
- (_Bool)_shouldSwitchToFirstResponder:(id)arg1;	// IMP=0x000000010009f870
- (void)_handleFirstResponderChangedNotification:(id)arg1;	// IMP=0x000000010009f150
- (void)_handleNativeFocusItemChangedNotification:(id)arg1;	// IMP=0x000000010009ee94
- (id)_firstResponderFromCurrentApplications;	// IMP=0x000000010009ed60
- (void)_handleMoveToElementNotification:(id)arg1;	// IMP=0x000000010009e92c
- (void)_moveToElement:(id)arg1 shouldPlaySound:(_Bool)arg2 echoSameTouchContainer:(_Bool)arg3 moveToElementNotification:(_Bool)arg4;	// IMP=0x000000010009e5e0
- (_Bool)_finishHandlingMoveToElementNotification:(id)arg1 shouldSyncNativeFocusElement:(id)arg2;	// IMP=0x000000010009e3c0
- (id)_verifiedElementWithElement:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x000000010009e2c8
- (id)_verifiedElementWithElement:(id)arg1;	// IMP=0x000000010009ded0
- (_Bool)_shouldAnnounceCustomRotorHintForElement:(id)arg1;	// IMP=0x000000010009dae0
- (void)elementFetchFoundDirectTouchElements:(id)arg1;	// IMP=0x000000010009daa0
- (void)_elementFetchFoundDirectTouchElements:(id)arg1;	// IMP=0x000000010009d9e4
- (void)updateCurrentElementFrame;	// IMP=0x000000010009d974
- (void)_updateCursorFrameForLineFrameMovement:(id)arg1;	// IMP=0x000000010009d848
- (void)_updateCursorFrameForElementIfNeeded:(id)arg1;	// IMP=0x000000010009d7cc
- (void)_updateCurrentElementFrame;	// IMP=0x000000010009d754
- (void)_updateFirstResponder;	// IMP=0x000000010009d62c
- (struct __AXUIElement *)_firstResponderAXUIElementRefFromCurrentApplications;	// IMP=0x000000010009d3bc
- (void)setFirstResponder:(id)arg1;	// IMP=0x000000010009d2d4
- (void)setCurrentElement:(id)arg1;	// IMP=0x000000010009d1fc
- (void)_updateFirstResponderTypingBuffer;	// IMP=0x000000010009d0f8
- (void)_handleLayoutChange:(_Bool)arg1;	// IMP=0x000000010009b534
- (void)_handleLayoutChangeFromTimer;	// IMP=0x000000010009b524
- (void)_handleElementChangedNotification:(id)arg1;	// IMP=0x000000010009b248
- (void)_handleSystemLockedOutputBehavior:(id)arg1 shouldSendRequest:(_Bool *)arg2 startElement:(id *)arg3;	// IMP=0x000000010009ae64
- (id)_firstElementWithCurrentElement:(id)arg1 focusedApplications:(id)arg2;	// IMP=0x000000010009ac68
- (id)_getAutoSpeakWatchFaceElements:(id)arg1;	// IMP=0x000000010009abb0
- (void)_updateApplicationAndSpeak:(id)arg1;	// IMP=0x00000001000981d0
- (_Bool)_isWebAppStillOpen;	// IMP=0x0000000100098118
- (void)_testingSetApplications:(id)arg1;	// IMP=0x000000010009810c
- (_Bool)_addApplicationLabelsAndSummariesToRequest:(id)arg1 applicationNames:(id *)arg2 summaryElements:(id *)arg3;	// IMP=0x000000010009806c
- (id)_retrieveCachedFocusedElementForElementCommunity:(id)arg1;	// IMP=0x0000000100097e00
- (void)_cacheFocusedElement:(id)arg1 forElementCommunity:(id)arg2;	// IMP=0x0000000100097d3c
- (id)_elementCommunityForElement:(id)arg1;	// IMP=0x0000000100097ba4
- (id)_firstElementForFocusFromElementCommunities:(id)arg1 currentElement:(id)arg2;	// IMP=0x000000010009792c
- (id)_firstResponderForApplications:(id)arg1;	// IMP=0x00000001000977ec
- (void)updateApplicationAndSpeak:(id)arg1;	// IMP=0x00000001000977e8
- (void)voiceOverDidRegisterWithSystem;	// IMP=0x0000000100097724
- (void)_handleUpdateAppFromTimer;	// IMP=0x0000000100097664
- (_Bool)_reDispatchUpdateAppFromTimerIfBundlesAreNotReady;	// IMP=0x0000000100097440
- (id)_cachedLaunchIcon:(id)arg1;	// IMP=0x00000001000971f4
- (void)outputRequestFinished:(id)arg1;	// IMP=0x00000001000971b4
- (void)_outputRequestFinished:(id)arg1;	// IMP=0x0000000100096ae8
- (double)_alternativeKeyActivateTime;	// IMP=0x0000000100096a74
- (id)_updateTouchContainerForElement:(id)arg1 playSound:(_Bool)arg2;	// IMP=0x00000001000968a0
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x0000000100096824
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2 onlyOutputTouchContainerAndSounds:(_Bool)arg3 shouldPlayGuideWireSound:(_Bool)arg4 isProtectedApp:(_Bool)arg5;	// IMP=0x00000001000967ec
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2 onlyOutputTouchContainerAndSounds:(_Bool)arg3 canSetAsCurrentElement:(_Bool)arg4 shouldPlayGuideWireSound:(_Bool)arg5 isProtectedApp:(_Bool)arg6 includeHint:(_Bool)arg7 boundaryHit:(_Bool)arg8;	// IMP=0x00000001000956fc
- (id)_getSpeakableContainerForContainer:(id)arg1;	// IMP=0x00000001000955c0
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2 onlyOutputTouchContainerAndSounds:(_Bool)arg3 shouldPlayGuideWireSound:(_Bool)arg4;	// IMP=0x00000001000955b0
- (_Bool)_addElementCommunityNameIfNeededToRequest:(id)arg1 oldElementCommunity:(id)arg2 newElementCommunity:(id)arg3;	// IMP=0x00000001000952f4
- (id)_echoDifferentTouchContainer:(id)arg1 forEvent:(id)arg2;	// IMP=0x00000001000950c8
- (void)_drawTouchContainerFrame;	// IMP=0x00000001000950b8
- (void)_echoNoElementForEvent:(id)arg1;	// IMP=0x0000000100094f70
- (void)_echoSameElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x0000000100094ef4
- (void)_handleMapSameElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x0000000100094854
- (void)_addFormattedStringToRequest:(id)arg1 formattedString:(id)arg2 withElement:(id)arg3;	// IMP=0x0000000100094680
- (void)_switchToOtherRoad;	// IMP=0x00000001000944e4
- (void)_processPassthroughAllowedWithEvent:(id)arg1 initialTouch:(_Bool)arg2;	// IMP=0x00000001000942b8
- (void)_finishPassthroughMode;	// IMP=0x0000000100094244
- (void)_echoStatusBarStatus:(id)arg1;	// IMP=0x0000000100094144
- (_Bool)_echoLineInElement:(id)arg1 forEvent:(id)arg2 forDifferentElement:(_Bool)arg3;	// IMP=0x0000000100093634
- (void)_setLastSeenLineAndColumn:(id)arg1;	// IMP=0x0000000100093608
- (void)_outputDataDetectorIfPresent:(struct CGRect)arg1 element:(id)arg2 includeLinks:(_Bool)arg3;	// IMP=0x0000000100093590
- (id)_checkDataDetectorIfPresent:(struct CGRect)arg1 element:(id)arg2 includeLinks:(_Bool)arg3;	// IMP=0x0000000100093244
- (_Bool)_shouldDismissKeyboardForMovingTooFarAlongYAxisWithEvent:(id)arg1;	// IMP=0x0000000100093180
- (void)_handleTapAndHoldEventMonitor:(id)arg1;	// IMP=0x00000001000930b4
- (void)_continuousPathIdleTimer:(id)arg1;	// IMP=0x0000000100092e10
- (void)_handleKeyboardContinuousPathDidBegin:(id)arg1;	// IMP=0x0000000100092d60
- (void)_handleTracking:(id)arg1;	// IMP=0x0000000100092d54
- (id)_handleProtectedAppLogicForEvent:(id)arg1 element:(id)arg2 point:(struct CGPoint)arg3;	// IMP=0x00000001000929dc
- (id)_currentMedusaApplications;	// IMP=0x0000000100092968
- (id)_copySideAppDividerElementIfApplicableForPoint:(struct CGPoint)arg1;	// IMP=0x00000001000928e0
- (id)_sideAppDividerElement;	// IMP=0x000000010009282c
- (_Bool)_isPoint:(struct CGPoint)arg1 withinRangeForDividerElement:(id)arg2;	// IMP=0x0000000100092670
- (void)setDirectInteractionElement:(id)arg1;	// IMP=0x0000000100092630
- (void)_setDirectInteractionElement:(id)arg1;	// IMP=0x00000001000924ac
- (_Bool)_continueTrackingKeyboardKey:(id)arg1;	// IMP=0x0000000100092360
- (_Bool)_continueTrackingRoadElementWithPoint:(struct CGPoint)arg1;	// IMP=0x00000001000922ec
- (void)_handleToggleSideApp:(id)arg1;	// IMP=0x00000001000922e8
- (void)_handleToggleSideAppIfAvailableInGestures:(id)arg1;	// IMP=0x00000001000922e4
- (void)_handleNextKeyboardLanguage:(id)arg1;	// IMP=0x00000001000922cc
- (void)_handleOpenVoiceOverOptions:(id)arg1;	// IMP=0x000000010009224c
- (void)_handleSwitchToRightElementCommunity:(id)arg1;	// IMP=0x00000001000921b0
- (void)_handleSwitchToLeftElementCommunity:(id)arg1;	// IMP=0x0000000100092114
- (void)_handleTopEdgePanLong:(id)arg1;	// IMP=0x0000000100092034
- (void)_handleTopEdgePanShort:(id)arg1;	// IMP=0x0000000100092030
- (void)_handleBottomEdgePanLong:(id)arg1;	// IMP=0x000000010009202c
- (void)_handleBottomEdgePanShort:(id)arg1;	// IMP=0x0000000100092028
- (void)_handleBottomEdgePanDown:(id)arg1;	// IMP=0x0000000100092024
- (void)_handleEdgeSwipeBottom:(id)arg1;	// IMP=0x0000000100091fd8
- (void)_handleEdgeSwipeTop:(id)arg1;	// IMP=0x0000000100091f8c
- (void)_handleEdgeSwipeLeft:(id)arg1;	// IMP=0x0000000100091f88
- (void)_handleEdgeSwipeRight:(id)arg1;	// IMP=0x0000000100091f84
- (void)_handleSwitchToNextElementCommunity:(id)arg1;	// IMP=0x0000000100091f70
- (void)_handleSwitchToPreviousElementCommunity:(id)arg1;	// IMP=0x0000000100091f5c
- (void)_handleSwitchToElementCommunityPrevious:(_Bool)arg1 event:(id)arg2;	// IMP=0x0000000100091b94
- (id)_allElementCommunitiesWithFocusedApplications:(id)arg1;	// IMP=0x0000000100091a4c
- (id)_additionalElementCommunities;	// IMP=0x0000000100091830
- (id)_elementToFocusWhenSwitchingToElementCommunity:(id)arg1;	// IMP=0x0000000100091734
- (void)_endNativeSliding:(_Bool)arg1;	// IMP=0x0000000100091680
- (void)_addDescription:(id)arg1 toRequest:(id)arg2 withOptions:(unsigned long long)arg3 lastSeenContextDescriptors:(id)arg4;	// IMP=0x0000000100091574
- (void)_addDescription:(id)arg1 toRequest:(id)arg2 withOptions:(unsigned long long)arg3;	// IMP=0x0000000100091564
- (void)updateTitleElementLabels:(id)arg1;	// IMP=0x0000000100091158
- (_Bool)shouldElement:(id)arg1 beCombined:(id)arg2 combineLinks:(_Bool)arg3;	// IMP=0x0000000100090fc4
- (_Bool)elementEligibleToFindTitleElement:(id)arg1;	// IMP=0x0000000100090f10
- (void)_handleOutputElementSummary:(id)arg1;	// IMP=0x00000001000905a4
- (void)_handleOutputComputerVisionAnalysisSummary:(id)arg1 explicitUserRequest:(_Bool)arg2;	// IMP=0x0000000100090348
- (void)_handleOutputComputerVisionAnalysisSummary:(id)arg1;	// IMP=0x0000000100090338
- (void)_visionEngine:(id)arg1 updatedResult:(id)arg2 forElement:(id)arg3 event:(id)arg4 visionOptions:(id)arg5;	// IMP=0x000000010009000c
- (void)visionEngine:(id)arg1 updatedResult:(id)arg2 forElement:(id)arg3 event:(long long)arg4 visionOptions:(id)arg5;	// IMP=0x000000010008ff00
- (void)_handleOutputFocusedElementSummary:(id)arg1;	// IMP=0x000000010008fd24
- (void)_handleSelectedTextOutput:(id)arg1;	// IMP=0x000000010008fafc
- (void)_handleScrollToPoint:(id)arg1;	// IMP=0x000000010008fa1c
- (void)_handleScrollDownPage:(id)arg1;	// IMP=0x000000010008f98c
- (void)_handleScrollByPage:(id)arg1;	// IMP=0x000000010008f988
- (id)_nearestElementWithMatch:(CDUnknownBlockType)arg1 startElement:(id)arg2;	// IMP=0x000000010008f880
- (id)_nearestElementWithMatch:(CDUnknownBlockType)arg1 startElement:(id)arg2 forward:(_Bool)arg3;	// IMP=0x000000010008f70c
- (id)_nearestScrollableElement:(id)arg1;	// IMP=0x000000010008f6d8
- (id)_nearestWebElement:(id)arg1;	// IMP=0x000000010008f6a4
- (void)_handleAppSwitch:(id)arg1;	// IMP=0x000000010008f618
- (void)_handleSpeechRotorValueChange:(id)arg1;	// IMP=0x000000010008f4e4
- (void)_handleSpeechRotorChange:(id)arg1;	// IMP=0x000000010008f3e8
- (void)_handleUsePitchChange:(_Bool)arg1;	// IMP=0x000000010008f2f8
- (void)_handleAudioDuckingChange:(_Bool)arg1;	// IMP=0x000000010008f188
- (void)_handleAudioDestination:(_Bool)arg1;	// IMP=0x000000010008f07c
- (void)_handleActivityRotorChange:(_Bool)arg1;	// IMP=0x000000010008edb0
- (void)_handleSpeechPhoneticsChange:(_Bool)arg1;	// IMP=0x000000010008ec54
- (void)_handleTypingEchoChange:(_Bool)arg1;	// IMP=0x000000010008ea94
- (void)_handleSpeechPunctuationChange:(_Bool)arg1;	// IMP=0x000000010008e5d0
- (void)_handleSoundRotorChange:(_Bool)arg1;	// IMP=0x000000010008e4c0
- (void)_handleSpeechRateChange:(_Bool)arg1;	// IMP=0x000000010008e338
- (void)_handleEscape:(id)arg1;	// IMP=0x000000010008dd64
- (void)_handleStartHelpMode:(id)arg1;	// IMP=0x000000010008dc08
- (_Bool)isOnElementManagerThread;	// IMP=0x000000010008dbf8
- (id)currentApplications;	// IMP=0x000000010008db9c
- (id)currentElement;	// IMP=0x000000010008db54
- (id)_valueForKeyPathOnElementManagerThread:(id)arg1;	// IMP=0x000000010008da80
- (void)__retrieveValueForKeyPath:(id)arg1 intoPointedToLocation:(id)arg2 semaphore:(id)arg3;	// IMP=0x000000010008d9dc
- (struct CGRect)currentLineFrame;	// IMP=0x000000010008d9c8
- (id)_currentElement;	// IMP=0x000000010008d9c0
- (struct _NSRange)_highlightedCharacterRange;	// IMP=0x000000010008d9b4
- (_Bool)customRotorActionsEqual:(id)arg1 otherActions:(id)arg2 ignoreDragItems:(_Bool)arg3;	// IMP=0x000000010008d9a4
- (void)processExternalElementUpdate;	// IMP=0x000000010008d980
- (void)_processExternalElementUpdate;	// IMP=0x000000010008d8a0
- (void)processExternalScrollToVisible:(struct CGPoint)arg1;	// IMP=0x000000010008d820
- (void)_processExternalScrollToVisible:(id)arg1;	// IMP=0x000000010008d66c
- (_Bool)mlElement:(id)arg1 sharesLabel:(id)arg2;	// IMP=0x000000010008d460
- (void)_updateSwipeFrames;	// IMP=0x000000010008d16c
- (void)_updateAnyThreadElementAccess;	// IMP=0x000000010008d134
- (_Bool)_setCurrentElement:(id)arg1 isProtectedApp:(_Bool)arg2 shouldResetTextSelection:(_Bool)arg3 shouldResetCharacterRange:(_Bool)arg4 ignoreIsAccessibilityElementCheck:(_Bool)arg5;	// IMP=0x000000010008be50
- (_Bool)_setCurrentElement:(id)arg1 isProtectedApp:(_Bool)arg2;	// IMP=0x000000010008be38
- (_Bool)_setCurrentElement:(id)arg1;	// IMP=0x000000010008be28
- (_Bool)_isElementValidForFirstResponder:(id)arg1;	// IMP=0x000000010008bd88
- (_Bool)_updateWithMostRecentElementCommunity:(id)arg1;	// IMP=0x000000010008bcec
- (void)_updateMostRecentElementCommunity;	// IMP=0x000000010008bc9c
- (_Bool)_languageRotorItemsContainLanguage:(id)arg1;	// IMP=0x000000010008baac
- (void)_updateExternalAccessory:(id)arg1;	// IMP=0x000000010008baa8
- (void)_resetQuickNavState;	// IMP=0x000000010008b930
- (void)_activateAlternativeKeyboardKey:(id)arg1;	// IMP=0x000000010008b848
- (void)_dismissAlternativeKeyboardKeys;	// IMP=0x000000010008b6f8
- (void)_handleElementMoveToStatusBar:(id)arg1;	// IMP=0x000000010008b6f4
- (void)_handleContainerMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010008b3c4
- (void)_handleGuideElementMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010008b120
- (void)_handleContainerMovement:(id)arg1;	// IMP=0x000000010008b08c
- (void)_handleIntraContainerMovement:(id)arg1;	// IMP=0x000000010008af38
- (void)_handleImageDescriptionsToggle:(long long)arg1;	// IMP=0x000000010008ac54
- (CDStruct_a70f6672)_appInfoForCurrentElement;	// IMP=0x000000010008aa40
- (void)_handleDataComprehensionAction:(long long)arg1 event:(id)arg2;	// IMP=0x000000010008a8f4
- (id)availableDataComprehensionActionsForElement:(id)arg1;	// IMP=0x000000010008a8a0
- (void)_handleCustomRotorAction:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010008a558
- (void)_handleCustomRotorContent:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010008a238
- (id)_currentCustomActionCategory;	// IMP=0x000000010008a1a0
- (id)_currentCustomActions;	// IMP=0x000000010008a060
- (id)_currentCachedCustomActionCategories;	// IMP=0x0000000100089fc8
- (id)_customActionsAddingDragCancelActionIfNecessaryForActions:(id)arg1;	// IMP=0x0000000100089fb0
- (void)_handleValidatedCustomActionMovementThroughActions:(id)arg1 forEvent:(id)arg2 inDirection:(long long)arg3;	// IMP=0x0000000100089d50
- (void)_moveFocusToUpdatedRange:(struct _NSRange)arg1 element:(id)arg2 searchType:(long long)arg3;	// IMP=0x0000000100089938
- (void)_handlePublicCustomRotorMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100088e98
- (_Bool)_customRotorTypeRequiresFirstElementProcessing:(id)arg1;	// IMP=0x0000000100088e80
- (id)webCustomRotorDictionary:(id)arg1 direction:(long long)arg2 forElement:(id)arg3;	// IMP=0x0000000100088c00
- (void)_handleVerticalMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x00000001000887dc
- (void)_handleShowEditingHUD:(id)arg1;	// IMP=0x0000000100088708
- (void)_handleRealtimeElementMovement:(id)arg1;	// IMP=0x0000000100088418
- (void)_handleElementMovement:(id)arg1;	// IMP=0x0000000100087b24
- (void)_handleMoveToElementBelow:(id)arg1;	// IMP=0x0000000100087b14
- (void)_handleMoveToElementAbove:(id)arg1;	// IMP=0x0000000100087b04
- (_Bool)_moveElementToFlowTo:(id)arg1;	// IMP=0x00000001000878a8
- (void)_setNearestElementMovingForward:(_Bool)arg1;	// IMP=0x00000001000877a4
- (id)_sonarElementInForwardDirection:(_Bool)arg1 limit:(long long)arg2;	// IMP=0x0000000100087794
- (id)_sonarElementFromPoint:(struct CGPoint)arg1 inForwardDirection:(_Bool)arg2 limit:(long long)arg3;	// IMP=0x0000000100087020
- (_Bool)_prepareElementOutputHeaders:(id)arg1 currentElement:(id)arg2 request:(id)arg3;	// IMP=0x0000000100086c24
- (_Bool)speakTableHeadersForElement:(id)arg1;	// IMP=0x0000000100086b6c
- (_Bool)speakTableRowAndColumnForElement:(id)arg1;	// IMP=0x0000000100086ab4
- (_Bool)determineFullImageDescriptionsEnabled:(id)arg1;	// IMP=0x0000000100086940
- (_Bool)determineSceneDetectionsEnabled:(id)arg1;	// IMP=0x0000000100086710
- (long long)modifierKeyChoiceForElement:(id)arg1;	// IMP=0x0000000100086658
- (id)determineActivityForElement:(id)arg1;	// IMP=0x0000000100086650
- (void)_outputSelectionDifference:(struct _NSRange)arg1 oldRange:(struct _NSRange)arg2 string:(id)arg3 language:(id)arg4;	// IMP=0x0000000100085c9c
- (void)_outputSelectionDifference:(struct _NSRange)arg1 oldRange:(struct _NSRange)arg2 string:(id)arg3;	// IMP=0x0000000100085c8c
- (void)_handlePerformTextOperation:(id)arg1;	// IMP=0x0000000100085abc
- (void)_handleNextTextOperationInDirection:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100085464
- (id)_currentResponder;	// IMP=0x0000000100085380
- (id)getCurrentElement;	// IMP=0x0000000100085374
- (void)refreshBraille;	// IMP=0x000000010008531c
- (void)_handleScreenUnlock;	// IMP=0x00000001000852f8
- (void)_handleScreenLock:(id)arg1;	// IMP=0x0000000100084f2c
- (void)_handlePressActionResultAtTime:(id)arg1;	// IMP=0x0000000100084cdc
- (void)_simulatedPressOutputTimer:(id)arg1;	// IMP=0x0000000100084740
- (void)_handleContextMenuStatusNotification:(id)arg1;	// IMP=0x000000010008463c
- (void)_handlePauseSpeechAndHapticsNotification:(id)arg1;	// IMP=0x000000010008446c
- (void)_handleDuckingDisabling:(id)arg1;	// IMP=0x00000001000842b4
- (_Bool)_handleSimulatedLongPress:(id)arg1;	// IMP=0x0000000100084154
- (void)_reallySimulateLongPressForElement:(id)arg1;	// IMP=0x0000000100083f20
- (void)_postBrailleHomeButtonPress;	// IMP=0x0000000100083f08
- (void)_handlePerformHomeButtonPress:(id)arg1;	// IMP=0x0000000100083e94
- (void)_handleStartSiri:(id)arg1;	// IMP=0x0000000100083e4c
- (void)_handleToggleCaptionPanel:(id)arg1;	// IMP=0x0000000100083d34
- (void)_handleToggleScreenCurtain:(id)arg1;	// IMP=0x0000000100083cf0
- (void)_handleToggleRotationCapability:(id)arg1;	// IMP=0x0000000100083b34
- (void)_handleToggleMute:(id)arg1;	// IMP=0x0000000100083af0
- (void)_simulatedForceTouchLift;	// IMP=0x0000000100083920
- (_Bool)_canActivateTapticTime;	// IMP=0x0000000100083918
- (void)_handleWatchWakeTripleTap:(id)arg1;	// IMP=0x0000000100083860
- (void)_handleWatchWakeDoubleTap:(id)arg1;	// IMP=0x00000001000837a8
- (void)_handleWatchWakeTap:(id)arg1;	// IMP=0x0000000100083688
- (void)_handleSimulatedForceTouchEvent:(id)arg1;	// IMP=0x00000001000834c4
- (void)_sendAutomationTouchCommand:(unsigned int)arg1 location:(struct CGPoint)arg2;	// IMP=0x0000000100083400
- (void)_handleAutomationGeneratedChordChangeEvent:(id)arg1;	// IMP=0x00000001000830ac
- (void)_handleAutomationGeneratedTouchCancelEvent:(id)arg1;	// IMP=0x0000000100083008
- (void)_handleAutomationGeneratedTouchMoveEvent:(id)arg1;	// IMP=0x0000000100082ef4
- (void)_handleAutomationGeneratedTouchDownEvent:(id)arg1;	// IMP=0x0000000100082d5c
- (void)_handleAutomationGeneratedTouchUpEvent:(id)arg1;	// IMP=0x0000000100082c10
- (void)_handleSimpleTap:(id)arg1;	// IMP=0x00000001000829d8
- (_Bool)_shouldSendTapStraightToSystem;	// IMP=0x00000001000829d0
- (void)_handlePerformDataComprehensionAction:(id)arg1;	// IMP=0x00000001000829cc
- (void)_handlePerformCustomAction:(id)arg1;	// IMP=0x0000000100082730
- (id)actionElement;	// IMP=0x0000000100082724
- (void)_disableQuickNavStateTemporarily;	// IMP=0x0000000100082604
- (void)_handlePerformPressAction:(id)arg1;	// IMP=0x000000010008150c
- (_Bool)_updateCursorAfterPressForElement:(id)arg1 currentElementRange:(struct _NSRange)arg2 request:(id)arg3 didHaveCursor:(_Bool)arg4 doesHaveCursor:(_Bool)arg5;	// IMP=0x00000001000810fc
- (void)_updateLastFirstResponderChangedTime;	// IMP=0x00000001000810d4
- (void)_updateCurrentWordContextForBook:(id)arg1;	// IMP=0x0000000100080fc8
- (_Bool)_useLineFrameBoundsForTouch:(id)arg1;	// IMP=0x0000000100080ef8
- (void)_handleTripleTap:(id)arg1;	// IMP=0x0000000100080ef4
- (void)_handleDoubleTap:(id)arg1;	// IMP=0x0000000100080ee8
- (void)_handleStartStopToggle:(id)arg1;	// IMP=0x0000000100080e8c
- (void)_handleToggleCrownNavigation:(id)arg1;	// IMP=0x0000000100080d74
@property(readonly, nonatomic) _Bool shouldSnarfCrown;
- (void)_handleLabelElement:(id)arg1;	// IMP=0x0000000100080bfc
- (void)_handleMonitorElement:(id)arg1;	// IMP=0x00000001000806b8
- (void)_resetElementLabel;	// IMP=0x0000000100080648
- (void)_handleLabelElementAcceptedNotification:(id)arg1;	// IMP=0x0000000100080500
- (void)_handleAudioDuckingToggle:(id)arg1;	// IMP=0x00000001000804f0
- (_Bool)_savedDescriptionToPhoto:(id)arg1 description:(id)arg2 element:(id)arg3;	// IMP=0x0000000100080384
- (void)_handleWebTextAvailableNotification:(id)arg1;	// IMP=0x00000001000802f4
- (void)_handleWebSearchResult:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100080298
- (void)_handleWebTextMatchSelectedNotification:(id)arg1;	// IMP=0x0000000100080094
- (_Bool)_shouldMoveToLastWebFormControl;	// IMP=0x000000010007ffa8
- (void)_handleWebFormControlInteractionEndNotification:(id)arg1;	// IMP=0x000000010007ff64
- (void)_handleWebFormControlInteractionStartNotification:(id)arg1;	// IMP=0x000000010007fec4
- (void)_handleScreenWillWakeNotification:(id)arg1;	// IMP=0x000000010007fe3c
- (void)_handleRealtimeElementUpdate:(id)arg1;	// IMP=0x000000010007fdac
- (void)_handleScreenWillChangeNotification:(id)arg1;	// IMP=0x000000010007fcec
- (void)_handleFocusedElementContentChangeNotification:(id)arg1;	// IMP=0x000000010007fc74
- (void)_handleBarcodeVisibilityNotification:(id)arg1;	// IMP=0x000000010007fb50
- (void)_handleCameraCenteredNotification:(id)arg1;	// IMP=0x000000010007fb00
- (void)_handleKBPopupVariantsNotification:(id)arg1;	// IMP=0x000000010007f9e0
- (void)_handleAdjustValue:(id)arg1 reverse:(_Bool)arg2;	// IMP=0x000000010007f770
- (void)_valueWait:(id)arg1 oldValue:(id)arg2 waitTime:(double)arg3 borderHitIfNoChange:(_Bool)arg4;	// IMP=0x000000010007f3f8
- (void)_valueWait:(id)arg1 oldValue:(id)arg2 waitTime:(double)arg3;	// IMP=0x000000010007f3e8
- (_Bool)_handleNextAutofill:(id)arg1 reverse:(_Bool)arg2;	// IMP=0x000000010007f050
- (void)_finishHandlingNextAutofillWithElement:(id)arg1;	// IMP=0x000000010007ef90
- (void)_handlePerformTapAutofill:(id)arg1;	// IMP=0x000000010007edd0
- (void)_handleOutputTextStyle:(id)arg1;	// IMP=0x000000010007ebac
- (void)_handleSearchRotorSetMathPosition:(id)arg1;	// IMP=0x000000010007e978
- (id)_currentRotorSelection;	// IMP=0x000000010007e808
- (void)_handleMathGranularMovement:(long long)arg1 event:(id)arg2;	// IMP=0x000000010007e644
- (id)_treePositionForMathSegment:(id)arg1;	// IMP=0x000000010007e5d8
- (void)_handleUpdatedMathElementIndex;	// IMP=0x000000010007e504
- (void)_refreshMathSegmentsIfNeeded;	// IMP=0x000000010007e4f4
- (void)_refreshMathSegmentsIfNeededWithPreferredDirection:(long long)arg1;	// IMP=0x000000010007e230
- (unsigned long long)_currentMathGranularityLevel;	// IMP=0x000000010007e1f4
- (void)_resetMathGranularMovementState;	// IMP=0x000000010007e1c0
- (void)_outputNavigationDirectionMode:(long long)arg1;	// IMP=0x000000010007e0f8
- (long long)_newNavigationDirectionModeForRotorDirection:(long long)arg1;	// IMP=0x000000010007e05c
- (void)_handleNavigationDirectionChangeWithDirection:(long long)arg1;	// IMP=0x000000010007df9c
- (void)_handleTrackingDetailMovement:(_Bool)arg1 event:(id)arg2;	// IMP=0x000000010007ded0
- (void)_handleZoomMovement:(long long)arg1 event:(id)arg2;	// IMP=0x000000010007dd0c
- (CDStruct_912cb5d2)_handleUserCharacterSelection:(CDStruct_912cb5d2)arg1 inString:(id)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007db30
- (struct _NSRange)_characterRangeWithFaultTolerance:(long long)arg1 forward:(_Bool)arg2 element:(id)arg3;	// IMP=0x000000010007da90
- (CDStruct_912cb5d2)_handleUserAllSelection:(CDStruct_912cb5d2)arg1 inString:(id)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007da0c
- (CDStruct_912cb5d2)_handleUserPageSelection:(CDStruct_912cb5d2)arg1 inString:(id)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007d958
- (CDStruct_912cb5d2)_handleUserLineSelectionInElement:(id)arg1 currentRange:(CDStruct_912cb5d2)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007d72c
- (struct _NSRange)_lineRangeWithFaultTolerance:(long long)arg1 forward:(_Bool)arg2 element:(id)arg3;	// IMP=0x000000010007d6ac
- (CDStruct_912cb5d2)_handleUserWordSelectionInElement:(id)arg1 currentRange:(CDStruct_912cb5d2)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007d560
- (void)_handleUserSelection:(id)arg1;	// IMP=0x000000010007d55c
- (void)updateCursorFrameAfterLift;	// IMP=0x000000010007d538
- (void)_updateCursorFrameAfterLift;	// IMP=0x000000010007d488
- (void)_handleStartStopTextSelection:(id)arg1;	// IMP=0x000000010007d368
- (void)_handleMisspelledWordRotorAction:(_Bool)arg1;	// IMP=0x000000010007cf84
- (void)_processMisspelledWordTextReplacement;	// IMP=0x000000010007cd10
- (void)_handleTextRotorSelectionAction:(_Bool)arg1;	// IMP=0x000000010007cc9c
- (void)_handleWebSelection:(id)arg1;	// IMP=0x000000010007cc98
- (void)_outputNextTextSegmentUnit:(long long)arg1 direction:(long long)arg2;	// IMP=0x000000010007c86c
- (void)_handleOutputCharacterPhonetically:(id)arg1;	// IMP=0x000000010007c6d8
- (void)_handleOutputRowHeader:(id)arg1;	// IMP=0x000000010007c6c8
- (void)_handleOutputColumnHeader:(id)arg1;	// IMP=0x000000010007c6b8
- (void)_handleOutputColumnOrRowHeader:(id)arg1 row:(_Bool)arg2;	// IMP=0x000000010007c41c
- (void)_handleOutputColumnContents:(id)arg1;	// IMP=0x000000010007c40c
- (void)_handleOutputRowContents:(id)arg1;	// IMP=0x000000010007c3fc
- (void)_handleOutputTableRowColumnInfo:(id)arg1;	// IMP=0x000000010007c2c4
- (void)_handleOutputCellRowColumnInfo:(id)arg1;	// IMP=0x000000010007c188
- (void)_handleOutputColumnOrRowContents:(id)arg1 row:(_Bool)arg2;	// IMP=0x000000010007bf2c
- (void)_handleOutputCharacter:(id)arg1;	// IMP=0x000000010007be10
- (id)_retrieveCurrentCharacterFromEditableElement;	// IMP=0x000000010007bce4
- (void)_handleRowMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010007ba30
- (void)_handleGenericTextSegmentMovement:(id)arg1 direction:(long long)arg2 granulary:(long long)arg3;	// IMP=0x000000010007b854
- (void)_handleTextWordMovement:(id)arg1;	// IMP=0x000000010007b4c0
- (void)_handleTextDocumentMovement:(id)arg1;	// IMP=0x000000010007b338
- (void)_handleRotorTextSelectionMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010007b244
- (void)_handleAdjustTextSelectionSegmentType:(id)arg1;	// IMP=0x000000010007b1b0
- (void)_handleParagraphMovement:(id)arg1;	// IMP=0x000000010007b118
- (void)_handleSentenceMovement:(id)arg1;	// IMP=0x000000010007b080
- (void)_handleLineMovement:(id)arg1;	// IMP=0x000000010007afe8
- (void)_handleLineMovementInWeb:(id)arg1 direction:(long long)arg2 existingRequest:(id)arg3;	// IMP=0x0000000100079cdc
- (void)_finishHandlingLineMovementInWeb:(id)arg1 direction:(id)arg2 withCurrentElement:(id)arg3 markerArray:(id)arg4 textObjects:(id)arg5 existingRequest:(id)arg6;	// IMP=0x0000000100079a88
- (void)_handleWordMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100079928
- (void)_handleLetterMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x00000001000797a4
- (void)_handleWordMovement:(id)arg1;	// IMP=0x00000001000796fc
- (void)_handleCharacterMovement:(id)arg1;	// IMP=0x0000000100079654
- (void)_moveCursorForElement:(id)arg1 direction:(long long)arg2 unit:(long long)arg3;	// IMP=0x0000000100078f54
- (void)_handleCursorMovementByTextSegment:(id)arg1;	// IMP=0x0000000100078e48
- (void)_handleReadWord:(id)arg1;	// IMP=0x0000000100078964
- (id)_phoneticStringForLetter:(id)arg1 language:(id)arg2;	// IMP=0x0000000100078858
- (void)_handleReadLine:(id)arg1;	// IMP=0x0000000100078624
- (void)_handleOutputLineCount:(id)arg1;	// IMP=0x0000000100078414
- (void)_handleReadItemHint:(id)arg1;	// IMP=0x00000001000782cc
- (void)_handleReadURL:(id)arg1;	// IMP=0x0000000100078158
- (id)_computeChangedFontAttributes:(id)arg1 storedAttributes:(id)arg2 haveMisspellCheck:(_Bool)arg3;	// IMP=0x0000000100076d28
- (id)_orderedMonitoredFontAttributes;	// IMP=0x0000000100076ba4
- (id)_fontDisplayNameForFontName:(id)arg1;	// IMP=0x0000000100076b00
- (void)_handleRotorTypingModeMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x00000001000769d0
- (void)_handleRotorContinusPathChange:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100076868
- (long long)_adjustedRotorIndex:(long long)arg1 inDirection:(long long)arg2 rotorItems:(id)arg3;	// IMP=0x000000010007681c
- (void)_handleRotorBrailleAutoAdvanceMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x00000001000767f8
- (void)_handleRotorBrailleLanguageMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x000000010007667c
- (void)_handleRotorLanguageMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100075ec0
- (id)_languageNameForCode:(id)arg1;	// IMP=0x0000000100075c94
- (void)_resetRotorTextNavigation;	// IMP=0x0000000100075c8c
- (void)_resetOtherTapInputModes;	// IMP=0x0000000100075c30
- (void)_resetSearchType;	// IMP=0x0000000100075c20
- (void)_resetReadAllRequest;	// IMP=0x0000000100075c10
- (void)handleSearchRotorDown:(id)arg1;	// IMP=0x0000000100075bfc
- (void)handleSearchRotorUp:(id)arg1;	// IMP=0x0000000100075be8
- (void)_handleSpeakScreen:(id)arg1;	// IMP=0x0000000100075be4
- (void)_handleSingleLetterSearch:(id)arg1;	// IMP=0x000000010007596c
- (void)_handleSearchRotorMovementWithoutRotorUpdateInDirectionUp:(_Bool)arg1 event:(id)arg2;	// IMP=0x0000000100075560
- (void)_handleDirectElementSearch:(id)arg1;	// IMP=0x0000000100074c40
- (void)_handleColumnMovement:(id)arg1;	// IMP=0x0000000100074aac
- (void)_handleSearchRotorMovement:(_Bool)arg1 event:(id)arg2;	// IMP=0x000000010007499c
- (void)_handleElementSearch:(id)arg1 rotorType:(long long)arg2 direction:(long long)arg3;	// IMP=0x0000000100074894
- (CDUnknownBlockType)_copyRangeMatchBlockForRotorType:(long long)arg1;	// IMP=0x0000000100074728
- (void)_customPublicRotorMatchForType:(id)arg1 range:(struct _NSRange *)arg2 element:(id *)arg3 direction:(long long)arg4 lastSearchUUID:(id *)arg5;	// IMP=0x00000001000744c0
- (CDUnknownBlockType)_copyMatchBlockForRotorType:(long long)arg1 searchType:(long long *)arg2;	// IMP=0x00000001000741b0
- (CDUnknownBlockType)_copyMatchBlockSearchField;	// IMP=0x0000000100074170
- (CDUnknownBlockType)_copyMatchBlockTextField;	// IMP=0x0000000100074130
- (CDUnknownBlockType)_copyMatchBlockDifferent;	// IMP=0x0000000100073fe4
- (CDUnknownBlockType)_copyMatchBlockSimilar;	// IMP=0x0000000100073e98
- (CDUnknownBlockType)_copyMatchBlockSameHeading;	// IMP=0x0000000100073d58
- (CDUnknownBlockType)_copyMatchBlockSameBlockquote;	// IMP=0x0000000100073c60
- (CDUnknownBlockType)_copyMatchBlockBlockquote;	// IMP=0x0000000100073c2c
- (unsigned long long)filterTraitsByPriority:(unsigned long long)arg1;	// IMP=0x0000000100073b50
- (CDUnknownBlockType)_copyMatchBlockButton;	// IMP=0x0000000100073a84
- (CDUnknownBlockType)_copyMatchBlockInternalLink;	// IMP=0x00000001000739e8
- (CDUnknownBlockType)_copyMatchBlockLandmarkStart;	// IMP=0x000000010007392c
- (CDUnknownBlockType)_copyMatchBlockArticleStart;	// IMP=0x0000000100073870
- (CDUnknownBlockType)_copyMatchBlockTableStart;	// IMP=0x00000001000737b4
- (CDUnknownBlockType)_copyMatchBlockFrameStart;	// IMP=0x00000001000736f8
- (CDUnknownBlockType)_copyMatchBlockListStart;	// IMP=0x000000010007358c
- (CDUnknownBlockType)_copyMatchBlockFormElement;	// IMP=0x00000001000734d4
- (CDUnknownBlockType)_copyMatchBlockStaticText;	// IMP=0x0000000100073304
- (CDUnknownBlockType)_copyMatchBlockLink;	// IMP=0x00000001000732c4
- (CDUnknownBlockType)_copyMatchBlockNonVisitedLink;	// IMP=0x000000010007322c
- (CDUnknownBlockType)_copyMatchBlockForHeadingLevel:(long long)arg1 searchType:(long long *)arg2;	// IMP=0x00000001000730ac
- (CDUnknownBlockType)_copyMatchBlockHeader;	// IMP=0x0000000100073020
- (CDUnknownBlockType)_copyMatchBlockVisitedLink;	// IMP=0x0000000100072fd0
- (CDUnknownBlockType)_copyMatchBlockImage;	// IMP=0x0000000100072f90
- (CDUnknownBlockType)_copyMatchBlockAnyElement;	// IMP=0x0000000100072ba0
- (CDUnknownBlockType)_copyMatchBlockForTextAttribute:(long long)arg1 searchType:(long long *)arg2;	// IMP=0x0000000100072b60
- (CDUnknownBlockType)_copyMatchBlockSearchText;	// IMP=0x00000001000729dc
- (void)_elementFetchFoundElement:(id)arg1;	// IMP=0x0000000100071f60
- (_Bool)_isShowingTodayViewForPhone;	// IMP=0x0000000100071ea8
- (void)_echoSearchTypeNotFound:(long long)arg1;	// IMP=0x0000000100071cf4
- (void)_echoSearchNavigationElement:(id)arg1 forRangeAdjustment:(_Bool)arg2;	// IMP=0x0000000100071b00
- (void)_echoFlickNavigationElement:(id)arg1;	// IMP=0x000000010007188c
- (_Bool)_touchContainerDidChangeForElement:(id)arg1 oldElement:(id)arg2;	// IMP=0x00000001000717e8
- (void)_updateContextDescriptors;	// IMP=0x0000000100071564
- (void)elementFetchFound:(id)arg1;	// IMP=0x00000001000712b8
- (void)_handleSearchRotorRight:(id)arg1;	// IMP=0x00000001000712a4
- (void)_handleSearchRotorLeft:(id)arg1;	// IMP=0x0000000100071290
- (void)_handleSearchRotorDirection:(long long)arg1 event:(id)arg2 notifyUser:(_Bool)arg3;	// IMP=0x0000000100070f10
- (void)_handleSearchRotorDirection:(long long)arg1 event:(id)arg2;	// IMP=0x0000000100070f00
- (void)_outputRotorTypeCount;	// IMP=0x0000000100070d98
- (void)setCurrentElementToWebEditableAncestor;	// IMP=0x0000000100070cf4
- (id)webEditableAncestor:(id)arg1;	// IMP=0x0000000100070be8
- (_Bool)_rotorTypeSupportsCounting:(long long)arg1;	// IMP=0x0000000100070bc0
- (void)elementsCounted:(long long)arg1;	// IMP=0x00000001000705e8
- (int)cancelElementCountOutput;	// IMP=0x00000001000705d0
- (_Bool)forceRotorOffGesturedTextInputIfNeeded:(_Bool)arg1;	// IMP=0x00000001000705c8
- (void)setElementRotorToType:(long long)arg1 saveToPreferences:(_Bool)arg2 userInitiated:(_Bool)arg3;	// IMP=0x0000000100070568
- (_Bool)_inMisspelledWordRotor;	// IMP=0x0000000100070558
- (void)setRotor:(id)arg1 toType:(long long)arg2 saveToPreferences:(_Bool)arg3 userInitiated:(_Bool)arg4;	// IMP=0x000000010007053c
- (void)setCurrentTextSelectionSegmentType:(long long)arg1;	// IMP=0x00000001000704f4
- (long long)currentRotorType;	// IMP=0x00000001000704e4
- (void)_handleSearchRotorEcho:(id)arg1;	// IMP=0x00000001000704b0
- (void)_updateRotorForCurrentElement;	// IMP=0x0000000100070434
- (void)_updateRotorForCurrentElement:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100070204
- (void)updateRotorForCurrentElement:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100070144
- (void)_handleStartTextSearch:(id)arg1;	// IMP=0x000000010006ffb4
- (void)_handleOngoingTextSearch:(id)arg1;	// IMP=0x000000010006fea8
- (_Bool)isItemChooserVisible;	// IMP=0x000000010006fea0
- (void)_handleItemChooserSelection:(id)arg1;	// IMP=0x000000010006fdb8
- (void)_didDismissItemChooser;	// IMP=0x000000010006fdb0
- (void)_closeItemChooser;	// IMP=0x000000010006fd38
- (void)_handleItemChooserSelectionMade:(id)arg1;	// IMP=0x000000010006f994
- (void)_handleMoveToNativeFocusedElement:(id)arg1;	// IMP=0x000000010006f838
- (void)_handleMoveToLinkedUI:(id)arg1;	// IMP=0x000000010006f40c
- (long long)_customActionIndex;	// IMP=0x000000010006f404
- (id)_customActionIdentifier;	// IMP=0x000000010006f3fc
- (void)didSearchForOpaqueElement;	// IMP=0x000000010006f3f0
- (void)elementsRetrieved:(id)arg1 finished:(_Bool)arg2;	// IMP=0x000000010006f390
- (void)_elementsRetrieved:(id)arg1 finished:(id)arg2;	// IMP=0x000000010006edcc
- (void)_showItemChooser:(id)arg1;	// IMP=0x000000010006df4c
- (void)_resetItemChooserCache;	// IMP=0x000000010006df30
- (void)systemServerDied;	// IMP=0x000000010006df0c
- (void)_systemServerDied;	// IMP=0x000000010006dedc
- (void)_resetDirectInteractionCache;	// IMP=0x000000010006de34
- (_Bool)inDirectTouchMode;	// IMP=0x000000010006de04
- (_Bool)shouldTurnTrackingIntoDirectTouch;	// IMP=0x000000010006ddfc
- (void)setShouldTurnTrackingIntoDirectTouch:(_Bool)arg1;	// IMP=0x000000010006ddf4
- (_Bool)avoidAnnouncingDirectTouchArea;	// IMP=0x000000010006ddec
- (_Bool)currentElementAllowsDirectTouch;	// IMP=0x000000010006dde4
- (void)_handleDirectTouchExplorationMode:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010006ddc0
- (void)_handleHintsSettingMode:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010006dca8
- (void)_handleDescribedMediaMode:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010006db54
- (void)_handleDescribeImage:(id)arg1;	// IMP=0x000000010006da34
- (void)_handleSearchTextEvent:(id)arg1;	// IMP=0x000000010006d6dc
- (void)_endTextSearchMode;	// IMP=0x000000010006d5e8
- (void)_handleCancelSpeaking:(id)arg1;	// IMP=0x000000010006d59c
- (void)_handleToggleSpeaking:(id)arg1;	// IMP=0x000000010006d4f8
- (void)_handlePauseSpeaking:(id)arg1;	// IMP=0x000000010006d4ac
- (void)_handleContinueSpeaking:(id)arg1;	// IMP=0x000000010006d464
- (void)_handleReadFromTop:(id)arg1;	// IMP=0x000000010006cf34
- (void)_handleCopySpeechToClipboard:(id)arg1;	// IMP=0x000000010006cc2c
- (void)_handleReadAll:(id)arg1;	// IMP=0x000000010006cb0c
- (void)_handleReadScreenSummary:(id)arg1;	// IMP=0x000000010006ca20
- (void)_continueReadAllWithElement:(id)arg1 setCurrentElement:(_Bool *)arg2;	// IMP=0x000000010006c560
- (_Bool)_prepareStitchedWebReadAll:(id)arg1 request:(id)arg2 setCurrentElement:(_Bool *)arg3;	// IMP=0x000000010006bc10
- (void)_handleReadAllNextElement;	// IMP=0x000000010006bb70
- (void)_stopReadAll;	// IMP=0x000000010006bb0c
- (void)_handleReadAllBookContent:(id)arg1 fromTop:(_Bool)arg2;	// IMP=0x000000010006b5e4
- (_Bool)isReadingAll;	// IMP=0x000000010006b5c4
- (void)_startReadingBookForNewPage;	// IMP=0x000000010006b388
- (_Bool)_handleBookNavigateOverPageBoundary:(long long)arg1 unit:(long long)arg2;	// IMP=0x000000010006b2c4
- (void)_handleBookPageFlipAndContinue;	// IMP=0x000000010006b230
- (_Bool)_handleMoreBookContentElements;	// IMP=0x000000010006af18
- (void)_echoLineInBookElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x000000010006a00c
- (_Bool)_bookContentElementInteraction:(struct CGPoint)arg1 element:(id)arg2;	// IMP=0x0000000100069e9c
- (id)_currentTextLineInBookElement:(_Bool)arg1;	// IMP=0x0000000100069c90
- (id)_convertTextMarkerArrayToString:(id)arg1 addInContentExtras:(_Bool)arg2;	// IMP=0x00000001000696f8
- (_Bool)_handleMovementForElementFollowingElement:(id)arg1 direction:(long long)arg2 unit:(long long)arg3 mode:(long long)arg4;	// IMP=0x000000010006957c
- (void)_handleBookContentMovement:(id)arg1 direction:(long long)arg2 unit:(long long)arg3 generateOutput:(_Bool)arg4;	// IMP=0x0000000100068b18
- (void)_handleCurrentContentReadingLineUpdated:(id)arg1;	// IMP=0x00000001000689f0
- (struct _NSRange)_rangeOfLine:(id)arg1 inBookContent:(id)arg2;	// IMP=0x0000000100068838
- (void)_setSelectedTextRange:(struct _NSRange)arg1 onElement:(id)arg2 refreshBraille:(_Bool)arg3;	// IMP=0x0000000100068794
- (void)_handleIdle:(id)arg1;	// IMP=0x0000000100068788
- (void)_tvOS_handleIdleAndTrackingEvents:(id)arg1;	// IMP=0x00000001000686a8
- (void)_cleanupMapInteractionOnIdle;	// IMP=0x000000010006861c
- (void)_performTouchTypingKeyPress:(id)arg1;	// IMP=0x00000001000683f4
- (_Bool)_isTouchTypingEventTooCloseToEdge:(id)arg1;	// IMP=0x0000000100068320
- (void)_setPreviousTouchTypingKey:(id)arg1;	// IMP=0x00000001000682cc
- (void)_setElementUnitIndexesToEndOfElement:(id)arg1;	// IMP=0x0000000100067ff8
- (void)_resetElementUnitIndexes;	// IMP=0x0000000100067f90
- (_Bool)rotorEnabled;	// IMP=0x0000000100067f88
- (void)hideVisualRotor;	// IMP=0x0000000100067f18
- (void)_hideVisualRotor;	// IMP=0x0000000100067dec
- (void)_showVisualRotor:(id)arg1 direction:(_Bool)arg2;	// IMP=0x0000000100067be8
- (double)keyboardKeyPenumbra:(id)arg1;	// IMP=0x0000000100067bb0
- (void)sendRequest:(id)arg1;	// IMP=0x0000000100067a40
- (id)_notificationData:(id)arg1 consumingToken:(id)arg2;	// IMP=0x0000000100067938
- (_Bool)_notificationData:(id)arg1 containsToken:(id)arg2;	// IMP=0x0000000100067850
- (void)handleNotification:(int)arg1 withData:(id)arg2 forElement:(struct __AXUIElement *)arg3;	// IMP=0x0000000100066ed4
- (void)_updateStateForNotificationData:(id)arg1;	// IMP=0x0000000100066890
- (void)_notificationThreadCancel;	// IMP=0x000000010006688c
- (void)_pausedSpeechInterrupted:(id)arg1;	// IMP=0x0000000100066818
- (void)_handleEvent:(id)arg1;	// IMP=0x0000000100066014
- (_Bool)directTouchModeHandledEvent:(id)arg1;	// IMP=0x0000000100065ce8
- (void)_updateContinuousPathTimeout;	// IMP=0x0000000100065bec
- (void)_monitorElements;	// IMP=0x0000000100065558
- (id)_monitoredElementCachedText:(id)arg1;	// IMP=0x00000001000654b0
- (id)_similarMonitoredElement:(id)arg1;	// IMP=0x0000000100065328
- (void)handleEvent:(id)arg1;	// IMP=0x0000000100064e0c
- (_Bool)eventIsSystemEvent:(id)arg1;	// IMP=0x0000000100064bd8
- (void)_updateNavigationModeForClassicRemote;	// IMP=0x0000000100064a6c
- (void)updateNavigationModeForClassicRemote;	// IMP=0x0000000100064a48
- (void)_initializeCommands;	// IMP=0x000000010005f92c
- (void)_migratePerAppDirectTouchBehavior;	// IMP=0x000000010005f4f4
- (void)_initializeSystemEventThread;	// IMP=0x000000010005f49c
- (void)_initializeElementManagerThread;	// IMP=0x000000010005f420
- (void)dealloc;	// IMP=0x000000010005f0e4
- (id)init;	// IMP=0x000000010005e3c0
- (void)_cleanupStateForUnitTesting;	// IMP=0x000000010005e184

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

