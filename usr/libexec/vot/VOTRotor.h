//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSMutableArray, NSString, VOTElement;
@protocol VOTRotorDelegate;

@interface VOTRotor : NSObject
{
    NSString *_typeKey;	// 8 = 0x8
    struct __CFArray *_currentRotors;	// 16 = 0x10
    long long _currentRotorType;	// 24 = 0x18
    long long _currentSelectionRotorType;	// 32 = 0x20
    NSArray *_customRotorActionCategories;	// 40 = 0x28
    NSArray *_customContent;	// 48 = 0x30
    long long _customContentIndex;	// 56 = 0x38
    long long _publicCustomRotorIndex;	// 64 = 0x40
    NSMutableArray *_customPublicRotors;	// 72 = 0x48
    long long _customRotorIndex;	// 80 = 0x50
    VOTElement *_currentRotorElement;	// 88 = 0x58
    id <VOTRotorDelegate> _delegate;	// 96 = 0x60
    long long _customActionIndex;	// 104 = 0x68
}

+ (_Bool)rotorIsUsedForSettingAdjustment:(long long)arg1;	// IMP=0x00000001000f6db4
+ (id)stringForRotorType:(long long)arg1;	// IMP=0x00000001000f63a0
+ (id)rotorTypeForPreferenceString:(id)arg1;	// IMP=0x00000001000f5a30
+ (long long)rotorTypeForSystemRotorType:(id)arg1;	// IMP=0x00000001000f561c
+ (long long)rotorTypeForSearchType:(long long)arg1;	// IMP=0x00000001000f55bc
+ (id)systemRotorTypeForRotorType:(long long)arg1;	// IMP=0x00000001000f545c
+ (id)systemRotorTypeForSearchType:(long long)arg1;	// IMP=0x00000001000f52b0
- (void).cxx_destruct;	// IMP=0x00000001000f6e48
@property(nonatomic) long long customActionIndex; // @synthesize customActionIndex=_customActionIndex;
@property(readonly, nonatomic) long long publicCustomRotorIndex; // @synthesize publicCustomRotorIndex=_publicCustomRotorIndex;
@property(nonatomic) __weak id <VOTRotorDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak VOTElement *currentRotorElement; // @synthesize currentRotorElement=_currentRotorElement;
@property(readonly, nonatomic) long long customRotorIndex; // @synthesize customRotorIndex=_customRotorIndex;
- (void)setRotorItems:(id)arg1;	// IMP=0x00000001000f6d20
- (id)rotorItems;	// IMP=0x00000001000f6c98
- (id)currentRotorString;	// IMP=0x00000001000f6c24
- (id)currentRotorHint;	// IMP=0x00000001000f6bc0
- (_Bool)inMisspelledWordRotor;	// IMP=0x00000001000f69d0
- (id)_currentCustomRotorString;	// IMP=0x00000001000f67bc
- (long long)indexOfRotorItem:(long long)arg1;	// IMP=0x00000001000f59c4
- (void)clearRotorTypes;	// IMP=0x00000001000f59bc
- (_Bool)verifyNoDuplicatesInRotor;	// IMP=0x00000001000f5924
- (id)currentVisualRotorString;	// IMP=0x00000001000f58b0
- (void)decrement:(_Bool *)arg1 userInitiated:(_Bool)arg2 eventOrigin:(long long)arg3;	// IMP=0x00000001000f5294
- (void)increment:(_Bool *)arg1 userInitiated:(_Bool)arg2 eventOrigin:(long long)arg3;	// IMP=0x00000001000f5278
- (void)_moveRotor:(_Bool)arg1 didWrap:(_Bool *)arg2 userInitiated:(_Bool)arg3 eventOrigin:(long long)arg4;	// IMP=0x00000001000f4f1c
- (id)customPublicRotors;	// IMP=0x00000001000f4f14
- (_Bool)rotorTypeIsValid:(long long)arg1 eventOrigin:(long long)arg2;	// IMP=0x00000001000f4f08
@property(readonly, nonatomic) long long currentRotorType; // @synthesize currentRotorType=_currentRotorType;
@property(readonly, nonatomic) long long currentSelectionRotorType; // @dynamic currentSelectionRotorType;
- (void)setCurrentRotorType:(long long)arg1 saveToPreferences:(_Bool)arg2 userInitiated:(_Bool)arg3;	// IMP=0x00000001000f4b8c
- (void)speakRotorType;	// IMP=0x00000001000f49d8
@property(readonly, nonatomic) long long rotorIndex; // @dynamic rotorIndex;
@property(readonly, nonatomic) long long rotorCount; // @dynamic rotorCount;
- (void)dealloc;	// IMP=0x00000001000f492c
- (id)init;	// IMP=0x00000001000f48a4

@end

