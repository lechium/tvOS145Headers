//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class CtrInternalClient, NSString, THThreadNetworkCredentialsStoreLocalClient, ThreadNetworkfinder;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface ThreadNetworkManagerInstance : NSObject
{
    unsigned char _lastUpdatedNCPChannel;	// 8 = 0x8
    unsigned char _lastHostConfiguredChannel;	// 9 = 0x9
    _Bool _waitForSync;	// 10 = 0xa
    int _prevKnownNCPState;	// 12 = 0xc
    int _lastKnownNCPState;	// 16 = 0x10
    int _lastKnownNodeType;	// 20 = 0x14
    CtrInternalClient *_CtrInternalClientPtr;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_fQueue;	// 32 = 0x20
    ThreadNetworkfinder *_BAFinder;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_tnm_scan_queue;	// 48 = 0x30
    THThreadNetworkCredentialsStoreLocalClient *_keyChainStore;	// 56 = 0x38
    NSString *_hwAddr;	// 64 = 0x40
    NSString *_deviceName;	// 72 = 0x48
    NSObject<OS_dispatch_source> *_tnm_nw_topology_fetch_timer;	// 80 = 0x50
}

- (void).cxx_destruct;	// IMP=0x000000010017f098
@property(retain) NSObject<OS_dispatch_source> *tnm_nw_topology_fetch_timer; // @synthesize tnm_nw_topology_fetch_timer=_tnm_nw_topology_fetch_timer;
@property _Bool waitForSync; // @synthesize waitForSync=_waitForSync;
@property(retain) NSString *deviceName; // @synthesize deviceName=_deviceName;
@property(retain) NSString *hwAddr; // @synthesize hwAddr=_hwAddr;
@property(retain) THThreadNetworkCredentialsStoreLocalClient *keyChainStore; // @synthesize keyChainStore=_keyChainStore;
@property(retain) NSObject<OS_dispatch_queue> *tnm_scan_queue; // @synthesize tnm_scan_queue=_tnm_scan_queue;
@property(retain) ThreadNetworkfinder *BAFinder; // @synthesize BAFinder=_BAFinder;
@property(retain) NSObject<OS_dispatch_queue> *fQueue; // @synthesize fQueue=_fQueue;
@property int lastKnownNodeType; // @synthesize lastKnownNodeType=_lastKnownNodeType;
@property int lastKnownNCPState; // @synthesize lastKnownNCPState=_lastKnownNCPState;
@property int prevKnownNCPState; // @synthesize prevKnownNCPState=_prevKnownNCPState;
@property unsigned char lastHostConfiguredChannel; // @synthesize lastHostConfiguredChannel=_lastHostConfiguredChannel;
@property unsigned char lastUpdatedNCPChannel; // @synthesize lastUpdatedNCPChannel=_lastUpdatedNCPChannel;
@property(retain) CtrInternalClient *CtrInternalClientPtr; // @synthesize CtrInternalClientPtr=_CtrInternalClientPtr;
- (void)startNetworkTopologyBuilder;	// IMP=0x000000010017ea18
- (void)checkAndResumeNW;	// IMP=0x000000010017e928
- (void)triggerScan;	// IMP=0x000000010017e5b0
- (void)resumeNetwork;	// IMP=0x000000010017e290
- (void)getNCPChannel;	// IMP=0x000000010017e058
- (struct Result)getNCPNetworkInfo:(CDStruct_4d38e60a *)arg1;	// IMP=0x000000010017d564
- (id)getHardwareAddress;	// IMP=0x000000010017d20c
- (void)getNCPState:(_Bool)arg1;	// IMP=0x000000010017ce68
- (int)setChannel:(struct dict)arg1;	// IMP=0x000000010017aa08
- (int)setLogTimestampBase;	// IMP=0x000000010017a604
- (int)setChannelUsingChannelManger:(struct dict)arg1;	// IMP=0x0000000100179fe4
- (int)attachToNetwork:(struct dict)arg1 output:(struct dict *)arg2;	// IMP=0x000000010017974c
- (int)formNewNetwork:(struct dict)arg1;	// IMP=0x0000000100178a7c
- (struct Result)getPskc:(struct Ctr_generatePSKc *)arg1 pskc_str:(basic_string_7c0a1c0b *)arg2;	// IMP=0x00000001001785ac
- (struct Result)saveThreadConfiguration:(struct dict *)arg1 passPhrase:(const char *)arg2;	// IMP=0x00000001001771cc
- (void)updateKeychainWithUpdatedNCPChannel:(unsigned char)arg1;	// IMP=0x000000010017600c
- (struct Result)saveThreadConfiguration:(struct dict *)arg1;	// IMP=0x0000000100175ffc
- (_Bool)isCurrentNetworkSameAsOneToStart:(id)arg1;	// IMP=0x000000010017561c
- (_Bool)clearThreadCredentials;	// IMP=0x000000010017553c
- (_Bool)areTwoNetworksSame:(id)arg1 nwname:(id)arg2 creds_xpan:(id)arg3 xpan:(id)arg4;	// IMP=0x00000001001753a8
- (_Bool)isNetworkSame:(struct Ctr_attachToNetwork *)arg1 nwname:(basic_string_7c0a1c0b *)arg2 xpan:(basic_string_7c0a1c0b *)arg3;	// IMP=0x0000000100174fd0
- (int)commissionOrFormNetwork:(struct dict)arg1 is_attaching:(_Bool)arg2 cfg_attach:(struct Ctr_attachToNetwork *)arg3 output:(struct dict *)arg4;	// IMP=0x0000000100173fd4
- (int)attachWithAllCreds:(const char *)arg1 credentialsRecord_t:(id)arg2 output:(struct dict *)arg3;	// IMP=0x00000001001738a4
- (int)formNetworkWithCreds:(const char *)arg1 credentialsRecord_t:(id)arg2 output:(struct dict *)arg3;	// IMP=0x00000001001728fc
- (int)joinerAttach:(const char *)arg1 output:(struct dict *)arg2;	// IMP=0x0000000100172578
- (int)commissionToSpecifNetwork:(const char *)arg1 credentialsRecord_t:(id)arg2 output:(struct dict *)arg3;	// IMP=0x0000000100171954
- (id)dataFromHexString:(id)arg1;	// IMP=0x00000001001717cc
- (_Bool)tnm_internalInstall;	// IMP=0x00000001001717c4
- (_Bool)commissioningCore:(id)arg1 PSKd:(id)arg2 server:(id)arg3 index:(int)arg4;	// IMP=0x00000001001708c4
- (void)commissionerDisconnect:(id)arg1;	// IMP=0x00000001001707bc
- (int)commission:(struct dict *)arg1;	// IMP=0x000000010016fdf8
- (int)getMePassPhraseForThisNetwork:(id)arg1 passPhrase:(id *)arg2;	// IMP=0x000000010016f5e4
- (int)getMeCredentialsForThisNetwork:(id)arg1 credentialsRecord_t:(id *)arg2;	// IMP=0x000000010016eee8
- (int)threadStart:(const char *)arg1 output:(struct dict *)arg2;	// IMP=0x000000010016eb9c
- (int)threadLeave;	// IMP=0x000000010016ea48
- (_Bool)alreadyOnTheSameNetwork:(id)arg1;	// IMP=0x000000010016e774
- (int)howToStartThreadNetwork:(const char *)arg1 credentialsRecord_t:(id *)arg2;	// IMP=0x000000010016d540
- (int)howToGetOnTheNetwork:(id)arg1;	// IMP=0x000000010016d2e8
- (int)retrieveCredentialsForUniqueId:(const char *)arg1 credentialsRecord_t:(id *)arg2;	// IMP=0x000000010016cbdc
- (int)initializeKeyChainStore;	// IMP=0x000000010016cb40
- (struct dict)threadNetworkManagerInstance_MsgHandler:(basic_string_7c0a1c0b)arg1 message:(struct dict)arg2;	// IMP=0x000000010016c3b8
- (void)createDriverInterface:(id)arg1;	// IMP=0x000000010016aa54
- (unsigned long long)getCountOfAvailableNetworksForCommissioning;	// IMP=0x000000010016a728
- (id)init:(id)arg1;	// IMP=0x000000010016a674
- (void)initSyslogDumpInfo;	// IMP=0x00000001001678ec
- (void)captureNCPStateInformation:(id *)arg1;	// IMP=0x00000001001677c4
- (id)getNCPProperties;	// IMP=0x0000000100166948
- (basic_string_7c0a1c0b)getNCPPropertyAsString:(const char *)arg1;	// IMP=0x00000001001666c4
- (id)getNCPPropertyInDict:(const char *)arg1;	// IMP=0x0000000100166430
- (id)getNCPStatusInDict;	// IMP=0x0000000100166174

@end

